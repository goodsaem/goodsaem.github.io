{"meta":{"title":"good","subtitle":"good","description":"good","author":"good","url":"http://goodsaem.github.io","root":"/"},"pages":[{"title":"사이트가 리뉴얼 되었습니다.","date":"2023-03-28T00:17:33.000Z","updated":"2025-06-29T07:42:00.748Z","comments":true,"path":"404.html","permalink":"http://goodsaem.github.io/404.html","excerpt":"","text":"사이트가 리뉴얼 되었습니다.변경된 내용은 아래와 같습니다. 클릭하시여 내용 확인 바랍니다. 무료로 hexo 블로그 만들기Github 계정생성Github Page 생성방법Github SSH 연결방법애드센스(adsense) 고시를 통과하다.실무자가 알려주는 vue.js로또번호 생성기hexo 에서 fontawesome 사용하기mac에 oepnjdk 19.0.1 버전 설치방법GitLab 사용법H2DB 설치Mac 에 Maria DB 설치Windows + Vue.js 개발환경 구성MAC + PHP + RESTAPI 환경설정1&#x2F;8 mac+php+mariadb+nginx+ssl 설정2&#x2F;8 mac+php+mariadb+nginx+ssl 설정3&#x2F;8 mac+php+mariadb+nginx+ssl 설정4&#x2F;8 mac+php+mariadb+nginx+ssl 설정5&#x2F;8 mac+php+mariadb+nginx+ssl 설정6&#x2F;8 mac+php+mariadb+nginx+ssl 설정7&#x2F;8 mac+php+mariadb+nginx+ssl 설정8&#x2F;8 mac+php+mariadb+nginx+ssl 설정1&#x2F;13 무료로 aws + php 서버 구축2&#x2F;13 무료로 aws + php 서버 구축3&#x2F;13 무료로 aws + php 서버 구축4&#x2F;13 무료로 aws + php 서버 구축5&#x2F;13 무료로 aws + php 서버 구축6&#x2F;13 무료로 aws + php 서버 구축7&#x2F;13 무료로 aws + php 서버 구축8&#x2F;13 무료로 aws + php 서버 구축9&#x2F;13 무료로 aws + php 서버 구축10&#x2F;13 무료로 aws + php 서버 구축11&#x2F;13 무료로 aws + php 서버 구축12&#x2F;13 무료로 aws + php 서버 구축13&#x2F;13 무료로 aws + php 서버 구축1&#x2F;13 무료 aws + springboot 서버 구축2&#x2F;13 무료 aws + springboot 서버 구축3&#x2F;13 무료 aws + springboot 서버 구축4&#x2F;13 무료 aws + springboot 서버 구축5&#x2F;13 무료 aws + springboot 서버 구축6&#x2F;13 무료 aws + springboot 서버 구축7&#x2F;13 무료 aws + springboot 서버 구축8&#x2F;13 무료 aws + springboot 서버 구축9&#x2F;13 무료 aws + springboot 서버 구축10&#x2F;13 무료 aws + springboot 서버 구축11&#x2F;13 무료 aws + springboot 서버 구축12&#x2F;13 무료 aws + springboot 서버 구축13&#x2F;13 무료 aws + springboot 서버 구축1. SpringBoot Backend 서버 구축2. SpringBoot Backend 서버 구축3. SpringBoot Backend 서버 구축4. SpringBoot Backend 서버 구축5. SpringBoot Backend 서버 구축6. SpringBoot Backend 서버 구축7. SpringBoot Backend 서버 구축8. SpringBoot Backend 서버 구축9. SpringBoot Backend 서버 구축10. SpringBoot Backend 서버 구축mac에서 mariadb 계정생성mac 환경에서 node.js 설치하기1. JHipster 설치2. JHipster 실행vuejs 서비스 포트 변경1. mac intellij 코드정리 단축키1. mac에서 virtualbox 로 window server 2022 평가판 설치하는 방법"},{"title":"사이트가 리뉴얼 되었습니다.","date":"2023-03-28T00:17:33.000Z","updated":"2025-06-29T07:42:01.465Z","comments":true,"path":"index.html","permalink":"http://goodsaem.github.io/index.html","excerpt":"","text":"사이트가 리뉴얼 되었습니다.변경된 내용은 아래와 같습니다. 클릭하시여 내용 확인 바랍니다. 무료로 hexo 블로그 만들기Github 계정생성Github Page 생성방법Github SSH 연결방법애드센스(adsense) 고시를 통과하다.실무자가 알려주는 vue.js로또번호 생성기hexo 에서 fontawesome 사용하기mac에 oepnjdk 19.0.1 버전 설치방법GitLab 사용법H2DB 설치Mac 에 Maria DB 설치Windows + Vue.js 개발환경 구성MAC + PHP + RESTAPI 환경설정1&#x2F;8 mac+php+mariadb+nginx+ssl 설정2&#x2F;8 mac+php+mariadb+nginx+ssl 설정3&#x2F;8 mac+php+mariadb+nginx+ssl 설정4&#x2F;8 mac+php+mariadb+nginx+ssl 설정5&#x2F;8 mac+php+mariadb+nginx+ssl 설정6&#x2F;8 mac+php+mariadb+nginx+ssl 설정7&#x2F;8 mac+php+mariadb+nginx+ssl 설정8&#x2F;8 mac+php+mariadb+nginx+ssl 설정1&#x2F;13 무료로 aws + php 서버 구축2&#x2F;13 무료로 aws + php 서버 구축3&#x2F;13 무료로 aws + php 서버 구축4&#x2F;13 무료로 aws + php 서버 구축5&#x2F;13 무료로 aws + php 서버 구축6&#x2F;13 무료로 aws + php 서버 구축7&#x2F;13 무료로 aws + php 서버 구축8&#x2F;13 무료로 aws + php 서버 구축9&#x2F;13 무료로 aws + php 서버 구축10&#x2F;13 무료로 aws + php 서버 구축11&#x2F;13 무료로 aws + php 서버 구축12&#x2F;13 무료로 aws + php 서버 구축13&#x2F;13 무료로 aws + php 서버 구축1&#x2F;13 무료 aws + springboot 서버 구축2&#x2F;13 무료 aws + springboot 서버 구축3&#x2F;13 무료 aws + springboot 서버 구축4&#x2F;13 무료 aws + springboot 서버 구축5&#x2F;13 무료 aws + springboot 서버 구축6&#x2F;13 무료 aws + springboot 서버 구축7&#x2F;13 무료 aws + springboot 서버 구축8&#x2F;13 무료 aws + springboot 서버 구축9&#x2F;13 무료 aws + springboot 서버 구축10&#x2F;13 무료 aws + springboot 서버 구축11&#x2F;13 무료 aws + springboot 서버 구축12&#x2F;13 무료 aws + springboot 서버 구축13&#x2F;13 무료 aws + springboot 서버 구축1. SpringBoot Backend 서버 구축2. SpringBoot Backend 서버 구축3. SpringBoot Backend 서버 구축4. SpringBoot Backend 서버 구축5. SpringBoot Backend 서버 구축6. SpringBoot Backend 서버 구축7. SpringBoot Backend 서버 구축8. SpringBoot Backend 서버 구축9. SpringBoot Backend 서버 구축10. SpringBoot Backend 서버 구축mac에서 mariadb 계정생성mac 환경에서 node.js 설치하기1. JHipster 설치2. JHipster 실행vuejs 서비스 포트 변경1. mac intellij 코드정리 단축키1. mac에서 virtualbox 로 window server 2022 평가판 설치하는 방법"},{"title":"","date":"2025-06-29T07:42:01.338Z","updated":"2025-06-29T07:42:01.338Z","comments":true,"path":"google9e74ed6d7227a69a.html","permalink":"http://goodsaem.github.io/google9e74ed6d7227a69a.html","excerpt":"","text":"google-site-verification: google9e74ed6d7227a69a.html"},{"title":"","date":"2025-06-29T07:42:01.465Z","updated":"2025-06-29T07:42:01.465Z","comments":true,"path":"naver38b32e176100c8bddb4daa5b1a482977.html","permalink":"http://goodsaem.github.io/naver38b32e176100c8bddb4daa5b1a482977.html","excerpt":"","text":"naver-site-verification: naver38b32e176100c8bddb4daa5b1a482977.html"},{"title":"","date":"2025-06-29T07:42:01.481Z","updated":"2025-06-29T07:42:01.481Z","comments":true,"path":"naverd2edc2cf1203312f4973c6e30fb6674b.html","permalink":"http://goodsaem.github.io/naverd2edc2cf1203312f4973c6e30fb6674b.html","excerpt":"","text":"naver-site-verification: naverd2edc2cf1203312f4973c6e30fb6674b.html"},{"title":"goodsaem","date":"2025-06-22T06:12:12.000Z","updated":"2025-06-29T07:42:01.236Z","comments":true,"path":"about/index.html","permalink":"http://goodsaem.github.io/about/index.html","excerpt":"","text":"goodsaem과 코딩을 ~~ 코딩 하는게 즐겁다. 무언가 알아가고 새로운걸 배우면서 내가 성장할때 보람을 느낀다. 많은 기술블로그로 부터 새로운 기술을 배웠고 나도 누군가에게 무언가 배풀수 있는 사람이 되고자 블로그를 개설했다. 글을 쓰는게 쉽지는 않지만 계속 쓰다보면 좋아지지 않을까 꾸준히 포스팅 하자. 누군가에게 도움이 되는 기술 블로그로 성장하고 하루 1000명이 꾸준히 방문하는 블로그를 만드는게 1차 목표다. 목표를 달성할때 마다 이글을 업데이트 하겠다. 빠른 시일내에 1,000명 달성을 위해 화이팅!!! 2023년3월8일 굳쌤... 새롭게 시작한다 2025-06-20"},{"title":"","date":"2025-06-29T07:42:01.236Z","updated":"2025-06-29T07:42:01.236Z","comments":true,"path":"css/callout.css","permalink":"http://goodsaem.github.io/css/callout.css","excerpt":"","text":".callout { border-left: 5px solid #ccc; padding: 1em; margin: 1.5em 0; border-radius: 10px; background: #f9f9f9; } .callout-info { border-color: #2196f3; background: #e3f2fd; } .callout-tip { border-color: #4caf50; background: #e8f5e9; } .callout-warning { border-color: #ff9800; background: #fff3e0; } .callout-danger { border-color: #f44336; background: #ffebee; } .callout-title { font-weight: bold; margin-bottom: 0.5em; }"},{"title":"","date":"2025-06-29T07:42:01.338Z","updated":"2025-06-29T07:42:01.338Z","comments":true,"path":"drawio/viewer-static.min.js","permalink":"http://goodsaem.github.io/drawio/viewer-static.min.js","excerpt":"","text":"window.PROXY_URL=window.PROXY_URL||\"https://viewer.diagrams.net/proxy\";window.STYLE_PATH=window.STYLE_PATH||\"https://viewer.diagrams.net/styles\";window.SHAPES_PATH=window.SHAPES_PATH||\"https://viewer.diagrams.net/shapes\";window.STENCIL_PATH=window.STENCIL_PATH||\"https://viewer.diagrams.net/stencils\";window.DRAW_MATH_URL=window.DRAW_MATH_URL||\"https://viewer.diagrams.net/math/es5\";window.GRAPH_IMAGE_PATH=window.GRAPH_IMAGE_PATH||\"https://viewer.diagrams.net/img\"; window.mxImageBasePath=window.mxImageBasePath||\"https://viewer.diagrams.net/mxgraph/images\";window.mxBasePath=window.mxBasePath||\"https://viewer.diagrams.net/mxgraph/\";window.mxLoadStylesheets=window.mxLoadStylesheets||!1; //fgnass.github.com/spin.js#v2.0.0 !function(a,b){\"object\"==typeof exports?module.exports=b():\"function\"==typeof define&&define.amd?define(b):a.Spinner=b()}(this,function(){\"use strict\";function a(a,b){var c,d=document.createElement(a||\"div\");for(c in b)d[c]=b[c];return d}function b(a){for(var b=1,c=arguments.length;c>b;b++)a.appendChild(arguments[b]);return a}function c(a,b,c,d){var e=[\"opacity\",b,~~(100*a),c,d].join(\"-\"),f=.01+c/d*100,g=Math.max(1-(1-a)/b*(100-f),a),h=j.substring(0,j.indexOf(\"Animation\")).toLowerCase(),i=h&&\"-\"+h+\"-\"||\"\";return l[e]||(m.insertRule(\"@\"+i+\"keyframes \"+e+\"{0%{opacity:\"+g+\"}\"+f+\"%{opacity:\"+a+\"}\"+(f+.01)+\"%{opacity:1}\"+(f+b)%100+\"%{opacity:\"+a+\"}100%{opacity:\"+g+\"}}\",m.cssRules.length),l[e]=1),e}function d(a,b){var c,d,e=a.style;for(b=b.charAt(0).toUpperCase()+b.slice(1),d=0;d1,filter:i}),c(\"fill\",{color:g(d.color,a),opacity:d.opacity}),c(\"stroke\",{opacity:0}))))}var i,j=d.length+d.width,k=2*j,l=2*-(d.width+d.length)+\"px\",m=e(f(),{position:\"absolute\",top:l,left:l});if(d.shadow)for(i=1;ie})}catch(e){return console.warn(\"TrustedTypes policy \"+r+\" could not be created.\"),null}}(j,c)),null!==le&&\"string\"==typeof ce&&(ce=le.createHTML(\"\"));i&&i(e),ft=e}},Tt=w({},[...C,...x,...I]),yt=w({},[...M,...k]),Et=function(e){f(o.removed,{element:e});try{ae(e).removeChild(e)}catch(t){V(e)}},At=function(e,t){try{f(o.removed,{attribute:t.getAttributeNode(e),from:t})}catch(e){f(o.removed,{attribute:null,from:t})}if(t.removeAttribute(e),\"is\"===e)if(Fe||Be)try{Et(t)}catch(e){}else try{t.setAttribute(e,\"\")}catch(e){}},_t=function(e){let t=null,n=null;if(He)e=\"\"+e;else{const t=T(e,/^[\\r\\n\\t ]+/);n=t&&t[0]}\"application/xhtml+xml\"===ut&&ot===nt&&(e=''+e+\"\");const o=le?le.createHTML(e):e;if(ot===nt)try{t=(new Y).parseFromString(o,ut)}catch(e){}if(!t||!t.documentElement){t=se.createDocument(ot,\"template\",null);try{t.documentElement.innerHTML=rt?ce:o}catch(e){}}const i=t.body||t.documentElement;return e&&n&&i.insertBefore(r.createTextNode(n),i.childNodes[0]||null),ot===nt?pe.call(t,ze?\"html\":\"body\")[0]:ze?t.documentElement:i},St=function(e){return ue.call(e.ownerDocument||e,e,B.SHOW_ELEMENT|B.SHOW_COMMENT|B.SHOW_TEXT|B.SHOW_PROCESSING_INSTRUCTION|B.SHOW_CDATA_SECTION,null)},bt=function(e){return e instanceof G&&(\"string\"!=typeof e.nodeName||\"string\"!=typeof e.textContent||\"function\"!=typeof e.removeChild||!(e.attributes instanceof W)||\"function\"!=typeof e.removeAttribute||\"function\"!=typeof e.setAttribute||\"string\"!=typeof e.namespaceURI||\"function\"!=typeof e.insertBefore||\"function\"!=typeof e.hasChildNodes)},Nt=function(e){return\"function\"==typeof R&&e instanceof R};function Rt(e,t,n){u(e,(e=>{e.call(o,t,n,ft)}))}const wt=function(e){let t=null;if(Rt(de.beforeSanitizeElements,e,null),bt(e))return Et(e),!0;const n=pt(e.nodeName);if(Rt(de.uponSanitizeElement,e,{tagName:n,allowedTags:Ne}),e.hasChildNodes()&&!Nt(e.firstElementChild)&&S(/{m=y(m,e,\" \")}));const f=pt(e.nodeName);if(Ot(f,s,m)){if(le&&\"object\"==typeof j&&\"function\"==typeof j.getAttributeType)if(l);else switch(j.getAttributeType(f,s)){case\"TrustedHTML\":m=le.createHTML(m);break;case\"TrustedScriptURL\":m=le.createScriptURL(m)}try{l?e.setAttributeNS(l,a,m):e.setAttribute(a,m),bt(e)?Et(e):p(o.removed)}catch(e){}}}Rt(de.afterSanitizeAttributes,e,null)},Lt=function e(t){let n=null;const o=St(t);for(Rt(de.beforeSanitizeShadowDOM,t,null);n=o.nextNode();)Rt(de.uponSanitizeShadowNode,n,null),wt(n),vt(n),n.content instanceof s&&e(n.content);Rt(de.afterSanitizeShadowDOM,t,null)};return o.sanitize=function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=null,r=null,i=null,l=null;if(rt=!e,rt&&(e=\"\\x3c!--\\x3e\"),\"string\"!=typeof e&&!Nt(e)){if(\"function\"!=typeof e.toString)throw b(\"toString is not a function\");if(\"string\"!=typeof(e=e.toString()))throw b(\"dirty is not a string, aborting\")}if(!o.isSupported)return e;if(Pe||gt(t),o.removed=[],\"string\"==typeof e&&(Xe=!1),Xe){if(e.nodeName){const t=pt(e.nodeName);if(!Ne[t]||ve[t])throw b(\"root node is forbidden and cannot be sanitized in-place\")}}else if(e instanceof R)n=_t(\"\\x3c!----\\x3e\"),r=n.ownerDocument.importNode(e,!0),r.nodeType===J&&\"BODY\"===r.nodeName||\"HTML\"===r.nodeName?n=r:n.appendChild(r);else{if(!Fe&&!ke&&!ze&&-1===e.indexOf(\" div {\\n margin-bottom: 20px;\\n box-sizing: border-box;\\n }\\n a, a * {\\n pointer-events: none;\\n }\\n}\\n@media print {\\n body {\\n margin: 0px;\\n }\\n * {\\n -webkit-print-color-adjust: exact;\\n }\\n}'; mxPrintPreview.prototype.scale=null;mxPrintPreview.prototype.border=0;mxPrintPreview.prototype.marginTop=0;mxPrintPreview.prototype.marginBottom=0;mxPrintPreview.prototype.x0=0;mxPrintPreview.prototype.y0=0;mxPrintPreview.prototype.autoOrigin=!0;mxPrintPreview.prototype.printOverlays=!1;mxPrintPreview.prototype.printControls=!1;mxPrintPreview.prototype.printBackgroundImage=!1;mxPrintPreview.prototype.backgroundColor=\"#ffffff\";mxPrintPreview.prototype.borderColor=null; mxPrintPreview.prototype.title=null;mxPrintPreview.prototype.pageSelector=null;mxPrintPreview.prototype.wnd=null;mxPrintPreview.prototype.targetWindow=null;mxPrintPreview.prototype.pageCount=0;mxPrintPreview.prototype.clipping=!0;mxPrintPreview.prototype.getWindow=function(){return this.wnd}; mxPrintPreview.prototype.getDoctype=function(){var a=\"\";8==document.documentMode?a='':8"}],"posts":[{"title":"MobaXterm 설치","slug":"setup/setup_mobaxterm","date":"2025-06-29T13:11:00.000Z","updated":"2025-06-29T13:11:32.135Z","comments":true,"path":"setup/setup_mobaxterm/","link":"","permalink":"http://goodsaem.github.io/setup/setup_mobaxterm/","excerpt":"","text":"MobaXterm 설치 윈도우 SSH 클라이언트 필요하여 아래 프로그램을 설치한다. 사이트: https://mobaxterm.mobatek.net 형태: 무료 Home Edition (포터블 또는 설치형) 장점: SSH + X11 + SFTP + 탭 UI GUI로 파일 전송 가능 Git Bash, WSL, RDP 등 통합 환경 단점: 무거움, 상업용 제한 포터블 에디션으로 설치 https://download.mobatek.net/2522025040602403/MobaXterm_Portable_v25.2.zip 설치완료","categories":[{"name":"Setup","slug":"Setup","permalink":"http://goodsaem.github.io/categories/Setup/"}],"tags":[{"name":"MobaXterm","slug":"MobaXterm","permalink":"http://goodsaem.github.io/tags/MobaXterm/"}]},{"title":"오라클 클라우드 인스턴스생성","slug":"setup/setup-oracle-cloud-create-instance","date":"2025-06-29T11:41:30.000Z","updated":"2025-06-29T12:13:12.110Z","comments":true,"path":"setup/setup-oracle-cloud-create-instance/","link":"","permalink":"http://goodsaem.github.io/setup/setup-oracle-cloud-create-instance/","excerpt":"","text":"오라클 클라우드 인스턴스생성 참고 : https://velog.io/@wontaekoh/Oracle-Cloud-Spring-Boot-%EC%95%A0%ED%94%8C%EB%A6%AC%EC%BC%80%EC%9D%B4%EC%85%98-%EB%B0%B0%ED%8F%AC 오라클 클라우드 인스턴스 생성하는 방법에 대해서 정리함 접속주소 https://cloud.oracle.com/ 이름은 내가 알아보기 쉽게 수정한다. 이미지 변경 버튼을 클릭하여 Ubuntu 를 선택한다. 아래로 스크롤을 내려 버전을 24.04 버전을 선택하고 이미지 선택 버튼을 클릭한다. 보안 다음 네트워킹 에서 새 가상 클라우드 네트워크 생성 및 새 퍼블릭 서브넷 생성 을 선택한다. 나머지는 그대로 두로 ssh 부분에 프라이빗 키 다운로드 버튼을 클릭하여 키를 다운로드 하고 다음 버튼을 클릭한다. 스토리지는 기본값으로 해놓은 상태에서 다음 예상 비용은 있지만 청구되는 금액이 아님 생성 버튼을 클릭하여 생성한다. 아래와 같이 만들어 지고 있다. 고정 아이피 설정 인스턴스 이름을 클릭한다. 네트워킹 아래에 연결된 vnic 쪽에서 이름을 클릭한다. IP 관리 탭을 클릭한다 ipv4 주소 에서 ... 을 클릭하여 편집 메뉴를 클릭한다. 퍼블릭 ip 없음을 선태학고 업데이트 버튼을 클릭한다. 다시 편집을 클릭한다. 예약된 퍼블릭 ip /새 예약된 ip 주소 생성 / 퍼블릭 ip 이름은 적당한 이름(goodsame-public-ip)으로 / Oralce을 선택 / 업데이트 버튼을 클릭한다. 여기까지 설정하면 고정아이피 셋업이 완료됨 오라클 클라우드 인스턴스 연결 MobaXterm 으로 연결하는 방법 설명 New session 버튼 클릭 ssh 아이콘 클릭 / Remote host 에 고정 아이피 입력 / Specify username 에 ubuntu 입력 / Advanced SSH settings 에 user private key 인스턴스 생성시 추가한 키 선택후 / ok 버튼 클릭 접속 성공","categories":[{"name":"Setup","slug":"Setup","permalink":"http://goodsaem.github.io/categories/Setup/"}],"tags":[{"name":"Oracle","slug":"Oracle","permalink":"http://goodsaem.github.io/tags/Oracle/"},{"name":"Cloud","slug":"Cloud","permalink":"http://goodsaem.github.io/tags/Cloud/"},{"name":"Free tier","slug":"Free-tier","permalink":"http://goodsaem.github.io/tags/Free-tier/"}]},{"title":"오라클 클라우드 프로티어 무료가입","slug":"setup/setup-oracle-clound-freetier","date":"2025-06-29T08:13:36.000Z","updated":"2025-06-29T11:34:12.179Z","comments":true,"path":"setup/setup-oracle-clound-freetier/","link":"","permalink":"http://goodsaem.github.io/setup/setup-oracle-clound-freetier/","excerpt":"","text":"오라클 클라우드 프리티어 무료가입 오라클 클라우드 프리티어 가입하는 방법에 대한 정리 2025-06-29 17:34:05 가입주소는 아래와 같다. https://www.oracle.com/kr/cloud/free/ 무료로 시작하기 버튼 클릭 이름과 이메일 주소 입력 아래와 같은 메일을 받으면 Verify Email 버튼을 클릭하여 인증진행 아래와 같이 영문이름 홈영역을 한국으로 선택한다. 주소 전화번호 정보를 입력한다. 계속 버튼을 클릭하여 지급 아이디(신용카드) 정보를 등록한다. 등록이 완료되면 아래와 같은 화면을 확인할수 있다. 여기까지 진행하면 아래와 같은 화면이 나온다. 가입완료 이메일로 아래와 같은 완료 메일을 받으면 계정설정 완료","categories":[{"name":"Setup","slug":"Setup","permalink":"http://goodsaem.github.io/categories/Setup/"}],"tags":[{"name":"Oracle","slug":"Oracle","permalink":"http://goodsaem.github.io/tags/Oracle/"},{"name":"Cloud","slug":"Cloud","permalink":"http://goodsaem.github.io/tags/Cloud/"},{"name":"Free tier","slug":"Free-tier","permalink":"http://goodsaem.github.io/tags/Free-tier/"}]},{"title":"hexo 에서 fontawesome 사용하기","slug":"blog/blog-fontawesome","date":"2025-06-25T06:17:16.000Z","updated":"2025-06-29T07:42:00.748Z","comments":true,"path":"blog/blog-fontawesome/","link":"","permalink":"http://goodsaem.github.io/blog/blog-fontawesome/","excerpt":"","text":"⚠️ 변경사항 fontawesome 라이브러리가 너무 오래되어 2025-06-25 15:18:58 기준기존 hexo-tag-fontawesome 플러그인을 사용하는 방식에서사용자 플러인을 추가하는 방식으로 변경함 개요Font Awesome은 블로그 글이나 템플릿 안에서 아이콘을 손쉽게 삽입할 수 있도록 도와주는아이콘 폰트 라이브러리 이다. Hexo에서 Font Awesome 사용하는 방법에 대해서 정리한다. 사용자 플러그인 추가scritps&#x2F;fa.js를 아래와 같이 코딩한다. 123456789101112131415161718192021222324252627282930hexo.extend.tag.register(&#x27;fa&#x27;, function(args) &#123; if (!args.length) return &#x27;&#x27;; const icon = args[0]; let size = &#x27;&#x27;; let style = &#x27;solid&#x27;; const extraClasses = []; const sizes = [&#x27;lg&#x27;, &#x27;xl&#x27;, &#x27;1x&#x27;, &#x27;2x&#x27;, &#x27;3x&#x27;, &#x27;4x&#x27;, &#x27;5x&#x27;, &#x27;6x&#x27;, &#x27;7x&#x27;, &#x27;8x&#x27;, &#x27;9x&#x27;, &#x27;10x&#x27;, &#x27;2xl&#x27;]; const styles = [&#x27;solid&#x27;, &#x27;regular&#x27;, &#x27;brands&#x27;]; const rotations = [&#x27;rotate-90&#x27;, &#x27;rotate-180&#x27;, &#x27;rotate-270&#x27;]; const animations = [&#x27;spin&#x27;, &#x27;pulse&#x27;, &#x27;spin-pulse&#x27;, &#x27;spin-reverse&#x27;, &#x27;beat&#x27;, &#x27;beat-fade&#x27;]; // ← 여기에 추가 const flips = [&#x27;flip-horizontal&#x27;, &#x27;flip-vertical&#x27;]; const others = [&#x27;border&#x27;, &#x27;fw&#x27;, &#x27;inverse&#x27;]; args.slice(1).forEach(arg =&gt; &#123; if (sizes.includes(arg)) &#123; size = arg; &#125; else if (styles.includes(arg)) &#123; style = arg; &#125; else if (rotations.includes(arg) || animations.includes(arg) || flips.includes(arg) || others.includes(arg)) &#123; extraClasses.push(`fa-$&#123;arg&#125;`); &#125; &#125;); return `&lt;i class=&quot;fa-$&#123;style&#125; fa-$&#123;icon&#125;$&#123;size ? &#x27; fa-&#x27; + size : &#x27;&#x27;&#125;$&#123;extraClasses.length ? &#x27; &#x27; + extraClasses.join(&#x27; &#x27;) : &#x27;&#x27;&#125;&quot;&gt;&lt;/i&gt;`;&#125;, &#123; ends: false &#125;); 최신 라이브러리 테마에 추가themes\\hueman\\layout\\common\\head.ejs 파일에 아래 내용을 추가한다. 1&lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.7.2/css/all.min.css&quot; integrity=&quot;sha512-Evv84Mr4kqVGRNSgIGL/F/aIDqQb7xQ2vcrdIwxfjThSH8CSR7PBEakCr51Ck+w+/U6swU2Im1vVX0SVk9ABhg==&quot; crossorigin=&quot;anonymous&quot; referrerpolicy=&quot;no-referrer&quot; /&gt; 수정한 파일 디렉토리 구조 사용법아래와 같이 fa 하고 아이콘 이름을 넣고 옵션을 추가하면 된다. 1&#123;% fa [icon-name] [options…] %&#125; 기본1&#123;% fa user %&#125; 유저 아이콘 출력 유저 아이콘 출력 아이콘 크기12345678910&#123;% fa user 1x %&#125; 유저 아이콘 크기 1x&#123;% fa user 2x %&#125; 유저 아이콘 크기 2x&#123;% fa user 3x %&#125; 유저 아이콘 크기 3x&#123;% fa user 4x %&#125; 유저 아이콘 크기 4x&#123;% fa user 5x %&#125; 유저 아이콘 크기 5x&#123;% fa user 6x %&#125; 유저 아이콘 크기 6x&#123;% fa user 7x %&#125; 유저 아이콘 크기 7x&#123;% fa user 8x %&#125; 유저 아이콘 크기 8x&#123;% fa user 9x %&#125; 유저 아이콘 크기 9x&#123;% fa user 10x %&#125; 유저 아이콘 크기 10x 유저 아이콘 크기 1x 유저 아이콘 크기 2x 유저 아이콘 크기 3x 유저 아이콘 크기 4x 유저 아이콘 크기 5x 유저 아이콘 크기 6x 유저 아이콘 크기 7x 유저 아이콘 크기 8x 유저 아이콘 크기 9x 유저 아이콘 크기 10x 아이콘 유형12&#123;% fa user solid %&#125; 유저 아이콘 solid&#123;% fa user regular %&#125; 유저 아이콘 regular 유저 아이콘 solid 유저 아이콘 regular 아이콘 회전1234567&#123;% fa coffee %&#125; 무회전&#123;% fa coffee rotate-90 %&#125; 90도 회전&#123;% fa coffee rotate-180 %&#125; 180도 회전&#123;% fa coffee rotate-270 %&#125; 270도 회전&#123;% fa coffee flip-horizontal %&#125; 수평방향 회전&#123;% fa coffee flip-vertical %&#125; 수직방향 회전&#123;% fa coffee flip-both %&#125; 수평수직방향 회전 무회전 90도 회전 180도 회전 270도 회전 수평방향 회전 수직방향 회전 수평수직방향 회전 아이콘 스타일링12345678910111213&lt;span style=&quot;font-size: 3em; color: Tomato;&quot;&gt; &#123;% fa camera %&#125;&lt;/span&gt;&lt;span style=&quot;font-size: 48px; color: Dodgerblue;&quot;&gt; &#123;% fa camera %&#125;&lt;/span&gt;&lt;span style=&quot;font-size: 3rem;&quot;&gt; &lt;span style=&quot;color: Mediumslateblue;&quot;&gt; &#123;% fa camera %&#125; &lt;/span&gt;&lt;/span&gt; 아이콘 애니메이션12&#123;% fa circle-plus beat %&#125;&#123;% fa heart beat %&#125; 전체 무료 사용가능 아이콘 리스트아이콘을 클릭하면 hexo 에서 사용 가능하도록 태그가 복사된다. 0 1 2 3 4 42-group 5 500px 6 7 8 9 a accessible-icon accusoft address-book address-book address-card address-card adn adversal affiliatetheme airbnb algolia align-center align-justify align-left align-right alipay amazon amazon-pay amilia anchor anchor-circle-check anchor-circle-exclamation anchor-circle-xmark anchor-lock android angellist angle-down angle-left angle-right angle-up angles-down angles-left angles-right angles-up angrycreative angular ankh app-store app-store-ios apper apple apple-pay apple-whole archway arrow-down arrow-down-1-9 arrow-down-9-1 arrow-down-a-z arrow-down-long arrow-down-short-wide arrow-down-up-across-line arrow-down-up-lock arrow-down-wide-short arrow-down-z-a arrow-left arrow-left-long arrow-pointer arrow-right arrow-right-arrow-left arrow-right-from-bracket arrow-right-long arrow-right-to-bracket arrow-right-to-city arrow-rotate-left arrow-rotate-right arrow-trend-down arrow-trend-up arrow-turn-down arrow-turn-up arrow-up arrow-up-1-9 arrow-up-9-1 arrow-up-a-z arrow-up-from-bracket arrow-up-from-ground-water arrow-up-from-water-pump arrow-up-long arrow-up-right-dots arrow-up-right-from-square arrow-up-short-wide arrow-up-wide-short arrow-up-z-a arrows-down-to-line arrows-down-to-people arrows-left-right arrows-left-right-to-line arrows-rotate arrows-spin arrows-split-up-and-left arrows-to-circle arrows-to-dot arrows-to-eye arrows-turn-right arrows-turn-to-dots arrows-up-down arrows-up-down-left-right arrows-up-to-line artstation asterisk asymmetrik at atlassian atom audible audio-description austral-sign autoprefixer avianex aviato award aws b baby baby-carriage backward backward-fast backward-step bacon bacteria bacterium bag-shopping bahai baht-sign ban ban-smoking bandage bandcamp bangladeshi-taka-sign barcode bars bars-progress bars-staggered baseball baseball-bat-ball basket-shopping basketball bath battery-empty battery-full battery-half battery-quarter battery-three-quarters battle-net bed bed-pulse beer-mug-empty behance bell bell bell-concierge bell-slash bell-slash bezier-curve bicycle bilibili bimobject binoculars biohazard bitbucket bitcoin bitcoin-sign bity black-tie blackberry blender blender-phone blog blogger blogger-b bluesky bluetooth bluetooth-b bold bolt bolt-lightning bomb bone bong book book-atlas book-bible book-bookmark book-journal-whills book-medical book-open book-open-reader book-quran book-skull book-tanakh bookmark bookmark bootstrap border-all border-none border-top-left bore-hole bots bottle-droplet bottle-water bowl-food bowl-rice bowling-ball box box-archive box-open box-tissue boxes-packing boxes-stacked braille brain brave brave-reverse brazilian-real-sign bread-slice bridge bridge-circle-check bridge-circle-exclamation bridge-circle-xmark bridge-lock bridge-water briefcase briefcase-medical broom broom-ball brush btc bucket buffer bug bug-slash bugs building building building-circle-arrow-right building-circle-check building-circle-exclamation building-circle-xmark building-columns building-flag building-lock building-ngo building-shield building-un building-user building-wheat bullhorn bullseye burger buromobelexperte burst bus bus-simple business-time buy-n-large buysellads c cable-car cake-candles calculator calendar calendar calendar-check calendar-check calendar-day calendar-days calendar-days calendar-minus calendar-minus calendar-plus calendar-plus calendar-week calendar-xmark calendar-xmark camera camera-retro camera-rotate campground canadian-maple-leaf candy-cane cannabis capsules car car-battery car-burst car-on car-rear car-side car-tunnel caravan caret-down caret-left caret-right caret-up carrot cart-arrow-down cart-flatbed cart-flatbed-suitcase cart-plus cart-shopping cash-register cat cc-amazon-pay cc-amex cc-apple-pay cc-diners-club cc-discover cc-jcb cc-mastercard cc-paypal cc-stripe cc-visa cedi-sign cent-sign centercode centos certificate chair chalkboard chalkboard-user champagne-glasses charging-station chart-area chart-bar chart-bar chart-column chart-diagram chart-gantt chart-line chart-pie chart-simple check check-double check-to-slot cheese chess chess-bishop chess-bishop chess-board chess-king chess-king chess-knight chess-knight chess-pawn chess-pawn chess-queen chess-queen chess-rook chess-rook chevron-down chevron-left chevron-right chevron-up child child-combatant child-dress child-reaching children chrome chromecast church circle circle circle-arrow-down circle-arrow-left circle-arrow-right circle-arrow-up circle-check circle-check circle-chevron-down circle-chevron-left circle-chevron-right circle-chevron-up circle-dollar-to-slot circle-dot circle-dot circle-down circle-down circle-exclamation circle-h circle-half-stroke circle-info circle-left circle-left circle-minus circle-nodes circle-notch circle-pause circle-pause circle-play circle-play circle-plus circle-question circle-question circle-radiation circle-right circle-right circle-stop circle-stop circle-up circle-up circle-user circle-user circle-xmark circle-xmark city clapperboard clipboard clipboard clipboard-check clipboard-list clipboard-question clipboard-user clock clock clock-rotate-left clone clone closed-captioning closed-captioning cloud cloud-arrow-down cloud-arrow-up cloud-bolt cloud-meatball cloud-moon cloud-moon-rain cloud-rain cloud-showers-heavy cloud-showers-water cloud-sun cloud-sun-rain cloudflare cloudscale cloudsmith cloudversify clover cmplid code code-branch code-commit code-compare code-fork code-merge code-pull-request codepen codiepie coins colon-sign comment comment comment-dollar comment-dots comment-dots comment-medical comment-nodes comment-slash comment-sms comments comments comments-dollar compact-disc compass compass compass-drafting compress computer computer-mouse confluence connectdevelop contao cookie cookie-bite copy copy copyright copyright cotton-bureau couch cow cpanel creative-commons creative-commons-by creative-commons-nc creative-commons-nc-eu creative-commons-nc-jp creative-commons-nd creative-commons-pd creative-commons-pd-alt creative-commons-remix creative-commons-sa creative-commons-sampling creative-commons-sampling-plus creative-commons-share creative-commons-zero credit-card credit-card critical-role crop crop-simple cross crosshairs crow crown crutch cruzeiro-sign css css3 css3-alt cube cubes cubes-stacked cuttlefish d d-and-d d-and-d-beyond dailymotion dart-lang dashcube database debian deezer delete-left delicious democrat deploydog deskpro desktop dev deviantart dharmachakra dhl diagram-next diagram-predecessor diagram-project diagram-successor diamond diamond-turn-right diaspora dice dice-d20 dice-d6 dice-five dice-four dice-one dice-six dice-three dice-two digg digital-ocean discord discourse disease display divide dna dochub docker dog dollar-sign dolly dong-sign door-closed door-open dove down-left-and-up-right-to-center down-long download draft2digital dragon draw-polygon dribbble dropbox droplet droplet-slash drum drum-steelpan drumstick-bite drupal dumbbell dumpster dumpster-fire dungeon dyalog e ear-deaf ear-listen earlybirds earth-africa earth-americas earth-asia earth-europe earth-oceania ebay edge edge-legacy egg eject elementor elevator ellipsis ellipsis-vertical ello ember empire envelope envelope envelope-circle-check envelope-open envelope-open envelope-open-text envelopes-bulk envira equals eraser erlang ethereum ethernet etsy euro-sign evernote exclamation expand expeditedssl explosion eye eye eye-dropper eye-low-vision eye-slash eye-slash f face-angry face-angry face-dizzy face-dizzy face-flushed face-flushed face-frown face-frown face-frown-open face-frown-open face-grimace face-grimace face-grin face-grin face-grin-beam face-grin-beam face-grin-beam-sweat face-grin-beam-sweat face-grin-hearts face-grin-hearts face-grin-squint face-grin-squint face-grin-squint-tears face-grin-squint-tears face-grin-stars face-grin-stars face-grin-tears face-grin-tears face-grin-tongue face-grin-tongue face-grin-tongue-squint face-grin-tongue-squint face-grin-tongue-wink face-grin-tongue-wink face-grin-wide face-grin-wide face-grin-wink face-grin-wink face-kiss face-kiss face-kiss-beam face-kiss-beam face-kiss-wink-heart face-kiss-wink-heart face-laugh face-laugh face-laugh-beam face-laugh-beam face-laugh-squint face-laugh-squint face-laugh-wink face-laugh-wink face-meh face-meh face-meh-blank face-meh-blank face-rolling-eyes face-rolling-eyes face-sad-cry face-sad-cry face-sad-tear face-sad-tear face-smile face-smile face-smile-beam face-smile-beam face-smile-wink face-smile-wink face-surprise face-surprise face-tired face-tired facebook facebook-f facebook-messenger fan fantasy-flight-games faucet faucet-drip fax feather feather-pointed fedex fedora ferry figma file file file-arrow-down file-arrow-up file-audio file-audio file-circle-check file-circle-exclamation file-circle-minus file-circle-plus file-circle-question file-circle-xmark file-code file-code file-contract file-csv file-excel file-excel file-export file-fragment file-half-dashed file-image file-image file-import file-invoice file-invoice-dollar file-lines file-lines file-medical file-pdf file-pdf file-pen file-powerpoint file-powerpoint file-prescription file-shield file-signature file-video file-video file-waveform file-word file-word file-zipper file-zipper files-pinwheel fill fill-drip film filter filter-circle-dollar filter-circle-xmark fingerprint fire fire-burner fire-extinguisher fire-flame-curved fire-flame-simple firefox firefox-browser first-order first-order-alt firstdraft fish fish-fins flag flag flag-checkered flag-usa flask flask-vial flickr flipboard floppy-disk floppy-disk florin-sign flutter fly folder folder folder-closed folder-closed folder-minus folder-open folder-open folder-plus folder-tree font font-awesome font-awesome font-awesome fonticons fonticons-fi football fort-awesome fort-awesome-alt forumbee forward forward-fast forward-step foursquare franc-sign free-code-camp freebsd frog fulcrum futbol futbol g galactic-republic galactic-senate gamepad gas-pump gauge gauge-high gauge-simple gauge-simple-high gavel gear gears gem gem genderless get-pocket gg gg-circle ghost gift gifts git git-alt github github-alt gitkraken gitlab gitter glass-water glass-water-droplet glasses glide glide-g globe gofore golang golf-ball-tee goodreads goodreads-g google google-drive google-pay google-play google-plus google-plus-g google-scholar google-wallet gopuram graduation-cap gratipay grav greater-than greater-than-equal grip grip-lines grip-lines-vertical grip-vertical gripfire group-arrows-rotate grunt guarani-sign guilded guitar gulp gun h hacker-news hackerrank hammer hamsa hand hand hand-back-fist hand-back-fist hand-dots hand-fist hand-holding hand-holding-dollar hand-holding-droplet hand-holding-hand hand-holding-heart hand-holding-medical hand-lizard hand-lizard hand-middle-finger hand-peace hand-peace hand-point-down hand-point-down hand-point-left hand-point-left hand-point-right hand-point-right hand-point-up hand-point-up hand-pointer hand-pointer hand-scissors hand-scissors hand-sparkles hand-spock hand-spock handcuffs hands hands-asl-interpreting hands-bound hands-bubbles hands-clapping hands-holding hands-holding-child hands-holding-circle hands-praying handshake handshake handshake-angle handshake-simple handshake-simple-slash handshake-slash hanukiah hard-drive hard-drive hashnode hashtag hat-cowboy hat-cowboy-side hat-wizard head-side-cough head-side-cough-slash head-side-mask head-side-virus heading headphones headphones-simple headset heart heart heart-circle-bolt heart-circle-check heart-circle-exclamation heart-circle-minus heart-circle-plus heart-circle-xmark heart-crack heart-pulse helicopter helicopter-symbol helmet-safety helmet-un hexagon-nodes hexagon-nodes-bolt highlighter hill-avalanche hill-rockslide hippo hips hire-a-helper hive hockey-puck holly-berry hooli hornbill horse horse-head hospital hospital hospital-user hot-tub-person hotdog hotel hotjar hourglass hourglass hourglass-end hourglass-half hourglass-half hourglass-start house house-chimney house-chimney-crack house-chimney-medical house-chimney-user house-chimney-window house-circle-check house-circle-exclamation house-circle-xmark house-crack house-fire house-flag house-flood-water house-flood-water-circle-arrow-right house-laptop house-lock house-medical house-medical-circle-check house-medical-circle-exclamation house-medical-circle-xmark house-medical-flag house-signal house-tsunami house-user houzz hryvnia-sign html5 hubspot hurricane i i-cursor ice-cream icicles icons id-badge id-badge id-card id-card id-card-clip ideal igloo image image image-portrait images images imdb inbox indent indian-rupee-sign industry infinity info instagram instalod intercom internet-explorer invision ioxhost italic itch-io itunes itunes-note j jar jar-wheat java jedi jedi-order jenkins jet-fighter jet-fighter-up jira joget joint joomla js jsfiddle jug-detergent jxl k kaaba kaggle key keybase keyboard keyboard keycdn khanda kickstarter kickstarter-k kip-sign kit-medical kitchen-set kiwi-bird korvue l land-mine-on landmark landmark-dome landmark-flag language laptop laptop-code laptop-file laptop-medical laravel lari-sign lastfm layer-group leaf leanpub left-long left-right lemon lemon less less-than less-than-equal letterboxd life-ring life-ring lightbulb lightbulb line lines-leaning link link-slash linkedin linkedin-in linode linux lira-sign list list-check list-ol list-ul litecoin-sign location-arrow location-crosshairs location-dot location-pin location-pin-lock lock lock-open locust lungs lungs-virus lyft m magento magnet magnifying-glass magnifying-glass-arrow-right magnifying-glass-chart magnifying-glass-dollar magnifying-glass-location magnifying-glass-minus magnifying-glass-plus mailchimp manat-sign mandalorian map map map-location map-location-dot map-pin markdown marker mars mars-and-venus mars-and-venus-burst mars-double mars-stroke mars-stroke-right mars-stroke-up martini-glass martini-glass-citrus martini-glass-empty mask mask-face mask-ventilator masks-theater mastodon mattress-pillow maxcdn maximize mdb medal medapps medium medrt meetup megaport memory mendeley menorah mercury message message meta meteor microblog microchip microphone microphone-lines microphone-lines-slash microphone-slash microscope microsoft mill-sign minimize mintbit minus mitten mix mixcloud mixer mizuni mobile mobile-button mobile-retro mobile-screen mobile-screen-button modx monero money-bill money-bill-1 money-bill-1 money-bill-1-wave money-bill-transfer money-bill-trend-up money-bill-wave money-bill-wheat money-bills money-check money-check-dollar monument moon moon mortar-pestle mosque mosquito mosquito-net motorcycle mound mountain mountain-city mountain-sun mug-hot mug-saucer music n naira-sign napster neos network-wired neuter newspaper newspaper nfc-directional nfc-symbol nimblr node node-js not-equal notdef note-sticky note-sticky notes-medical npm ns8 nutritionix o object-group object-group object-ungroup object-ungroup octopus-deploy odnoklassniki odysee oil-can oil-well old-republic om opencart openid opensuse opera optin-monster orcid osi otter outdent p padlet page4 pagelines pager paint-roller paintbrush palette palfed pallet panorama paper-plane paper-plane paperclip parachute-box paragraph passport paste paste patreon pause paw paypal peace pen pen-clip pen-fancy pen-nib pen-ruler pen-to-square pen-to-square pencil people-arrows people-carry-box people-group people-line people-pulling people-robbery people-roof pepper-hot perbyte percent periscope person person-arrow-down-to-line person-arrow-up-from-line person-biking person-booth person-breastfeeding person-burst person-cane person-chalkboard person-circle-check person-circle-exclamation person-circle-minus person-circle-plus person-circle-question person-circle-xmark person-digging person-dots-from-line person-dress person-dress-burst person-drowning person-falling person-falling-burst person-half-dress person-harassing person-hiking person-military-pointing person-military-rifle person-military-to-person person-praying person-pregnant person-rays person-rifle person-running person-shelter person-skating person-skiing person-skiing-nordic person-snowboarding person-swimming person-through-window person-walking person-walking-arrow-loop-left person-walking-arrow-right person-walking-dashed-line-arrow-right person-walking-luggage person-walking-with-cane peseta-sign peso-sign phabricator phoenix-framework phoenix-squadron phone phone-flip phone-slash phone-volume photo-film php pied-piper pied-piper-alt pied-piper-hat pied-piper-pp piggy-bank pills pinterest pinterest-p pix pixiv pizza-slice place-of-worship plane plane-arrival plane-circle-check plane-circle-exclamation plane-circle-xmark plane-departure plane-lock plane-slash plane-up plant-wilt plate-wheat play playstation plug plug-circle-bolt plug-circle-check plug-circle-exclamation plug-circle-minus plug-circle-plus plug-circle-xmark plus plus-minus podcast poo poo-storm poop power-off prescription prescription-bottle prescription-bottle-medical print product-hunt pump-medical pump-soap pushed puzzle-piece python q qq qrcode question quinscape quora quote-left quote-right r r-project radiation radio rainbow ranking-star raspberry-pi ravelry react reacteurope readme rebel receipt record-vinyl rectangle-ad rectangle-list rectangle-list rectangle-xmark rectangle-xmark recycle red-river reddit reddit-alien redhat registered registered renren repeat reply reply-all replyd republican researchgate resolving restroom retweet rev ribbon right-from-bracket right-left right-long right-to-bracket ring road road-barrier road-bridge road-circle-check road-circle-exclamation road-circle-xmark road-lock road-spikes robot rocket rocketchat rockrms rotate rotate-left rotate-right route rss ruble-sign rug ruler ruler-combined ruler-horizontal ruler-vertical rupee-sign rupiah-sign rust s sack-dollar sack-xmark safari sailboat salesforce sass satellite satellite-dish scale-balanced scale-unbalanced scale-unbalanced-flip schlix school school-circle-check school-circle-exclamation school-circle-xmark school-flag school-lock scissors screenpal screwdriver screwdriver-wrench scribd scroll scroll-torah sd-card searchengin section seedling sellcast sellsy server servicestack shapes share share-from-square share-from-square share-nodes sheet-plastic shekel-sign shield shield-cat shield-dog shield-halved shield-heart shield-virus ship shirt shirtsinbulk shoe-prints shoelace shop shop-lock shop-slash shopify shopware shower shrimp shuffle shuttle-space sign-hanging signal signal-messenger signature signs-post sim-card simplybuilt sink sistrix sitemap sith sitrox sketch skull skull-crossbones skyatlas skype slack slash sleigh sliders slideshare smog smoking snapchat snowflake snowflake snowman snowplow soap socks solar-panel sort sort-down sort-up soundcloud sourcetree spa space-awesome spaghetti-monster-flying speakap speaker-deck spell-check spider spinner splotch spoon spotify spray-can spray-can-sparkles square square square-arrow-up-right square-behance square-binary square-bluesky square-caret-down square-caret-down square-caret-left square-caret-left square-caret-right square-caret-right square-caret-up square-caret-up square-check square-check square-dribbble square-envelope square-facebook square-font-awesome square-font-awesome-stroke square-full square-full square-git square-github square-gitlab square-google-plus square-h square-hacker-news square-instagram square-js square-lastfm square-letterboxd square-minus square-minus square-nfi square-odnoklassniki square-parking square-pen square-person-confined square-phone square-phone-flip square-pied-piper square-pinterest square-plus square-plus square-poll-horizontal square-poll-vertical square-reddit square-root-variable square-rss square-share-nodes square-snapchat square-steam square-threads square-tumblr square-twitter square-up-right square-upwork square-viadeo square-vimeo square-virus square-web-awesome square-web-awesome-stroke square-whatsapp square-x-twitter square-xing square-xmark square-youtube squarespace stack-exchange stack-overflow stackpath staff-snake stairs stamp stapler star star star-and-crescent star-half star-half star-half-stroke star-half-stroke star-of-david star-of-life staylinked steam steam-symbol sterling-sign stethoscope sticker-mule stop stopwatch stopwatch-20 store store-slash strava street-view strikethrough stripe stripe-s stroopwafel stubber studiovinari stumbleupon stumbleupon-circle subscript suitcase suitcase-medical suitcase-rolling sun sun sun-plant-wilt superpowers superscript supple suse swatchbook swift symfony synagogue syringe t table table-cells table-cells-column-lock table-cells-large table-cells-row-lock table-cells-row-unlock table-columns table-list table-tennis-paddle-ball tablet tablet-button tablet-screen-button tablets tachograph-digital tag tags tape tarp tarp-droplet taxi teamspeak teeth teeth-open telegram temperature-arrow-down temperature-arrow-up temperature-empty temperature-full temperature-half temperature-high temperature-low temperature-quarter temperature-three-quarters tencent-weibo tenge-sign tent tent-arrow-down-to-line tent-arrow-left-right tent-arrow-turn-left tent-arrows-down tents terminal text-height text-slash text-width the-red-yeti themeco themeisle thermometer think-peaks threads thumbs-down thumbs-down thumbs-up thumbs-up thumbtack thumbtack-slash ticket ticket-simple tiktok timeline toggle-off toggle-on toilet toilet-paper toilet-paper-slash toilet-portable toilets-portable toolbox tooth torii-gate tornado tower-broadcast tower-cell tower-observation tractor trade-federation trademark traffic-light trailer train train-subway train-tram transgender trash trash-arrow-up trash-can trash-can trash-can-arrow-up tree tree-city trello triangle-exclamation trophy trowel trowel-bricks truck truck-arrow-right truck-droplet truck-fast truck-field truck-field-un truck-front truck-medical truck-monster truck-moving truck-pickup truck-plane truck-ramp-box tty tumblr turkish-lira-sign turn-down turn-up tv twitch twitter typo3 u uber ubuntu uikit umbraco umbrella umbrella-beach uncharted underline uniregistry unity universal-access unlock unlock-keyhole unsplash untappd up-down up-down-left-right up-long up-right-and-down-left-from-center up-right-from-square upload ups upwork usb user user user-astronaut user-check user-clock user-doctor user-gear user-graduate user-group user-injured user-large user-large-slash user-lock user-minus user-ninja user-nurse user-pen user-plus user-secret user-shield user-slash user-tag user-tie user-xmark users users-between-lines users-gear users-line users-rays users-rectangle users-slash users-viewfinder usps ussunnah utensils v vaadin van-shuttle vault vector-square venus venus-double venus-mars vest vest-patches viacoin viadeo vial vial-circle-check vial-virus vials viber video video-slash vihara vimeo vimeo-v vine virus virus-covid virus-covid-slash virus-slash viruses vk vnv voicemail volcano volleyball volume-high volume-low volume-off volume-xmark vr-cardboard vuejs w walkie-talkie wallet wand-magic wand-magic-sparkles wand-sparkles warehouse watchman-monitoring water water-ladder wave-square waze web-awesome web-awesome webflow weebly weibo weight-hanging weight-scale weixin whatsapp wheat-awn wheat-awn-circle-exclamation wheelchair wheelchair-move whiskey-glass whmcs wifi wikipedia-w wind window-maximize window-maximize window-minimize window-minimize window-restore window-restore windows wine-bottle wine-glass wine-glass-empty wirsindhandwerk wix wizards-of-the-coast wodu wolf-pack-battalion won-sign wordpress wordpress-simple worm wpbeginner wpexplorer wpforms wpressr wrench x x-ray x-twitter xbox xing xmark xmarks-lines y y-combinator yahoo yammer yandex yandex-international yarn yelp yen-sign yin-yang yoast youtube z zhihu document.addEventListener('DOMContentLoaded', () => { document.querySelectorAll('.fa-icon-wrapper i').forEach(el => { el.addEventListener('click', () => { const iconName = el.getAttribute('data-icon-name'); const text = '{% fa ' + iconName + ' %}'; navigator.clipboard.writeText(text).then(() => { alert('복사됨: ' + text); }).catch(() => { alert('복사에 실패했습니다.'); }); }); }); });","categories":[{"name":"Blog","slug":"Blog","permalink":"http://goodsaem.github.io/categories/Blog/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"http://goodsaem.github.io/tags/hexo/"},{"name":"fontawesome","slug":"fontawesome","permalink":"http://goodsaem.github.io/tags/fontawesome/"}]},{"title":"정적 웹사이트 생성기 hexo 로 블로그 만들기","slug":"blog/blog-hexo","date":"2025-06-25T05:25:04.000Z","updated":"2025-06-29T07:42:00.748Z","comments":true,"path":"blog/blog-hexo/","link":"","permalink":"http://goodsaem.github.io/blog/blog-hexo/","excerpt":"","text":"개요정적 웹사이트 생성기 hexo 를 이용하여 블로그를 만든후 github page 까지 반영하는 방법에 대해서정리한다. 정적 웹사이트 블로그를 만들면서 작업했던 내용들을 정리했으며 이글로 기술자료를 정리하는개발자들에게 도움이 되었으면 한다. 💬 업데이트 정보 한동안 방치해둔 블로그를 다시 정리하고 있다. 글을 정리하면서 나에게 도움이 되고 글을 읽고 있는분에게도 도움이 되었으면 한다. 글을 다시 정리하면서 많은 부분 변경하고 새로운 내용들도 추가했다.다 정리할수 있을까 걱정도 되지만 최대한 적어 보고자 한다.글수정일 : 2025-06-22 오후 6:48 설치순서설치 순서는 아래와 같다. 사전 준비사항으로 GitHub 계정생성하고 Git 설치하고 Node.js 설치하는과정 있는데 이부분은 예전에 만들어 놓은 페이지가 있어 이부분을 참조하면 될것 같은데 정리하는차원에서 그대로 진행하면서 정리하겠음. 💡 순서도 draw.io 위에 순서도는 draw.io로 그렸고 플러그인을 추가하여 웹사이트에서도 볼수 있게 했다.예전에는 이런 시도를 하지 않았는데 경험이 늘어남에 따라 표현하는 부분도 많아지는듯한다. 사전준비사항Nodejs 설치 node js 사이트 : https://nodejs.org/ko install node js 버튼을 클릭한다. Windows 설치 프로그램(.msi) 파일을 클릭하여 다운로드 다운로드 받은 node-v22.16.0-x64.exe 파일을 더블클릭하여 실행 후 Next 라이선스 동의후 Next 폴더변경 C:\\expert\\nodejs 후 next Next Next Next Install 설치중 설치완료 Finish 명령어 입력창에서 아래와 같이 입력했을때 버전이 나오면 설치완료 node --version v22.16.0 Git 설치 site : https://git-scm.com/ download : https://git-scm.com/downloads/win file : https://github.com/git-for-windows/git/releases/download/v2.50.0.windows.1/Git-2.50.0-64-bit.exe Git for Windows/x64 Setup 파일을 다운로드 받는다. 다운로드 받은 파일을 더블클릭하여 실행한다. Next 설치디렉토리 변경 C:\\expert\\git 후 Next Default 상태에서 Next 메뉴명은 Git Next Next Next Next Next Next Next Next Next Next Install 설치중 Finish 설치완료 command 창을 열고 아래 명령어를 입력했을때 버전이 출력되면 설치완료 git --version git version 2.50.0.windows.1 github 계정 생성을 위해서는 메일주소가 있어야함 메일 계정이 있는분들은 skip 할것 (protonmail 에서 무료 메일 발급) 무료 메일 계정 생성 메일이 한번씩 필요한데 만드는게 생각보다 쉽지가 않아 무료 메일 계정 만드는 방법에 대해 정리함 아래 사이트에서 회원가입하여 계정생성 https://account.proton.me/mail/signup?ref=mailhero Proton Mail 사용 시작 버튼을 클릭하여 가입 사용중인 메일 주소(gmail) 로 인증을 받는다. 인증키를 입력하여 회원가입을 완료한다. 여기까지 하면 아래와 같이 계정생성 화면이 나온다. 표시 이름을 설정하고 계속하기 버튼을 클릭한다. 복구 방법을 설정하고 저장 버튼을 클릭한다. 메일 계정 생성이 끝나면 아래와 같은 화면을 확일할수 있다. Github 계정 생성 2025-06-24 15:20:28 기준으로 github 계정 생성하는 방법에 대해서 정리함 https://github.com/ 에 접속한후 Sing up 버튼을 클릭한다. 메일정보와 패스워드 이름을 등록하고 continue 버튼을 클릭한다. 사람인지 확인하라는 곳에서 사각형 인증을 클릭하고 본문에 나온되로 사각형을 이동한다. 사람인지 인증되고 나면 메일 인증코드를 넣어 2단계를 진행한다. 메일에서 받은 인증코드를 입력한다. 이메일 주소와(goodsame2@proton.me) 패스워드를 입력하여 github 로그인을 진행한다. 정상적으로 로그인 되면 아래와 같은 화면을 확인할수 있다. Github Page 생성방법 GitHub Pages는 GitHub 에서 제공해주는 정적 웹 사이트 서비스다. 이 서비스를 사용하면 개발자는 GitHub 저장소에서 HTML,CSS 및 JavaScript 파일과 같은 정적 파일을 업로드하여 웹페이지를 만들수 있다. 가장 큰장점은 무료로 웹사이트를 만들 수 있다는 부분이며, 개발자가 손쉽게 git 명령어를 통해 페이지를 등록/수정/삭제를 할수 있다는 점이다. 아직 github 계정이 없다면 아래 글을 참고하여 Github 계정 생성부터 진행 한다. [Github 계정생성] 계정생성이 다 끝난상태에서 아래 순서되로 github page 생성을 진행한다. 본글에서는 goodsame2 라는 github 계정을 만들어서 github page 만드는 작업을 진행했다. 우측 상단의 ‘+’ 아이콘을 클릭하여 New repository 메뉴를 선택 Repository name 에 계정이름과 동일한 아래 그림에서는 계정이 goodsame2 이므로 goodsame2.github.io 입력 Description goodsame2.github.io 입력 Add a README file 에 체크 Create repository 버튼을 클릭하여 repository 생성 정상적으로 생성되면 아래와 같은 화면이 나온다. 웹브라우저에 https://goodsame2.github.io/ 이렇게 입력하면 아래와 같은 화면을 확인할수 있다. Github SSH 연결방법 git-scm은 설치되어 있어야 아래 내용 실행가능함 GitHub 로그인을 ssh 로 설정하면 매번 로그인 할 필요없이 편하게 source 를 commit 하고 push 할수 있다. GitHub SSH 설정하는 방법에 대해 windows 기준으로 정리함 (※ git은 설치되어 있어야 함) SSH 키 생성 후 생성된 키를 클립보드에 복사 Git Bash 창 실행 ssh-keygen 명령어 실행 ssh-keygen -t rsa -b 2048 -f ~/.ssh/goodsame2.github.io_key 기본값설정을 위해 엔터 엔터를 입력 아래와 같이 goodsame2.github.io_key 와 goodsame2.github.io_key.pub 가 만들어진걸 확인할수 있다. 아래 명령어를 입력하여 출력된 내용을 복사 cat ~/.ssh/goodsame2.github.io_key.pub github ssh 키 등록 깃허브에 SSH 공개키 등록을 위해 깃허브 홈페이지에 로그인을 진행하고 아래 순서되로 키를 생성 프로파일 아이콘클릭 Settings 아이콘을 클릭 SSH and GPG key 클릭 title에 goodsame2.github.io_pub 입력 Key 에 복사한 내용 붙여넣기 Add deploy key 아이콘 클릭 테스트를 위해 이름 및 이메일 주소를 등록한다. git config --global user.name &quot;goodsame2&quot; git config --global user.email &quot;goodsame2@proton.me&quot; github 접속을 위해 ssh 에이전트에 개인키를 등록한다. 터미널에서 다음 명령어를 입력해서 ssh-agent를 실행 eval &quot;$(ssh-agent -s)&quot; ssh-agent가 실행된 상태에서 다시 키 추가: ssh-add ~/.ssh/goodsame2.github.io_key 성공 Identity added: /c/Users/Administrator/.ssh/goodsame2.github.io_key (Administrator@WIN-DBSA6V6A1MT) 테스트 (Git Bash로 테스트 할것) 소스복제 (git clone) $ git clone git@github.com:goodsame2/goodsame2.github.io.git 소스복제가 끝나면 아래와 같은 메시지를 볼수 있다. Cloning into 'goodsame2.github.io'... The authenticity of host 'github.com (20.200.245.247)' can't be established. ED25519 key fingerprint is SHA256:+xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx This key is not known by any other names. Are you sure you want to continue connecting (yes/no/[fingerprint])? yes Warning: Permanently added 'github.com' (ED25519) to the list of known hosts. remote: Enumerating objects: 3, done. remote: Counting objects: 100% (3/3), done. remote: Total 3 (delta 0), reused 0 (delta 0), pack-reused 0 (from 0) Receiving objects: 100% (3/3), done. 복제된 디렉토리로 이동한후 아래와 같이 index.html을 작성한다. &lt;!DOCTYPE html&gt; &lt;html lang=&quot;ko&quot;&gt; &lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt; &lt;title&gt;나의 첫 번째 웹 페이지&lt;/title&gt; &lt;/head&gt; &lt;body&gt; &lt;h1&gt;안녕하세요! GoodSame2에 오신 것을 환영합니다.&lt;/h1&gt; &lt;p&gt;이 페이지는 Git Bash를 사용하여 생성한 간단한 HTML 페이지입니다.&lt;/p&gt; &lt;/body&gt; &lt;/html&gt; 작성 된 내용을 git에 추가한다. $ git add . commit 수횅 $ git commit -m &quot;init commit&quot; push 수행 $ git push origin main 아래와 같이 push가 완료됨 Enumerating objects: 4, done. Counting objects: 100% (4/4), done. Delta compression using up to 3 threads Compressing objects: 100% (3/3), done. Writing objects: 100% (3/3), 582 bytes | 582.00 KiB/s, done. Total 3 (delta 0), reused 0 (delta 0), pack-reused 0 (from 0) To github.com:goodsame2/goodsame2.github.io.git ac7ef11..6a721f7 main -&gt; main https://goodsame2.github.io/ 사이트 접속해서 아래와 같은 화면이 나오면 완료 hexo 설치아래 명령어를 입력하여 전역으로 hexo-cli 설치 1npm install hexo-cli -g 아래 명령어를 입력하여 hexo blog를 생성한다. 1hexo init blog 아래 명령어를 입력하여 hexo server 실행 123cd blognpm installhexo server http://localhost:4000/ 접속해서 아래와 같은 화면이 나오면 설치 완료 hexo 테마 적용하기https://hexo.io/themes/ 에서 hexo 다양한 테마를 다운로드 받을수 있다.본 블로그에서 사용하는 theme은 https://github.com/ppoffice/hexo-theme-hueman 은 이용했고가장 최근 버전은 2020년 6월 21일 릴리즈된 0.5.0 버전이다. 설치설치는 https://github.com/ppoffice/hexo-theme-hueman/wiki/Installation 문서를 보고 참고함 먼저 프로젝트를 blog 폴더 아래에 themes&#x2F;hueman 로 복제함 12cd bloggit clone https://github.com/ppoffice/hexo-theme-hueman.git themes/hueman 실행결과 1234567Cloning into &#x27;themes/hueman&#x27;...remote: Enumerating objects: 2277, done.remote: Counting objects: 100% (16/16), done.remote: Compressing objects: 100% (14/14), done.remote: Total 2277 (delta 3), reused 11 (delta 2), pack-reused 2261Receiving objects: 100% (2277/2277), 5.77 MiB | 6.42 MiB/s, done.Resolving deltas: 100% (1218/1218), done. blog 폴더의 _confi.yml파일에서 theme을 파일을 열어서 아래와 같이 설치한 theme명으로 수정한다 theme: landscape 123456... 중략 ...# Extensions## Plugins: https://hexo.io/plugins/## Themes: https://hexo.io/themes/theme: hueman... 중략 ... themes\\hueman 디렉토리로 이동한후 _config.yml.example 파일일 _config.yml로 수정한다. 12cd themes/huemanmv _config.yml.example _config.yml 실행상위 디렉토리로 이동한후 hexo 서버를 구동시킨다. 123cd ..cd ..hexo server 실행결과 123INFO Validating configINFO Start processingINFO Hexo is running at http://localhost:4000/ . Press Ctrl+C to stop. 웹브라우저에서 url http://localhost:4000/ 를 입력하고 아래와 같은 그림이 나오면 성공 hexo 환경설정블로그 환경설정을 위해 blog&#x2F;_config.xml 파일을 아래와 같이 수정함. 사이트및 url 정보123456789101112# Sitetitle: goodsame2subtitle: goodsaem2 블로그 입니다.description: 블로그 테스트를 위해서 환경설정한 내용입니다.keywords:author: goodsame2language: kotimezone: asia/seoul# URL## Set your site url here. For example, if you use GitHub Page, set url as &#x27;https://username.github.io/project&#x27;url: https://goodsame2.github.io/ github 에 배포를 위한 deploy 정보123456# Deployment## Docs: https://hexo.io/docs/one-command-deploymentdeploy: type: git repo: git@github.com:goodsame2/goodsame2.github.io.git branch: main 배포하기준비물배포를 위해 hexo-deployer-git 플러그인을 설치한다. 설치명령어는 아래와 같다. 1npm install hexo-deployer-git --save 배포순서배포는 먼저 정적인 페이지(html)를 만들고 github page 쪽으로 deploy 하는 형태로 진행한다. 정적 페이지 만들기먼저 배포될 디렉토릴 파일을 깨끗히 정리한다. 1hexo clean 실행결과 123INFO Validating configINFO Deleted database.INFO Deleted public folder. 아래 명령어를 입력하여 정적 페이지를 생성한다. 1hexo generate 정상적으로 실행되면 아래와 같이 public 디렉토리에 블로그 구성을 필요한 파일들이 생성됨을 확인할수 있다. 123456.. 중략 ...INFO Generated: archives/2023/index.htmlINFO Generated: archives/index.htmlINFO Generated: index.html.. 중략 ...INFO 80 files generated in 314 ms 배포하기아래 명령어를 입력하여 github page 에 배포한다. 1hexo deploy 실행결과 123456789INFO Validating configINFO Deploying: gitINFO Clearing .deploy_git folder...INFO Copying files from public folder...INFO Copying files from extend dirs...[main 1ca47fb] Site updated: 2023-03-10 23:41:16 12 files changed, 1 insertion(+), 2826 deletions(-) .. 중략 ...INFO Deploy done: git Github page 확인하기여기까지 진행했다면 https://goodsame2.github.io/ 사이트에 접속하면 아래와 같은 화면을 확인할수 있다. st=>start: 시작 e=>end: 종료 op1=>operation: 정적인 페이지만들기 op2=>operation: 배포하기 st(right)->op1(right)->op2(right)->e(right){\"scale\":1,\"line-width\":2,\"line-length\":50,\"text-margin\":10,\"font-size\":12} var code = document.getElementById(\"flowchart-0-code\").value; var options = JSON.parse(decodeURIComponent(document.getElementById(\"flowchart-0-options\").value)); var diagram = flowchart.parse(code); diagram.drawSVG(\"flowchart-0\", options);","categories":[{"name":"Blog","slug":"Blog","permalink":"http://goodsaem.github.io/categories/Blog/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"http://goodsaem.github.io/tags/hexo/"}]},{"title":"Hexo 에 글 포함하기","slug":"blog/blog-hexo-include","date":"2025-06-25T05:24:56.000Z","updated":"2025-06-29T07:42:00.748Z","comments":true,"path":"blog/blog-hexo-include/","link":"","permalink":"http://goodsaem.github.io/blog/blog-hexo-include/","excerpt":"","text":"Hexo 에 글 포함하기Hexo 로 글을 쓰다가 이전글을 포함해서 글을 쓰는 경우가 생겼다.예를 들어 vue 설치 글을 쓴다고 가정하자. 그럼 우선 node.js 를 설치를 진행해야 한다.node.js 설치하는 문서는 이미 만들었다고 가정한다면 보통의 경우에는 vue 설치 과정만설명을 하고 node.js 설치하는 방법은 링크를 걸어 보여주도록 한다. 하지만 이건페이지를 벗어나야 되기 때문에 좋은 방법은 아니라고 생각한다. 신규 쓰는 페이지에 다른 페이지 내용을 포함할수 있을까? 그러면 블로거는 글을중복해서 쓸필요가 없어지고 블로그를 이용하는 사용자도 한번에 읽어 나가니까편하지 않을까 ? include 가 될까? 한번 해보자!!! 계속 테스트계속 테스트를 해보았지만 생각처럼 동작하지 않았다.여러번의 시행착오 끝에 포함시킬수 있었다.그내용을 정리한다. hexo 에 글 include 방법 필요한 라이브러리 추가1npm install markdown-it 폴더구조는 아래와 같다. _includes 폴더에 post에 포함할 내용을 inc.md 처럼 만들어서 넣고 scripts 폴더에는 확장 tag를 정의한다. scripts에 incl-tag.js 추가 💬 주요내용 incl 이란 tag를 확장하여 추가하고 _includes 폴더에서 전달받은 이름의 markdown(md)파일을 찾아서 markdown을 다시 html로 변환한값을 리턴한다. incl-tag.js12345678910111213const fs = require(&#x27;fs&#x27;);const path = require(&#x27;path&#x27;);const md = require(&#x27;markdown-it&#x27;)();hexo.extend.tag.register(&#x27;incl&#x27;, function(args) &#123; const name = args[0]; const filePath = path.join(hexo.source_dir, &#x27;_includes&#x27;, `$&#123;name&#125;.md`); if (!fs.existsSync(filePath)) &#123; return `&lt;!-- include not found: $&#123;name&#125; --&gt;`; &#125; const content = fs.readFileSync(filePath, &#x27;utf8&#x27;); return md.render(content);&#125;, &#123; async: false &#125;); package.json 파일에 prehexo 추가package.json123456789... 중략 ... &quot;scripts&quot;: &#123; &quot;prehexo&quot;: &quot;node scripts/incl-tag.js&quot;, &quot;build&quot;: &quot;hexo generate&quot;, &quot;clean&quot;: &quot;hexo clean&quot;, &quot;deploy&quot;: &quot;hexo deploy&quot;, &quot;server&quot;: &quot;hexo server&quot; &#125;,... 중략 ... 인클루드 하고자하는 페이지에서 _includes 에 있는 inc 파일 includemarkdown1&#123;% incl inc %&#125; inc.md 파일이 아래와 같이 코딩되어 있다면1234567# inc.md여기부터는 inc.md 파일 내용이다.![https://goodsaem.github.io/](/images/mbzqvr.jpg)여기까지 inc.md 파일 내용이다. 아래와 같이 include 내용이 출력된다.inc.md 여기부터는 inc.md 파일 내용이다. 여기까지 inc.md 파일 내용이다.","categories":[{"name":"Blog","slug":"Blog","permalink":"http://goodsaem.github.io/categories/Blog/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"http://goodsaem.github.io/tags/hexo/"}]},{"title":"소개","slug":"blog/blog-intro","date":"2025-06-25T05:23:23.000Z","updated":"2025-06-29T07:42:00.748Z","comments":true,"path":"blog/blog-intro/","link":"","permalink":"http://goodsaem.github.io/blog/blog-intro/","excerpt":"","text":"소개코딩 하는게 즐겁다. 무언가 알아가고 새로운걸 배우면서내가 성장할때 보람을 느낀다. 많은 기술블로그로 부터 새로운 기술을 배웠고 나도 누군가에게 무언가 배풀수 있는 사람이 되고자블로그를 개설했다. 글을 쓰는게 쉽지는 않지만 계속 쓰다보면 좋아지지 않을까꾸준히 포스팅 하자. 누군가에게 도움이 되는 기술 블로그로 성장하고 매일 매일 기록 하겠다.마음을 가졌고 행동할것이며 블로그를 통해 개발자들과의 관계를 넓혀가겠다.화이팅!!!!","categories":[{"name":"Blog","slug":"Blog","permalink":"http://goodsaem.github.io/categories/Blog/"}],"tags":[{"name":"일상","slug":"일상","permalink":"http://goodsaem.github.io/tags/%EC%9D%BC%EC%83%81/"}]},{"title":"Github ssh 연결","slug":"setup/setup_github_ssh","date":"2025-06-25T03:57:45.000Z","updated":"2025-06-29T07:42:01.128Z","comments":true,"path":"setup/setup_github_ssh/","link":"","permalink":"http://goodsaem.github.io/setup/setup_github_ssh/","excerpt":"","text":"Github SSH 연결방법 git-scm은 설치되어 있어야 아래 내용 실행가능함 GitHub 로그인을 ssh 로 설정하면 매번 로그인 할 필요없이 편하게 source 를 commit 하고 push 할수 있다. GitHub SSH 설정하는 방법에 대해 windows 기준으로 정리함 (※ git은 설치되어 있어야 함) SSH 키 생성 후 생성된 키를 클립보드에 복사 Git Bash 창 실행 ssh-keygen 명령어 실행 ssh-keygen -t rsa -b 2048 -f ~/.ssh/goodsame2.github.io_key 기본값설정을 위해 엔터 엔터를 입력 아래와 같이 goodsame2.github.io_key 와 goodsame2.github.io_key.pub 가 만들어진걸 확인할수 있다. 아래 명령어를 입력하여 출력된 내용을 복사 cat ~/.ssh/goodsame2.github.io_key.pub github ssh 키 등록 깃허브에 SSH 공개키 등록을 위해 깃허브 홈페이지에 로그인을 진행하고 아래 순서되로 키를 생성 프로파일 아이콘클릭 Settings 아이콘을 클릭 SSH and GPG key 클릭 title에 goodsame2.github.io_pub 입력 Key 에 복사한 내용 붙여넣기 Add deploy key 아이콘 클릭 테스트를 위해 이름 및 이메일 주소를 등록한다. git config --global user.name &quot;goodsame2&quot; git config --global user.email &quot;goodsame2@proton.me&quot; github 접속을 위해 ssh 에이전트에 개인키를 등록한다. 터미널에서 다음 명령어를 입력해서 ssh-agent를 실행 eval &quot;$(ssh-agent -s)&quot; ssh-agent가 실행된 상태에서 다시 키 추가: ssh-add ~/.ssh/goodsame2.github.io_key 성공 Identity added: /c/Users/Administrator/.ssh/goodsame2.github.io_key (Administrator@WIN-DBSA6V6A1MT) 테스트 (Git Bash로 테스트 할것) 소스복제 (git clone) $ git clone git@github.com:goodsame2/goodsame2.github.io.git 소스복제가 끝나면 아래와 같은 메시지를 볼수 있다. Cloning into 'goodsame2.github.io'... The authenticity of host 'github.com (20.200.245.247)' can't be established. ED25519 key fingerprint is SHA256:+xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx This key is not known by any other names. Are you sure you want to continue connecting (yes/no/[fingerprint])? yes Warning: Permanently added 'github.com' (ED25519) to the list of known hosts. remote: Enumerating objects: 3, done. remote: Counting objects: 100% (3/3), done. remote: Total 3 (delta 0), reused 0 (delta 0), pack-reused 0 (from 0) Receiving objects: 100% (3/3), done. 복제된 디렉토리로 이동한후 아래와 같이 index.html을 작성한다. &lt;!DOCTYPE html&gt; &lt;html lang=&quot;ko&quot;&gt; &lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt; &lt;title&gt;나의 첫 번째 웹 페이지&lt;/title&gt; &lt;/head&gt; &lt;body&gt; &lt;h1&gt;안녕하세요! GoodSame2에 오신 것을 환영합니다.&lt;/h1&gt; &lt;p&gt;이 페이지는 Git Bash를 사용하여 생성한 간단한 HTML 페이지입니다.&lt;/p&gt; &lt;/body&gt; &lt;/html&gt; 작성 된 내용을 git에 추가한다. $ git add . commit 수횅 $ git commit -m &quot;init commit&quot; push 수행 $ git push origin main 아래와 같이 push가 완료됨 Enumerating objects: 4, done. Counting objects: 100% (4/4), done. Delta compression using up to 3 threads Compressing objects: 100% (3/3), done. Writing objects: 100% (3/3), 582 bytes | 582.00 KiB/s, done. Total 3 (delta 0), reused 0 (delta 0), pack-reused 0 (from 0) To github.com:goodsame2/goodsame2.github.io.git ac7ef11..6a721f7 main -&gt; main https://goodsame2.github.io/ 사이트 접속해서 아래와 같은 화면이 나오면 완료","categories":[{"name":"Setup","slug":"Setup","permalink":"http://goodsaem.github.io/categories/Setup/"}],"tags":[{"name":"github","slug":"github","permalink":"http://goodsaem.github.io/tags/github/"}]},{"title":"GitHub Page 생성","slug":"setup/setup_github_page","date":"2025-06-25T00:28:59.000Z","updated":"2025-06-29T07:42:01.128Z","comments":true,"path":"setup/setup_github_page/","link":"","permalink":"http://goodsaem.github.io/setup/setup_github_page/","excerpt":"","text":"Github Page 생성방법 GitHub Pages는 GitHub 에서 제공해주는 정적 웹 사이트 서비스다. 이 서비스를 사용하면 개발자는 GitHub 저장소에서 HTML,CSS 및 JavaScript 파일과 같은 정적 파일을 업로드하여 웹페이지를 만들수 있다. 가장 큰장점은 무료로 웹사이트를 만들 수 있다는 부분이며, 개발자가 손쉽게 git 명령어를 통해 페이지를 등록/수정/삭제를 할수 있다는 점이다. 아직 github 계정이 없다면 아래 글을 참고하여 Github 계정 생성부터 진행 한다. [Github 계정생성] 계정생성이 다 끝난상태에서 아래 순서되로 github page 생성을 진행한다. 본글에서는 goodsame2 라는 github 계정을 만들어서 github page 만드는 작업을 진행했다. 우측 상단의 ‘+’ 아이콘을 클릭하여 New repository 메뉴를 선택 Repository name 에 계정이름과 동일한 아래 그림에서는 계정이 goodsame2 이므로 goodsame2.github.io 입력 Description goodsame2.github.io 입력 Add a README file 에 체크 Create repository 버튼을 클릭하여 repository 생성 정상적으로 생성되면 아래와 같은 화면이 나온다. 웹브라우저에 https://goodsame2.github.io/ 이렇게 입력하면 아래와 같은 화면을 확인할수 있다.","categories":[{"name":"Setup","slug":"Setup","permalink":"http://goodsaem.github.io/categories/Setup/"}],"tags":[{"name":"github","slug":"github","permalink":"http://goodsaem.github.io/tags/github/"}]},{"title":"NodeJs 설치방법","slug":"setup/setup_nodejs","date":"2025-06-25T00:27:44.000Z","updated":"2025-06-29T07:42:01.128Z","comments":true,"path":"setup/setup_nodejs/","link":"","permalink":"http://goodsaem.github.io/setup/setup_nodejs/","excerpt":"","text":"Nodejs 설치 node js 사이트 : https://nodejs.org/ko install node js 버튼을 클릭한다. Windows 설치 프로그램(.msi) 파일을 클릭하여 다운로드 다운로드 받은 node-v22.16.0-x64.exe 파일을 더블클릭하여 실행 후 Next 라이선스 동의후 Next 폴더변경 C:\\expert\\nodejs 후 next Next Next Next Install 설치중 설치완료 Finish 명령어 입력창에서 아래와 같이 입력했을때 버전이 나오면 설치완료 node --version v22.16.0","categories":[{"name":"Setup","slug":"Setup","permalink":"http://goodsaem.github.io/categories/Setup/"}],"tags":[{"name":"nodejs","slug":"nodejs","permalink":"http://goodsaem.github.io/tags/nodejs/"}]},{"title":"Git 설치방법","slug":"setup/setup_git","date":"2025-06-25T00:26:51.000Z","updated":"2025-06-29T07:42:01.127Z","comments":true,"path":"setup/setup_git/","link":"","permalink":"http://goodsaem.github.io/setup/setup_git/","excerpt":"","text":"Git 설치 site : https://git-scm.com/ download : https://git-scm.com/downloads/win file : https://github.com/git-for-windows/git/releases/download/v2.50.0.windows.1/Git-2.50.0-64-bit.exe Git for Windows/x64 Setup 파일을 다운로드 받는다. 다운로드 받은 파일을 더블클릭하여 실행한다. Next 설치디렉토리 변경 C:\\expert\\git 후 Next Default 상태에서 Next 메뉴명은 Git Next Next Next Next Next Next Next Next Next Next Install 설치중 Finish 설치완료 command 창을 열고 아래 명령어를 입력했을때 버전이 출력되면 설치완료 git --version git version 2.50.0.windows.1","categories":[{"name":"Setup","slug":"Setup","permalink":"http://goodsaem.github.io/categories/Setup/"}],"tags":[{"name":"git","slug":"git","permalink":"http://goodsaem.github.io/tags/git/"}]},{"title":"3. JHipster rest api 테스트","slug":"coding/jhipster/jhipster3","date":"2023-03-29T02:10:00.000Z","updated":"2025-06-29T07:42:00.852Z","comments":true,"path":"coding/jhipster/jhipster3/","link":"","permalink":"http://goodsaem.github.io/coding/jhipster/jhipster3/","excerpt":"","text":"개요만들어진 rest api 를 보면서 힙스터가 어떻게 동작하는지 확인해 보자. rest api 테스트는postman 을 통해서 진행할 예정이다. postman 설치방법은 아래 링크에 정리해 두었다. postman 설치 jhipster 백엔드 실행터미널을 열어 아래 명령어를 입력한다. 1./mvnw jhipster 프론트 실행새로운 터미널을 열어 아래 명령어를 입력한다. 1npm start 유저관련 api 확인관리자 &gt; API 메뉴를 클릭하여 user-resource api를 확인한다.사용자 리스트와 수정 등록 삭제와 관련된 api가 있다.이를 테스트해볼 예정이다. postman 실행포스트맨을 실행하고 workspaces 메뉴를 클릭한다. My Workspace 를 실행한다. Collection 에서 + 이이콘을 클릭하여 새로운 콜랙션을 생성한다. new 버튼을 클릭하여 http request 를 선택한다. 사용자 리스트 조회 - 인증없이 api 호출 콜랙션 이름 restapi test api 이름 사용자리스트조회 request 방식은 get 방식 url : http://localhost:8080/api/admin/users send 버튼 클릭 로그인하지 않은 상태에서 사용자를 조회를 진행하여 Unauthorized 오류 메시지가 리턴되었다. 로그인후 인증 토큰 받기 사용자리스트조회 api 에서 우클릭 버튼을 클릭하면 api를 복제하는 메뉴가 있다 Duplicate 클릭하여 하나 복제한다. Method 는 Post url : http://localhost:8080/api/admin/users Headers Content-Type application&#x2F;json 추가 Body 부분에 raw 를 선택하고 아래와 같이 코딩한다.1234&#123; &quot;username&quot;: &quot;admin&quot;, &quot;password&quot;: &quot;admin&quot;&#125; Send 버튼을 클릭하면 id_token 값을 리턴받는다.123&#123; &quot;id_token&quot;: &quot;eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhZG1pbiIsImF1dGgiOiJST0xFX0FETUlOLFJPTEVfVVNFUiIsImV4cCI6MTY4MDE0MzEwM30.5WdbnKr_jizyraHs7cDswZLXf4rtu9in4a3RPljX-I8QLpvvSfx8fcyMe3emkFZRGN8tFO85R0noGCphnFME0w&quot;&#125; 사용자 리스트 조회 - 인증후 api 호출사용자리스트조회 api를 하나 복제한후 Headers 부분에 아래와 같이 Authorization Bearer “id_token” 값을 입력하고Send 버튼을 클릭한다. 그러면 아래와 같이 등록된 사용자 리스트가 리턴된다. 참고Bearer 는 인증 프로토콜에서 사용되는 용어 중 하나로, 인증 토큰을 전송하는 방법 중 하나이다.Bearer 토큰은 API 요청 헤더에 포함되며, 인증 서버에서 발급한 토큰이 유효한지를 확인하는 데 사용된다.Bearer는 “소지인”을 의미하는 단어로, 토큰 소유자가 API 요청을 보내는 클라이언트 애플리케이션을 의미한다.Bearer 토큰은 단순 인증 토큰을 전송하는 데 사용되며, 인증 토큰 자체에는 보안이나 권한 부여와 관련된정보가 포함되어 있지 않다. 따라서 Bearer 토큰은 안전한 통신 채널(HTTPS)을 통해 전송되어야 한다. 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273[ &#123; &quot;id&quot;: 1, &quot;login&quot;: &quot;admin&quot;, &quot;firstName&quot;: &quot;Administrator&quot;, &quot;lastName&quot;: &quot;Administrator&quot;, &quot;email&quot;: &quot;admin@localhost&quot;, &quot;imageUrl&quot;: &quot;&quot;, &quot;activated&quot;: true, &quot;langKey&quot;: &quot;ko&quot;, &quot;createdBy&quot;: &quot;system&quot;, &quot;createdDate&quot;: null, &quot;lastModifiedBy&quot;: &quot;system&quot;, &quot;lastModifiedDate&quot;: null, &quot;authorities&quot;: [ &quot;ROLE_USER&quot;, &quot;ROLE_ADMIN&quot; ] &#125;, &#123; &quot;id&quot;: 2, &quot;login&quot;: &quot;user&quot;, &quot;firstName&quot;: &quot;User&quot;, &quot;lastName&quot;: &quot;User&quot;, &quot;email&quot;: &quot;user@localhost&quot;, &quot;imageUrl&quot;: &quot;&quot;, &quot;activated&quot;: true, &quot;langKey&quot;: &quot;ko&quot;, &quot;createdBy&quot;: &quot;system&quot;, &quot;createdDate&quot;: null, &quot;lastModifiedBy&quot;: &quot;system&quot;, &quot;lastModifiedDate&quot;: null, &quot;authorities&quot;: [ &quot;ROLE_USER&quot; ] &#125;, &#123; &quot;id&quot;: 1001, &quot;login&quot;: &quot;test&quot;, &quot;firstName&quot;: &quot;test&quot;, &quot;lastName&quot;: &quot;test&quot;, &quot;email&quot;: &quot;test@gmail.com&quot;, &quot;imageUrl&quot;: null, &quot;activated&quot;: true, &quot;langKey&quot;: &quot;ko&quot;, &quot;createdBy&quot;: &quot;admin&quot;, &quot;createdDate&quot;: &quot;2023-03-27T15:01:23Z&quot;, &quot;lastModifiedBy&quot;: &quot;admin&quot;, &quot;lastModifiedDate&quot;: &quot;2023-03-27T15:01:23Z&quot;, &quot;authorities&quot;: [ &quot;ROLE_USER&quot;, &quot;ROLE_ADMIN&quot; ] &#125;, &#123; &quot;id&quot;: 1002, &quot;login&quot;: &quot;jhipster&quot;, &quot;firstName&quot;: &quot;jhipster&quot;, &quot;lastName&quot;: &quot;jhipster&quot;, &quot;email&quot;: &quot;jhipster2@gmail.com&quot;, &quot;imageUrl&quot;: null, &quot;activated&quot;: true, &quot;langKey&quot;: &quot;ko&quot;, &quot;createdBy&quot;: &quot;admin&quot;, &quot;createdDate&quot;: &quot;2023-03-27T15:02:46Z&quot;, &quot;lastModifiedBy&quot;: &quot;admin&quot;, &quot;lastModifiedDate&quot;: &quot;2023-03-27T15:09:36Z&quot;, &quot;authorities&quot;: [ &quot;ROLE_USER&quot;, &quot;ROLE_ADMIN&quot; ] &#125;] 사용자 생성 테스트 Method : Post url : http://localhost:8080/api/admin/users Authorization : Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhZG1pbiIsImF1dGgiOiJST0xFX0FETUlOLFJPTEVfVVNFUiIsImV4cCI6MTY4MDE0MzEwM30.5WdbnKr_jizyraHs7cDswZLXf4rtu9in4a3RPljX-I8QLpvvSfx8fcyMe3emkFZRGN8tFO85R0noGCphnFME0w Body 부분에 아래와 같이 입력123456789101112&#123; &quot;login&quot;: &quot;jhipster3&quot;, &quot;firstName&quot;: &quot;jhipster3&quot;, &quot;lastName&quot;: &quot;jhipster3&quot;, &quot;email&quot;: &quot;jhipster3@gmail.com&quot;, &quot;activated&quot;: true, &quot;langKey&quot;: &quot;ko&quot;, &quot;authorities&quot;: [ &quot;ROLE_ADMIN&quot;, &quot;ROLE_USER&quot; ]&#125; Send 버튼클릭 jhipster3 유저가 생성되었다. 관리자 화면을 통해 유저가 생성되었는지 확인해보자.관리자 &gt; 사용자관리 클릭하면 아래 그림과 같이 신규로 추가한 유저를 확인할수 있다. 사용자 수정 테스트 Method : PUT url : http://localhost:8080/api/admin/users Authorization Body 부분에 아래와 같이 입력 (firstname, lastname, email 주소 변경)12345678910111213&#123; &quot;id&quot;: &quot;51001&quot;, &quot;login&quot;: &quot;jhipster3&quot;, &quot;firstName&quot;: &quot;jhipster333&quot;, &quot;lastName&quot;: &quot;jhipster333&quot;, &quot;email&quot;: &quot;jhipster233@gmail.com&quot;, &quot;activated&quot;: true, &quot;langKey&quot;: &quot;ko&quot;, &quot;authorities&quot;: [ &quot;ROLE_ADMIN&quot;, &quot;ROLE_USER&quot; ]&#125; Send 버튼을 클릭하여 사용자 정보 수정진행. 사용자 조회 Method : GET url : http://localhost:8080/api/admin/users/admin Authorization : 위와 동일하게 입력 Body 부분 none 선택 Send 버튼을 클릭하여 사용자 정보 조회 admin에 대한 정보가 리턴된다.123456789101112131415161718&#123; &quot;id&quot;: 1, &quot;login&quot;: &quot;admin&quot;, &quot;firstName&quot;: &quot;Administrator&quot;, &quot;lastName&quot;: &quot;Administrator&quot;, &quot;email&quot;: &quot;admin@localhost&quot;, &quot;imageUrl&quot;: &quot;&quot;, &quot;activated&quot;: true, &quot;langKey&quot;: &quot;ko&quot;, &quot;createdBy&quot;: &quot;system&quot;, &quot;createdDate&quot;: null, &quot;lastModifiedBy&quot;: &quot;system&quot;, &quot;lastModifiedDate&quot;: null, &quot;authorities&quot;: [ &quot;ROLE_USER&quot;, &quot;ROLE_ADMIN&quot; ]&#125; 사용자 삭제 Method : DELETE url : http://localhost:8080/api/admin/users/jhipster3 Authorization : 위와 동일하게 입력 Body 부분 none 선택 Send 버튼을 클릭하여 사용자 삭제 요약jhipster 와 postman을 이용하여 restapi를 테스트 하는 방법에 알아보았다.정말 힙한데 라고 생각한다면 성공한것 같다. 일일 100만명씩 들어오는 사이트가되길 희망하며 글을 마친","categories":[{"name":"Coding","slug":"Coding","permalink":"http://goodsaem.github.io/categories/Coding/"},{"name":"JHipster","slug":"Coding/JHipster","permalink":"http://goodsaem.github.io/categories/Coding/JHipster/"}],"tags":[{"name":"JHipster","slug":"JHipster","permalink":"http://goodsaem.github.io/tags/JHipster/"}]},{"title":"postman 설치","slug":"setup/windows/4","date":"2023-03-28T23:51:00.000Z","updated":"2025-06-29T07:42:01.184Z","comments":true,"path":"setup/windows/4/","link":"","permalink":"http://goodsaem.github.io/setup/windows/4/","excerpt":"","text":"windows server 2022에 postman 설치postman 사이트 접속 https://www.postman.com/windows 아이콘을 클릭하여 다운로드 화면으로 이동 windows 64-bit 버튼을 클릭하여 다운로드 진행 다운로드 받은 파일을 더블클릭하여 설치 진행 Sing in 버튼 클릭 포트스맨 등록한 이메일 주소 패스워드를 입력하거나 구글로 로그인 진행 접속하면 아래와 같은 화면을 확인할수 있다.","categories":[{"name":"설치","slug":"설치","permalink":"http://goodsaem.github.io/categories/%EC%84%A4%EC%B9%98/"},{"name":"window2022","slug":"설치/window2022","permalink":"http://goodsaem.github.io/categories/%EC%84%A4%EC%B9%98/window2022/"}],"tags":[{"name":"window2022","slug":"window2022","permalink":"http://goodsaem.github.io/tags/window2022/"}]},{"title":"3. oracle 21c 사용자 생성","slug":"setup/windows/3","date":"2023-03-28T15:35:00.000Z","updated":"2025-06-29T07:42:01.184Z","comments":true,"path":"setup/windows/3/","link":"","permalink":"http://goodsaem.github.io/setup/windows/3/","excerpt":"","text":"oracle 21c 사용자 생성방법oracle 21c 에서 사용자 생성하는 방법은 아래와 같다. 오라클 21c 에서 계정을 생성할때는 c## 붙여야 하므로 이를 붙이지 않기 위해 아래와 같이 설정한다. 1ALTER SESSION SET &quot;_ORACLE_SCRIPT&quot;=TRUE; 아래 명령어로 오라클 사용자를 생성한다. 1CREATE USER GOODSAEM IDENTIFIED BY goodsaem; 생성한 사용자의 db 접속권한과 자원을 사용할수 있도록 권한을 부여한다. 1GRANT CONNECT, RESOURCE TO GOODSAEM; USERS 테이블 스페이스를 사용할수 있도록 권한을 부여한다. 1ALTER USER GOODSAEM DEFAULT TABLESPACE USERS QUOTA UNLIMITED ON USERS; 테스트sqlplus로 생성한 유저로 DB 접속이 잘되는지 확인해 보자 12345678910111213C:\\Users\\Administrator&gt;sqlplus goodsaem/goodsaemSQL*Plus: Release 21.0.0.0.0 - Production on Tue Mar 28 08:36:39 2023Version 21.3.0.0.0Copyright (c) 1982, 2021, Oracle. All rights reserved.Connected to:Oracle Database 21c Enterprise Edition Release 21.0.0.0.0 - ProductionVersion 21.3.0.0.0SQL&gt;","categories":[{"name":"설치","slug":"설치","permalink":"http://goodsaem.github.io/categories/%EC%84%A4%EC%B9%98/"},{"name":"window2022","slug":"설치/window2022","permalink":"http://goodsaem.github.io/categories/%EC%84%A4%EC%B9%98/window2022/"}],"tags":[{"name":"window2022","slug":"window2022","permalink":"http://goodsaem.github.io/tags/window2022/"}]},{"title":"2. windows server 2022 에 oracle 21c 설치","slug":"setup/windows/2","date":"2023-03-28T14:18:00.000Z","updated":"2025-06-29T07:42:01.135Z","comments":true,"path":"setup/windows/2/","link":"","permalink":"http://goodsaem.github.io/setup/windows/2/","excerpt":"","text":"windows server 2002에 오라클 21c 설치방법windows 환경에서 오라클을 설치하는 방법에 대해서 알아보자. 다운로드아래 사이트에서 오라클 21c 버전을 다운로드 받는다.윈도우 64bit 버전으로 다운로드 받는다. 다운로드 받을때 로그인하라고 하는데 오라클 사이트는자주 사용할예정이니 미리 계정을 만들어 놓자. 로그인하면 파일 다운로드기 진행 된다.https://www.oracle.com/kr/database/technologies/oracle-database-software-downloads.html 설치다운로드 받은 파일의 압축을 해제하고 setup.exe 파일을 실행한다. Next를 클릭한다. Desktop class를 선택하고 Next 를 클릭한다. Use Virtual Account를 선택하고 Next 버튼을 클릭한다. Oracle base database file location password 를 지정하고 Next 버튼을 클릭한다. Install 버튼을 클릭하여 설치를 진행한다. 설치가 진행중이다. 설치가 완료되면 아래와 같은 화면을 확인할수 있다. 연결 확인윈도우 코멘드 창에서 아래와 같은 명령어를 입력하고 접속이 문제없이 이루어진다면 설치완료.. 1sqlplus sys/설치시지정한암호 as sysdba","categories":[{"name":"설치","slug":"설치","permalink":"http://goodsaem.github.io/categories/%EC%84%A4%EC%B9%98/"},{"name":"window2022","slug":"설치/window2022","permalink":"http://goodsaem.github.io/categories/%EC%84%A4%EC%B9%98/window2022/"}],"tags":[{"name":"window2022","slug":"window2022","permalink":"http://goodsaem.github.io/tags/window2022/"}]},{"title":"1. mac에서 virtualbox 로 window server 2022 평가판 설치하는 방법","slug":"setup/windows/win2022","date":"2023-03-28T11:09:00.000Z","updated":"2025-06-29T07:42:01.204Z","comments":true,"path":"setup/windows/win2022/","link":"","permalink":"http://goodsaem.github.io/setup/windows/win2022/","excerpt":"","text":"1. 개요windows 서버에 오라클을 설치할일이 있어 windows 2022 트라이얼 버전을 다운로드 받아서설치 했던 내용을 정리 했다. mac 에 virtual box 에 윈도우 서버 2022를 설치하실려는분들은 참고 바란다. 트라이얼버전은 180간 무료로 사용할수 있다. 다운로드우선 아래 사이트에서 다운로드를 진행한다.https://www.microsoft.com/ko-kr/evalcenter/download-windows-server-2022 영어(미국) ISO 파일을 다운로드 진행함. virtual box 설정이름 : windows2022iso image : 다운로드 받은 iso 이미지를 설정함다음 버튼 클릭 username 과 password 지정후 다음 사용할 메모리와 cpu수 지정 (굳쌤은 16G에 6개 cpu 지정함) 디스크 사이즈는 100G로 지정후 [다음] 모든 설정이 끝나면 FINISH 버튼 클릭 이렇게 진행했는데 아래와 같은 오류가 발생하면서 더이상 설치가 진행되지 않았다.Windows cannot find the Microsoft Software License Terms. Make sure the installation sources are valid and restart the installation. 검색해서 찾아보기 Floppy Disk를 삭제하면 해결된다고 해서 가상머신을 종료하고 가상머신 설정에서 플로피 디스크를 삭제한다. 그리고 나서 설치를 다시 가상머신을 켜면 정상적으로 진행되었다.설치를 계속 진행하자 언어는 English , 시간,keyboard는 모두 Korean으로 지정한다. datacenter 데스크탑 경험이 있는 4번째 항목을 선택하고 next 약관동의 하고 두번째 항목 Custom을 선택한다. 디스크를 선택하고 Next를 클릭한다. 설치가 진행중이다. 설치가 끝나면 Administrator 의 패스워드를 지정해 준다. 아래 그림과 같이 설치가 완료되었다. 데이터 센터 평가판이고180일간 사용할수 있다고 한다. 마무리금방 설치가 될줄 알았는데 너무 높은 버전의 virtual box 와 os 여서 인지생각하지 못한 문제가 많이 있었지만 다 해결했다.다음 시간에는 oracle 최신 버전 설치를 진행할 예정이다.","categories":[{"name":"설치","slug":"설치","permalink":"http://goodsaem.github.io/categories/%EC%84%A4%EC%B9%98/"},{"name":"window2022","slug":"설치/window2022","permalink":"http://goodsaem.github.io/categories/%EC%84%A4%EC%B9%98/window2022/"}],"tags":[{"name":"windows2022","slug":"windows2022","permalink":"http://goodsaem.github.io/tags/windows2022/"}]},{"title":"1. mac intellij 코드정리 단축키","slug":"tool/intelij/1","date":"2023-03-28T04:20:00.000Z","updated":"2025-06-29T07:42:01.236Z","comments":true,"path":"tool/intelij/1/","link":"","permalink":"http://goodsaem.github.io/tool/intelij/1/","excerpt":"","text":"mac intellij 환경에서 코드를 정리하는 단축키는 아래와 같다. 1option + command + L 코드 정리전 123456&lt;table&gt;&lt;tr&gt;&lt;td&gt;asdasdfasdfdsf&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt; 코드 정리후 1234567&lt;table&gt; &lt;tr&gt; &lt;td&gt; asdasdfasdfdsf &lt;/td&gt; &lt;/tr&gt;&lt;/table&gt;","categories":[{"name":"개발툴","slug":"개발툴","permalink":"http://goodsaem.github.io/categories/%EA%B0%9C%EB%B0%9C%ED%88%B4/"},{"name":"IntelliJ","slug":"개발툴/IntelliJ","permalink":"http://goodsaem.github.io/categories/%EA%B0%9C%EB%B0%9C%ED%88%B4/IntelliJ/"}],"tags":[{"name":"IntelliJ","slug":"IntelliJ","permalink":"http://goodsaem.github.io/tags/IntelliJ/"}]},{"title":"vuejs 서비스 포트 변경","slug":"coding/vuejs/vue501","date":"2023-03-28T01:33:03.000Z","updated":"2025-06-29T07:42:00.977Z","comments":true,"path":"coding/vuejs/vue501/","link":"","permalink":"http://goodsaem.github.io/coding/vuejs/vue501/","excerpt":"","text":"Vue.js 를 시작하면 8080 포트로 서비스가 시작 됩니다. 8080 말고 다른 포트를 변경하고 싶을때는 package.json 파일을 아래와 같이 수정합니다. port 8077 : 포트를 8077로 변경했습니다. 12345&quot;scripts&quot;: &#123; &quot;serve&quot;: &quot;vue-cli-service serve --port 8077&quot;, &quot;build&quot;: &quot;vue-cli-service build&quot;, &quot;lint&quot;: &quot;vue-cli-service lint&quot;&#125;,","categories":[{"name":"Coding","slug":"Coding","permalink":"http://goodsaem.github.io/categories/Coding/"},{"name":"vue","slug":"Coding/vue","permalink":"http://goodsaem.github.io/categories/Coding/vue/"}],"tags":[{"name":"vue","slug":"vue","permalink":"http://goodsaem.github.io/tags/vue/"}]},{"title":"2. JHipster 실행","slug":"coding/jhipster/jhipster2","date":"2023-03-27T13:30:00.000Z","updated":"2025-06-29T07:42:00.820Z","comments":true,"path":"coding/jhipster/jhipster2/","link":"","permalink":"http://goodsaem.github.io/coding/jhipster/jhipster2/","excerpt":"","text":"개요1번 설치가 성공적으로 끝났다면 JHipster 를 실행해보고 어떻게 동작하는지 확인 하면서 힙한 자바 개발자로 변신하자 mariadb 데이터베이스 생성 및 계정생성아래 링크를 클릭하여 디비 생성 및 사용자 생성을 먼저 진행한다.jhipster db 생성 및 사용자 생성 db 연결정보 변경jhipster 프로젝트를 인텔리제이에서 오픈한후 아래 dev 설정파일의 db username 과 비밀번호를 변경한다. 수정파일 : jhipster&#x2F;src&#x2F;main&#x2F;resources&#x2F;config&#x2F;application_dev.yml 12345datasource: type: com.zaxxer.hikari.HikariDataSource url: jdbc:mariadb://localhost:3306/jhipster?useLegacyDatetimeCode=false&amp;serverTimezone=UTC username: jhipster password: jhipseter 백엔드 서버 실행아래 명령어 입력을 통해 백엔드 서버를 실행한다. 1./mvnw 실행중 별다른 오류가 없다면 아래와 같은 화면을 확인할수 있다. 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203204205206207208209210211212213214215216217218219220221222223224225226227228229230231232233234235236237[INFO] Scanning for projects...[INFO] [INFO] ------------------&lt; io.github.goodsaem.api:jhipster &gt;-------------------[INFO] Building JHipster 0.0.1-SNAPSHOT[INFO] --------------------------------[ jar ]---------------------------------[INFO] [INFO] &gt;&gt;&gt; spring-boot-maven-plugin:2.7.3:run (default-cli) &gt; test-compile @ jhipster &gt;&gt;&gt;[INFO] [INFO] --- maven-resources-plugin:3.3.0:copy-resources (default-resources) @ jhipster ---[INFO] Copying 6 resources[INFO] Copying 15 resources[INFO] [INFO] --- maven-resources-plugin:3.3.0:resources (default-resources) @ jhipster ---[INFO] Copying 6 resources[INFO] Copying 15 resources[INFO] [INFO] --- maven-enforcer-plugin:3.1.0:enforce (enforce-versions) @ jhipster ---[INFO] [INFO] --- maven-enforcer-plugin:3.1.0:enforce (enforce-dependencyConvergence) @ jhipster ---[WARNING] Dependency convergence error for org.apiguardian:apiguardian-api:jar:1.1.2:compile paths to dependency are:+-io.github.goodsaem.api:jhipster:jar:0.0.1-SNAPSHOT +-org.zalando:problem-spring-web:jar:0.27.0:compile +-org.zalando:problem-violations:jar:0.27.0:compile +-org.apiguardian:apiguardian-api:jar:1.1.2:compileand+-io.github.goodsaem.api:jhipster:jar:0.0.1-SNAPSHOT +-org.zalando:problem-spring-web:jar:0.27.0:compile +-org.zalando:problem-spring-common:jar:0.27.0:compile +-org.apiguardian:apiguardian-api:jar:1.1.2:compileand+-io.github.goodsaem.api:jhipster:jar:0.0.1-SNAPSHOT +-org.zalando:problem-spring-web:jar:0.27.0:compile +-org.apiguardian:apiguardian-api:jar:1.1.2:compileand+-io.github.goodsaem.api:jhipster:jar:0.0.1-SNAPSHOT +-org.zalando:problem-spring-web:jar:0.27.0:compile +-org.zalando:faux-pas:jar:0.9.0:compile +-org.apiguardian:apiguardian-api:jar:1.1.1:compile[WARNING] Rule 0: org.apache.maven.plugins.enforcer.DependencyConvergence failed with message:Failed while enforcing releasability. See above detailed error message.[INFO] [INFO] --- jacoco-maven-plugin:0.8.8:prepare-agent (pre-unit-tests) @ jhipster ---[INFO] argLine set to -javaagent:/Users/gosu/.m2/repository/org/jacoco/org.jacoco.agent/0.8.8/org.jacoco.agent-0.8.8-runtime.jar=destfile=/Users/gosu/jhipster/target/jacoco.exec -Djava.security.egd=file:/dev/./urandom -Xmx1G[INFO] [INFO] --- properties-maven-plugin:1.1.0:read-project-properties (default) @ jhipster ---[INFO] [INFO] --- checksum-maven-plugin:1.11:files (create-pre-compiled-webapp-checksum) @ jhipster ---[INFO] [INFO] --- maven-antrun-plugin:3.1.0:run (eval-frontend-checksum) @ jhipster ---[INFO] Executing tasks[INFO] Executed tasks[INFO] [INFO] --- frontend-maven-plugin:1.12.1:install-node-and-npm (install-node-and-npm) @ jhipster ---[INFO] Node v16.17.0 is already installed.[INFO] NPM 8.19.1 is already installed.[INFO] [INFO] --- frontend-maven-plugin:1.12.1:npm (npm install) @ jhipster ---[INFO] Skipping execution.[INFO] [INFO] --- frontend-maven-plugin:1.12.1:npm (webapp build dev) @ jhipster ---[INFO] Skipping execution.[INFO] [INFO] --- maven-compiler-plugin:3.10.1:compile (default-compile) @ jhipster ---[INFO] Nothing to compile - all classes are up to date[INFO] [INFO] --- checksum-maven-plugin:1.11:files (create-compiled-webapp-checksum) @ jhipster ---[INFO] [INFO] --- maven-resources-plugin:3.3.0:testResources (default-testResources) @ jhipster ---[INFO] Copying 15 resources[INFO] [INFO] --- maven-compiler-plugin:3.10.1:testCompile (default-testCompile) @ jhipster ---[INFO] Nothing to compile - all classes are up to date[INFO] [INFO] &lt;&lt;&lt; spring-boot-maven-plugin:2.7.3:run (default-cli) &lt; test-compile @ jhipster &lt;&lt;&lt;[INFO] [INFO] [INFO] --- spring-boot-maven-plugin:2.7.3:run (default-cli) @ jhipster ---[INFO] Attaching agents: []22:53:58.895 [Thread-0] DEBUG org.springframework.boot.devtools.restart.classloader.RestartClassLoader - Created RestartClassLoader org.springframework.boot.devtools.restart.classloader.RestartClassLoader@2158b81d ██╗ ██╗ ██╗ ████████╗ ███████╗ ██████╗ ████████╗ ████████╗ ███████╗ ██║ ██║ ██║ ╚══██╔══╝ ██╔═══██╗ ██╔════╝ ╚══██╔══╝ ██╔═════╝ ██╔═══██╗ ██║ ████████║ ██║ ███████╔╝ ╚█████╗ ██║ ██████╗ ███████╔╝ ██╗ ██║ ██╔═══██║ ██║ ██╔════╝ ╚═══██╗ ██║ ██╔═══╝ ██╔══██║ ╚██████╔╝ ██║ ██║ ████████╗ ██║ ██████╔╝ ██║ ████████╗ ██║ ╚██╗ ╚═════╝ ╚═╝ ╚═╝ ╚═══════╝ ╚═╝ ╚═════╝ ╚═╝ ╚═══════╝ ╚═╝ ╚═╝:: JHipster 🤓 :: Running Spring Boot 2.7.3 :::: https://www.jhipster.tech ::2023-03-27T22:53:59.219+09:00 DEBUG 16737 --- [kground-preinit] org.jboss.logging : Logging Provider: org.jboss.logging.Log4j2LoggerProvider 2023-03-27T22:53:59.235+09:00 INFO 16737 --- [ restartedMain] io.github.goodsaem.api.JhipsterApp : Starting JhipsterApp using Java 18.0.2 on gosuui-iMac.local with PID 16737 (/Users/gosu/jhipster/target/classes started by gosu in /Users/gosu/jhipster) 2023-03-27T22:53:59.236+09:00 DEBUG 16737 --- [ restartedMain] io.github.goodsaem.api.JhipsterApp : Running with Spring Boot v2.7.3, Spring v5.3.22 2023-03-27T22:53:59.236+09:00 INFO 16737 --- [ restartedMain] io.github.goodsaem.api.JhipsterApp : The following 2 profiles are active: &quot;dev&quot;, &quot;api-docs&quot; 2023-03-27T22:54:00.441+09:00 DEBUG 16737 --- [ restartedMain] i.m.c.u.i.logging.InternalLoggerFactory : Using SLF4J as the default logging framework 2023-03-27T22:54:00.542+09:00 DEBUG 16737 --- [ restartedMain] i.g.goodsaem.api.config.WebConfigurer : Registering CORS filter 2023-03-27T22:54:00.561+09:00 INFO 16737 --- [ restartedMain] i.g.goodsaem.api.config.WebConfigurer : Web application configuration, using profiles: dev 2023-03-27T22:54:00.562+09:00 INFO 16737 --- [ restartedMain] i.g.goodsaem.api.config.WebConfigurer : Web application fully configured 2023-03-27T22:54:00.699+09:00 DEBUG 16737 --- [ restartedMain] c.ehcache.core.Ehcache-usersByLogin : Initialize successful. 2023-03-27T22:54:00.710+09:00 DEBUG 16737 --- [ restartedMain] c.ehcache.core.Ehcache-usersByEmail : Initialize successful. 2023-03-27T22:54:00.712+09:00 DEBUG 16737 --- [ restartedMain] c.e.c.E.github.goodsaem.api.domain.User : Initialize successful. 2023-03-27T22:54:00.714+09:00 DEBUG 16737 --- [ restartedMain] c.e.c.E.g.goodsaem.api.domain.Authority : Initialize successful. 2023-03-27T22:54:00.716+09:00 DEBUG 16737 --- [ restartedMain] c.e.c.E.g.g.api.domain.User.authorities : Initialize successful. 2023-03-27T22:54:00.728+09:00 DEBUG 16737 --- [ restartedMain] i.g.g.api.config.AsyncConfiguration : Creating Async Task Executor 2023-03-27T22:54:00.753+09:00 DEBUG 16737 --- [ restartedMain] i.g.g.api.config.LiquibaseConfiguration : Configuring Liquibase 2023-03-27T22:54:00.798+09:00 DEBUG 16737 --- [ restartedMain] o.m.jdbc.client.impl.StandardClient : execute query: set autocommit=0 2023-03-27T22:54:00.799+09:00 DEBUG 16737 --- [ restartedMain] o.mariadb.jdbc.message.server.OkPacket : System variable change: autocommit = OFF 2023-03-27T22:54:00.801+09:00 DEBUG 16737 --- [ restartedMain] o.m.jdbc.client.impl.StandardClient : execute query: SELECT @@tx_isolation 2023-03-27T22:54:00.809+09:00 WARN 16737 --- [jhipster-task-1] t.j.c.liquibase.AsyncSpringLiquibase : Starting Liquibase asynchronously, your database might not be ready at startup! 2023-03-27T22:54:00.814+09:00 DEBUG 16737 --- [onnection adder] o.m.jdbc.client.impl.StandardClient : execute query: set autocommit=0 2023-03-27T22:54:00.814+09:00 DEBUG 16737 --- [onnection adder] o.mariadb.jdbc.message.server.OkPacket : System variable change: autocommit = OFF 2023-03-27T22:54:00.895+09:00 DEBUG 16737 --- [jhipster-task-1] o.m.jdbc.client.impl.StandardClient : execute query: SELECT COUNT(*) FROM jhipster.DATABASECHANGELOGLOCK 2023-03-27T22:54:00.896+09:00 WARN 16737 --- [jhipster-task-1] o.m.jdbc.message.server.ErrorPacket : Error: 1146-42S02: Table &#x27;jhipster.databasechangeloglock&#x27; doesn&#x27;t exist 2023-03-27T22:54:00.907+09:00 DEBUG 16737 --- [jhipster-task-1] o.m.jdbc.client.impl.StandardClient : execute query: CREATE TABLE jhipster.DATABASECHANGELOGLOCK (ID INT NOT NULL, `LOCKED` BIT(1) NOT NULL, LOCKGRANTED datetime NULL, LOCKEDBY VARCHAR(255) NULL, CONSTRAINT PK_DATABASECHANGELOGLOCK PRIMARY KEY (ID)) 2023-03-27T22:54:00.909+09:00 DEBUG 16737 --- [onnection adder] o.m.jdbc.client.impl.StandardClient : execute query: set autocommit=0 2023-03-27T22:54:00.909+09:00 DEBUG 16737 --- [onnection adder] o.mariadb.jdbc.message.server.OkPacket : System variable change: autocommit = OFF 2023-03-27T22:54:00.912+09:00 DEBUG 16737 --- [onnection adder] o.m.jdbc.client.impl.StandardClient : execute query: set autocommit=0 2023-03-27T22:54:00.912+09:00 DEBUG 16737 --- [onnection adder] o.mariadb.jdbc.message.server.OkPacket : System variable change: autocommit = OFF 2023-03-27T22:54:00.914+09:00 DEBUG 16737 --- [onnection adder] o.m.jdbc.client.impl.StandardClient : execute query: set autocommit=0 2023-03-27T22:54:00.914+09:00 DEBUG 16737 --- [onnection adder] o.mariadb.jdbc.message.server.OkPacket : System variable change: autocommit = OFF 2023-03-27T22:54:00.915+09:00 DEBUG 16737 --- [onnection adder] o.m.jdbc.client.impl.StandardClient : execute query: set autocommit=0 2023-03-27T22:54:00.917+09:00 DEBUG 16737 --- [onnection adder] o.mariadb.jdbc.message.server.OkPacket : System variable change: autocommit = OFF 2023-03-27T22:54:00.918+09:00 DEBUG 16737 --- [onnection adder] o.m.jdbc.client.impl.StandardClient : execute query: set autocommit=0 2023-03-27T22:54:00.919+09:00 DEBUG 16737 --- [onnection adder] o.mariadb.jdbc.message.server.OkPacket : System variable change: autocommit = OFF 2023-03-27T22:54:00.921+09:00 DEBUG 16737 --- [onnection adder] o.m.jdbc.client.impl.StandardClient : execute query: set autocommit=0 2023-03-27T22:54:00.921+09:00 DEBUG 16737 --- [onnection adder] o.mariadb.jdbc.message.server.OkPacket : System variable change: autocommit = OFF 2023-03-27T22:54:00.922+09:00 DEBUG 16737 --- [onnection adder] o.m.jdbc.client.impl.StandardClient : execute query: set autocommit=0 2023-03-27T22:54:00.922+09:00 DEBUG 16737 --- [onnection adder] o.mariadb.jdbc.message.server.OkPacket : System variable change: autocommit = OFF 2023-03-27T22:54:00.923+09:00 DEBUG 16737 --- [onnection adder] o.m.jdbc.client.impl.StandardClient : execute query: set autocommit=0 2023-03-27T22:54:00.925+09:00 DEBUG 16737 --- [onnection adder] o.mariadb.jdbc.message.server.OkPacket : System variable change: autocommit = OFF 2023-03-27T22:54:00.944+09:00 DEBUG 16737 --- [jhipster-task-1] o.m.jdbc.client.impl.StandardClient : execute query: SELECT COUNT(*) FROM jhipster.DATABASECHANGELOGLOCK 2023-03-27T22:54:00.948+09:00 DEBUG 16737 --- [jhipster-task-1] o.m.jdbc.client.impl.StandardClient : execute query: DELETE FROM jhipster.DATABASECHANGELOGLOCK 2023-03-27T22:54:00.949+09:00 DEBUG 16737 --- [jhipster-task-1] o.m.jdbc.client.impl.StandardClient : execute query: INSERT INTO jhipster.DATABASECHANGELOGLOCK (ID, `LOCKED`) VALUES (1, 0) 2023-03-27T22:54:00.949+09:00 DEBUG 16737 --- [jhipster-task-1] o.m.jdbc.client.impl.StandardClient : execute query: COMMIT 2023-03-27T22:54:00.950+09:00 DEBUG 16737 --- [jhipster-task-1] o.m.jdbc.client.impl.StandardClient : execute query: SELECT COUNT(*) FROM jhipster.DATABASECHANGELOGLOCK 2023-03-27T22:54:00.950+09:00 DEBUG 16737 --- [jhipster-task-1] o.m.jdbc.client.impl.StandardClient : execute query: SELECT COUNT(*) FROM jhipster.DATABASECHANGELOGLOCK 2023-03-27T22:54:00.951+09:00 DEBUG 16737 --- [jhipster-task-1] o.m.jdbc.client.impl.StandardClient : execute query: SELECT COUNT(*) FROM jhipster.DATABASECHANGELOGLOCK 2023-03-27T22:54:00.951+09:00 DEBUG 16737 --- [jhipster-task-1] o.m.jdbc.client.impl.StandardClient : execute query: SELECT COUNT(*) FROM jhipster.DATABASECHANGELOGLOCK 2023-03-27T22:54:00.952+09:00 DEBUG 16737 --- [jhipster-task-1] o.m.jdbc.client.impl.StandardClient : execute query: SELECT COUNT(*) FROM jhipster.DATABASECHANGELOGLOCK 2023-03-27T22:54:00.952+09:00 DEBUG 16737 --- [jhipster-task-1] o.m.jdbc.client.impl.StandardClient : execute query: SELECT COUNT(*) FROM jhipster.DATABASECHANGELOGLOCK 2023-03-27T22:54:00.953+09:00 DEBUG 16737 --- [jhipster-task-1] o.m.jdbc.client.impl.StandardClient : execute query: SELECT COUNT(*) FROM jhipster.DATABASECHANGELOGLOCK 2023-03-27T22:54:00.953+09:00 DEBUG 16737 --- [jhipster-task-1] o.m.jdbc.client.impl.StandardClient : execute query: SELECT COUNT(*) FROM jhipster.DATABASECHANGELOGLOCK 2023-03-27T22:54:00.954+09:00 DEBUG 16737 --- [jhipster-task-1] o.m.jdbc.client.impl.StandardClient : execute query: SELECT COUNT(*) FROM jhipster.DATABASECHANGELOGLOCK 2023-03-27T22:54:00.954+09:00 DEBUG 16737 --- [jhipster-task-1] o.m.jdbc.client.impl.StandardClient : execute query: SELECT COUNT(*) FROM jhipster.DATABASECHANGELOGLOCK 2023-03-27T22:54:00.955+09:00 DEBUG 16737 --- [jhipster-task-1] o.m.jdbc.client.impl.StandardClient : execute query: SELECT COUNT(*) FROM jhipster.DATABASECHANGELOGLOCK 2023-03-27T22:54:00.955+09:00 DEBUG 16737 --- [jhipster-task-1] o.m.jdbc.client.impl.StandardClient : execute query: SELECT COUNT(*) FROM jhipster.DATABASECHANGELOGLOCK 2023-03-27T22:54:00.955+09:00 DEBUG 16737 --- [jhipster-task-1] o.m.jdbc.client.impl.StandardClient : execute query: SELECT COUNT(*) FROM jhipster.DATABASECHANGELOGLOCK 2023-03-27T22:54:00.956+09:00 DEBUG 16737 --- [jhipster-task-1] o.m.jdbc.client.impl.StandardClient : execute query: SELECT COUNT(*) FROM jhipster.DATABASECHANGELOGLOCK 2023-03-27T22:54:00.956+09:00 DEBUG 16737 --- [jhipster-task-1] o.m.jdbc.client.impl.StandardClient : execute query: SELECT COUNT(*) FROM jhipster.DATABASECHANGELOGLOCK 2023-03-27T22:54:00.956+09:00 DEBUG 16737 --- [jhipster-task-1] o.m.jdbc.client.impl.StandardClient : execute query: SELECT COUNT(*) FROM jhipster.DATABASECHANGELOGLOCK 2023-03-27T22:54:00.957+09:00 DEBUG 16737 --- [jhipster-task-1] o.m.jdbc.client.impl.StandardClient : execute query: SELECT COUNT(*) FROM jhipster.DATABASECHANGELOGLOCK 2023-03-27T22:54:00.957+09:00 DEBUG 16737 --- [jhipster-task-1] o.m.jdbc.client.impl.StandardClient : execute query: SELECT COUNT(*) FROM jhipster.DATABASECHANGELOGLOCK 2023-03-27T22:54:00.958+09:00 DEBUG 16737 --- [jhipster-task-1] o.m.jdbc.client.impl.StandardClient : execute query: SELECT `LOCKED` FROM jhipster.DATABASECHANGELOGLOCK WHERE ID=1 2023-03-27T22:54:00.961+09:00 DEBUG 16737 --- [jhipster-task-1] o.m.jdbc.client.impl.StandardClient : execute query: UPDATE jhipster.DATABASECHANGELOGLOCK SET `LOCKED` = 1, LOCKEDBY = &#x27;192.168.0.15 (192.168.0.15)&#x27;, LOCKGRANTED = NOW() WHERE ID = 1 AND `LOCKED` = 0 2023-03-27T22:54:00.961+09:00 DEBUG 16737 --- [jhipster-task-1] o.m.jdbc.client.impl.StandardClient : execute query: COMMIT 2023-03-27T22:54:01.064+09:00 DEBUG 16737 --- [ restartedMain] o.m.jdbc.client.impl.StandardClient : execute query: select @@lower_case_table_names 2023-03-27T22:54:01.108+09:00 DEBUG 16737 --- [jhipster-task-1] o.m.jdbc.client.impl.StandardClient : execute query: select @@lower_case_table_names 2023-03-27T22:54:01.109+09:00 DEBUG 16737 --- [jhipster-task-1] o.m.jdbc.client.impl.StandardClient : execute query: SELECT TABLE_SCHEMA TABLE_CAT, NULL TABLE_SCHEM, TABLE_NAME, IF(TABLE_TYPE=&#x27;BASE TABLE&#x27; or TABLE_TYPE=&#x27;SYSTEM VERSIONED&#x27;, &#x27;TABLE&#x27;, TABLE_TYPE) as TABLE_TYPE, TABLE_COMMENT REMARKS, NULL TYPE_CAT, NULL TYPE_SCHEM, NULL TYPE_NAME, NULL SELF_REFERENCING_COL_NAME, NULL REF_GENERATION FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA=&#x27;jhipster&#x27; AND TABLE_NAME=&#x27;DATABASECHANGELOG&#x27; AND TABLE_TYPE IN (&#x27;BASE TABLE&#x27;,&#x27;SYSTEM VERSIONED&#x27;) ORDER BY TABLE_TYPE, TABLE_SCHEMA, TABLE_NAME 2023-03-27T22:54:01.111+09:00 DEBUG 16737 --- [jhipster-task-1] o.m.jdbc.client.impl.StandardClient : execute query: CREATE TABLE jhipster.DATABASECHANGELOG (ID VARCHAR(255) NOT NULL, AUTHOR VARCHAR(255) NOT NULL, FILENAME VARCHAR(255) NOT NULL, DATEEXECUTED datetime NOT NULL, ORDEREXECUTED INT NOT NULL, EXECTYPE VARCHAR(10) NOT NULL, MD5SUM VARCHAR(35) NULL, `DESCRIPTION` VARCHAR(255) NULL, COMMENTS VARCHAR(255) NULL, TAG VARCHAR(255) NULL, LIQUIBASE VARCHAR(20) NULL, CONTEXTS VARCHAR(255) NULL, LABELS VARCHAR(255) NULL, DEPLOYMENT_ID VARCHAR(10) NULL) 2023-03-27T22:54:01.151+09:00 DEBUG 16737 --- [jhipster-task-1] o.m.jdbc.client.impl.StandardClient : execute query: SELECT COUNT(*) FROM jhipster.DATABASECHANGELOG 2023-03-27T22:54:01.152+09:00 DEBUG 16737 --- [jhipster-task-1] o.m.jdbc.client.impl.StandardClient : execute query: SELECT * FROM jhipster.DATABASECHANGELOG ORDER BY DATEEXECUTED ASC, ORDEREXECUTED ASC 2023-03-27T22:54:01.153+09:00 DEBUG 16737 --- [jhipster-task-1] o.m.jdbc.client.impl.StandardClient : execute query: COMMIT 2023-03-27T22:54:01.153+09:00 DEBUG 16737 --- [jhipster-task-1] o.m.jdbc.client.impl.StandardClient : execute query: SELECT COUNT(*) FROM jhipster.DATABASECHANGELOGLOCK 2023-03-27T22:54:01.153+09:00 DEBUG 16737 --- [jhipster-task-1] o.m.jdbc.client.impl.StandardClient : execute query: SELECT COUNT(*) FROM jhipster.DATABASECHANGELOGLOCK 2023-03-27T22:54:01.154+09:00 DEBUG 16737 --- [jhipster-task-1] o.m.jdbc.client.impl.StandardClient : execute query: SELECT COUNT(*) FROM jhipster.DATABASECHANGELOGLOCK 2023-03-27T22:54:01.154+09:00 DEBUG 16737 --- [jhipster-task-1] o.m.jdbc.client.impl.StandardClient : execute query: SELECT COUNT(*) FROM jhipster.DATABASECHANGELOGLOCK 2023-03-27T22:54:01.155+09:00 DEBUG 16737 --- [jhipster-task-1] o.m.jdbc.client.impl.StandardClient : execute query: SELECT COUNT(*) FROM jhipster.DATABASECHANGELOGLOCK 2023-03-27T22:54:01.155+09:00 DEBUG 16737 --- [jhipster-task-1] o.m.jdbc.client.impl.StandardClient : execute query: SELECT COUNT(*) FROM jhipster.DATABASECHANGELOGLOCK 2023-03-27T22:54:01.155+09:00 DEBUG 16737 --- [jhipster-task-1] o.m.jdbc.client.impl.StandardClient : execute query: SELECT COUNT(*) FROM jhipster.DATABASECHANGELOGLOCK 2023-03-27T22:54:01.155+09:00 DEBUG 16737 --- [jhipster-task-1] o.m.jdbc.client.impl.StandardClient : execute query: SELECT COUNT(*) FROM jhipster.DATABASECHANGELOGLOCK 2023-03-27T22:54:01.156+09:00 DEBUG 16737 --- [jhipster-task-1] o.m.jdbc.client.impl.StandardClient : execute query: SELECT COUNT(*) FROM jhipster.DATABASECHANGELOGLOCK 2023-03-27T22:54:01.156+09:00 DEBUG 16737 --- [jhipster-task-1] o.m.jdbc.client.impl.StandardClient : execute query: SELECT COUNT(*) FROM jhipster.DATABASECHANGELOGLOCK 2023-03-27T22:54:01.156+09:00 DEBUG 16737 --- [jhipster-task-1] o.m.jdbc.client.impl.StandardClient : execute query: SELECT COUNT(*) FROM jhipster.DATABASECHANGELOGLOCK 2023-03-27T22:54:01.157+09:00 DEBUG 16737 --- [jhipster-task-1] o.m.jdbc.client.impl.StandardClient : execute query: SELECT COUNT(*) FROM jhipster.DATABASECHANGELOGLOCK 2023-03-27T22:54:01.157+09:00 DEBUG 16737 --- [jhipster-task-1] o.m.jdbc.client.impl.StandardClient : execute query: SELECT COUNT(*) FROM jhipster.DATABASECHANGELOGLOCK 2023-03-27T22:54:01.157+09:00 DEBUG 16737 --- [jhipster-task-1] o.m.jdbc.client.impl.StandardClient : execute query: SELECT COUNT(*) FROM jhipster.DATABASECHANGELOGLOCK 2023-03-27T22:54:01.158+09:00 DEBUG 16737 --- [jhipster-task-1] o.m.jdbc.client.impl.StandardClient : execute query: SELECT COUNT(*) FROM jhipster.DATABASECHANGELOGLOCK 2023-03-27T22:54:01.158+09:00 DEBUG 16737 --- [jhipster-task-1] o.m.jdbc.client.impl.StandardClient : execute query: SELECT COUNT(*) FROM jhipster.DATABASECHANGELOGLOCK 2023-03-27T22:54:01.158+09:00 DEBUG 16737 --- [jhipster-task-1] o.m.jdbc.client.impl.StandardClient : execute query: SELECT COUNT(*) FROM jhipster.DATABASECHANGELOGLOCK 2023-03-27T22:54:01.159+09:00 DEBUG 16737 --- [jhipster-task-1] o.m.jdbc.client.impl.StandardClient : execute query: SELECT COUNT(*) FROM jhipster.DATABASECHANGELOGLOCK 2023-03-27T22:54:01.159+09:00 DEBUG 16737 --- [jhipster-task-1] o.m.jdbc.client.impl.StandardClient : execute query: SELECT COUNT(*) FROM jhipster.DATABASECHANGELOGLOCK 2023-03-27T22:54:01.159+09:00 DEBUG 16737 --- [jhipster-task-1] o.m.jdbc.client.impl.StandardClient : execute query: SELECT COUNT(*) FROM jhipster.DATABASECHANGELOGLOCK 2023-03-27T22:54:01.161+09:00 DEBUG 16737 --- [jhipster-task-1] o.m.jdbc.client.impl.StandardClient : execute query: ROLLBACK 2023-03-27T22:54:01.163+09:00 DEBUG 16737 --- [ restartedMain] o.m.jdbc.client.impl.StandardClient : execute query: PREPARE select table_name from information_schema.tables where table_schema = database() and table_type = &#x27;SEQUENCE&#x27; 2023-03-27T22:54:01.164+09:00 DEBUG 16737 --- [ restartedMain] o.m.jdbc.client.impl.StandardClient : execute query: EXECUTE select table_name from information_schema.tables where table_schema = database() and table_type = &#x27;SEQUENCE&#x27; 2023-03-27T22:54:01.236+09:00 WARN 16737 --- [jhipster-task-1] liquibase.changelog : Due to mariadb SQL limitations, setNullable will lose primary key/autoincrement/not null/comment settings explicitly redefined in the change. Use &lt;sql&gt; or &lt;modifySql&gt; to re-specify all configuration if this is the case Running Changeset: config/liquibase/changelog/00000000000000_initial_schema.xml::00000000000000::jhipster2023-03-27T22:54:01.246+09:00 DEBUG 16737 --- [jhipster-task-1] o.m.jdbc.client.impl.StandardClient : execute query: CREATE SEQUENCE jhipster.sequence_generator INCREMENT BY 50 START WITH 1050 2023-03-27T22:54:01.277+09:00 DEBUG 16737 --- [jhipster-task-1] o.m.jdbc.client.impl.StandardClient : execute query: SELECT MAX(ORDEREXECUTED) FROM jhipster.DATABASECHANGELOG 2023-03-27T22:54:01.278+09:00 DEBUG 16737 --- [jhipster-task-1] o.m.jdbc.client.impl.StandardClient : execute query: INSERT INTO jhipster.DATABASECHANGELOG (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, `DESCRIPTION`, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES (&#x27;00000000000000&#x27;, &#x27;jhipster&#x27;, &#x27;config/liquibase/changelog/00000000000000_initial_schema.xml&#x27;, NOW(), 1, &#x27;8:b8c27d9dc8db18b5de87cdb8c38a416b&#x27;, &#x27;createSequence sequenceName=sequence_generator&#x27;, &#x27;&#x27;, &#x27;EXECUTED&#x27;, NULL, NULL, &#x27;4.15.0&#x27;, &#x27;9925241159&#x27;) 2023-03-27T22:54:01.279+09:00 DEBUG 16737 --- [jhipster-task-1] o.m.jdbc.client.impl.StandardClient : execute query: COMMIT Running Changeset: config/liquibase/changelog/00000000000000_initial_schema.xml::00000000000001::jhipster2023-03-27T22:54:01.282+09:00 DEBUG 16737 --- [jhipster-task-1] o.m.jdbc.client.impl.StandardClient : execute query: CREATE TABLE jhipster.jhi_user (id BIGINT NOT NULL, login VARCHAR(50) NOT NULL, password_hash VARCHAR(60) NULL, first_name VARCHAR(50) NULL, last_name VARCHAR(50) NULL, email VARCHAR(191) NULL, image_url VARCHAR(256) NULL, activated BIT(1) NOT NULL, lang_key VARCHAR(10) NULL, activation_key VARCHAR(20) NULL, reset_key VARCHAR(20) NULL, created_by VARCHAR(50) NOT NULL, created_date timestamp NULL, reset_date timestamp NULL, last_modified_by VARCHAR(50) NULL, last_modified_date timestamp NULL, CONSTRAINT PK_JHI_USER PRIMARY KEY (id), CONSTRAINT ux_user_login UNIQUE (login), CONSTRAINT ux_user_email UNIQUE (email)) 2023-03-27T22:54:01.308+09:00 DEBUG 16737 --- [jhipster-task-1] o.m.jdbc.client.impl.StandardClient : execute query: CREATE TABLE jhipster.jhi_authority (name VARCHAR(50) NOT NULL, CONSTRAINT PK_JHI_AUTHORITY PRIMARY KEY (name)) 2023-03-27T22:54:01.335+09:00 DEBUG 16737 --- [jhipster-task-1] o.m.jdbc.client.impl.StandardClient : execute query: CREATE TABLE jhipster.jhi_user_authority (user_id BIGINT NOT NULL, authority_name VARCHAR(50) NOT NULL) 2023-03-27T22:54:01.362+09:00 DEBUG 16737 --- [jhipster-task-1] o.m.jdbc.client.impl.StandardClient : execute query: ALTER TABLE jhipster.jhi_user_authority ADD PRIMARY KEY (user_id, authority_name) 2023-03-27T22:54:01.429+09:00 DEBUG 16737 --- [jhipster-task-1] o.m.jdbc.client.impl.StandardClient : execute query: ALTER TABLE jhipster.jhi_user_authority ADD CONSTRAINT fk_authority_name FOREIGN KEY (authority_name) REFERENCES jhipster.jhi_authority (name) 2023-03-27T22:54:01.491+09:00 DEBUG 16737 --- [jhipster-task-1] o.m.jdbc.client.impl.StandardClient : execute query: ALTER TABLE jhipster.jhi_user_authority ADD CONSTRAINT fk_user_id FOREIGN KEY (user_id) REFERENCES jhipster.jhi_user (id) 2023-03-27T22:54:01.545+09:00 DEBUG 16737 --- [ restartedMain] i.g.g.api.security.jwt.TokenProvider : Using a Base64-encoded JWT secret key 2023-03-27T22:54:01.546+09:00 DEBUG 16737 --- [jhipster-task-1] o.m.jdbc.client.impl.StandardClient : execute query: ALTER TABLE jhipster.jhi_user MODIFY password_hash VARCHAR(60) NOT NULL 2023-03-27T22:54:01.614+09:00 DEBUG 16737 --- [jhipster-task-1] o.m.jdbc.client.impl.StandardClient : execute query: SELECT TABLE_SCHEMA TABLE_CAT, NULL TABLE_SCHEM, TABLE_NAME, IF(TABLE_TYPE=&#x27;BASE TABLE&#x27; or TABLE_TYPE=&#x27;SYSTEM VERSIONED&#x27;, &#x27;TABLE&#x27;, TABLE_TYPE) as TABLE_TYPE, TABLE_COMMENT REMARKS, NULL TYPE_CAT, NULL TYPE_SCHEM, NULL TYPE_NAME, NULL SELF_REFERENCING_COL_NAME, NULL REF_GENERATION FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA=&#x27;jhipster&#x27; AND TABLE_NAME LIKE &#x27;jhi\\\\_user&#x27; AND TABLE_TYPE IN (&#x27;BASE TABLE&#x27;,&#x27;SYSTEM VERSIONED&#x27;) ORDER BY TABLE_TYPE, TABLE_SCHEMA, TABLE_NAME 2023-03-27T22:54:01.616+09:00 DEBUG 16737 --- [jhipster-task-1] o.m.jdbc.client.impl.StandardClient : execute query: SELECT TABLE_SCHEMA TABLE_CAT, NULL TABLE_SCHEM, TABLE_NAME, COLUMN_NAME, CASE data_type WHEN &#x27;bit&#x27; THEN -7 WHEN &#x27;tinyblob&#x27; THEN -3 WHEN &#x27;mediumblob&#x27; THEN -4 WHEN &#x27;longblob&#x27; THEN -4 WHEN &#x27;blob&#x27; THEN -4 WHEN &#x27;tinytext&#x27; THEN 12 WHEN &#x27;mediumtext&#x27; THEN -1 WHEN &#x27;longtext&#x27; THEN -1 WHEN &#x27;text&#x27; THEN -1 WHEN &#x27;date&#x27; THEN 91 WHEN &#x27;datetime&#x27; THEN 93 WHEN &#x27;decimal&#x27; THEN 3 WHEN &#x27;double&#x27; THEN 8 WHEN &#x27;enum&#x27; THEN 12 WHEN &#x27;float&#x27; THEN 7 WHEN &#x27;int&#x27; THEN IF( COLUMN_TYPE like &#x27;%unsigned%&#x27;, 4,4) WHEN &#x27;bigint&#x27; THEN -5 WHEN &#x27;mediumint&#x27; THEN 4 WHEN &#x27;null&#x27; THEN 0 WHEN &#x27;set&#x27; THEN 12 WHEN &#x27;smallint&#x27; THEN IF( COLUMN_TYPE like &#x27;%unsigned%&#x27;, 5,5) WHEN &#x27;varchar&#x27; THEN 12 WHEN &#x27;varbinary&#x27; THEN -3 WHEN &#x27;char&#x27; THEN 1 WHEN &#x27;binary&#x27; THEN -2 WHEN &#x27;time&#x27; THEN 92 WHEN &#x27;timestamp&#x27; THEN 93 WHEN &#x27;tinyint&#x27; THEN IF(COLUMN_TYPE like &#x27;tinyint(1)%&#x27;,-7,-6) WHEN &#x27;year&#x27; THEN 91 ELSE 1111 END DATA_TYPE, IF(COLUMN_TYPE like &#x27;tinyint(1)%&#x27;, &#x27;BIT&#x27;, UCASE(IF( COLUMN_TYPE LIKE &#x27;%(%)%&#x27;, CONCAT(SUBSTRING( COLUMN_TYPE,1, LOCATE(&#x27;(&#x27;,COLUMN_TYPE) - 1 ), SUBSTRING(COLUMN_TYPE ,1+locate(&#x27;)&#x27;, COLUMN_TYPE))), COLUMN_TYPE))) TYPE_NAME, CASE DATA_TYPE WHEN &#x27;time&#x27; THEN IF(DATETIME_PRECISION = 0, 10, CAST(11 + DATETIME_PRECISION as signed integer)) WHEN &#x27;date&#x27; THEN 10 WHEN &#x27;datetime&#x27; THEN IF(DATETIME_PRECISION = 0, 19, CAST(20 + DATETIME_PRECISION as signed integer)) WHEN &#x27;timestamp&#x27; THEN IF(DATETIME_PRECISION = 0, 19, CAST(20 + DATETIME_PRECISION as signed integer)) ELSE IF(NUMERIC_PRECISION IS NULL, LEAST(CHARACTER_MAXIMUM_LENGTH,2147483647), NUMERIC_PRECISION) END COLUMN_SIZE, 65535 BUFFER_LENGTH, CONVERT (CASE DATA_TYPE WHEN &#x27;year&#x27; THEN NUMERIC_SCALE WHEN &#x27;tinyint&#x27; THEN 0 ELSE NUMERIC_SCALE END, UNSIGNED INTEGER) DECIMAL_DIGITS, 10 NUM_PREC_RADIX, IF(IS_NULLABLE = &#x27;yes&#x27;,1,0) NULLABLE,COLUMN_COMMENT REMARKS, COLUMN_DEFAULT COLUMN_DEF, 0 SQL_DATA_TYPE, 0 SQL_DATETIME_SUB, LEAST(CHARACTER_OCTET_LENGTH,2147483647) CHAR_OCTET_LENGTH, ORDINAL_POSITION, IS_NULLABLE, NULL SCOPE_CATALOG, NULL SCOPE_SCHEMA, NULL SCOPE_TABLE, NULL SOURCE_DATA_TYPE, IF(EXTRA = &#x27;auto_increment&#x27;,&#x27;YES&#x27;,&#x27;NO&#x27;) IS_AUTOINCREMENT, IF(EXTRA in (&#x27;VIRTUAL&#x27;, &#x27;PERSISTENT&#x27;, &#x27;VIRTUAL GENERATED&#x27;, &#x27;STORED GENERATED&#x27;) ,&#x27;YES&#x27;,&#x27;NO&#x27;) IS_GENERATEDCOLUMN FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA=&#x27;jhipster&#x27; ORDER BY TABLE_CAT, TABLE_SCHEM, TABLE_NAME, ORDINAL_POSITION 2023-03-27T22:54:01.620+09:00 DEBUG 16737 --- [jhipster-task-1] o.m.jdbc.client.impl.StandardClient : execute query: SELECT TABLE_SCHEMA, TABLE_NAME, COLUMN_NAME, DATA_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = &#x27;jhipster&#x27; 2023-03-27T22:54:01.636+09:00 DEBUG 16737 --- [jhipster-task-1] o.m.jdbc.client.impl.StandardClient : execute query: PREPARE INSERT INTO jhipster.jhi_user(id, login, password_hash, first_name, last_name, email, image_url, activated, lang_key, created_by, last_modified_by) VALUES(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) 2023-03-27T22:54:01.636+09:00 DEBUG 16737 --- [jhipster-task-1] o.m.jdbc.client.impl.StandardClient : execute query: EXECUTE INSERT INTO jhipster.jhi_user(id, login, password_hash, first_name, last_name, email, image_url, activated, lang_key, created_by, last_modified_by) VALUES(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) 2023-03-27T22:54:01.637+09:00 DEBUG 16737 --- [jhipster-task-1] o.m.jdbc.client.impl.StandardClient : execute query: EXECUTE INSERT INTO jhipster.jhi_user(id, login, password_hash, first_name, last_name, email, image_url, activated, lang_key, created_by, last_modified_by) VALUES(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) 2023-03-27T22:54:01.637+09:00 DEBUG 16737 --- [jhipster-task-1] o.m.jdbc.client.impl.StandardClient : execute query: ALTER TABLE jhipster.jhi_user ALTER created_date DROP DEFAULT 2023-03-27T22:54:01.694+09:00 DEBUG 16737 --- [jhipster-task-1] o.m.jdbc.client.impl.StandardClient : execute query: PREPARE INSERT INTO jhipster.jhi_authority(name) VALUES(?) 2023-03-27T22:54:01.694+09:00 DEBUG 16737 --- [jhipster-task-1] o.m.jdbc.client.impl.StandardClient : execute query: EXECUTE INSERT INTO jhipster.jhi_authority(name) VALUES(?) 2023-03-27T22:54:01.695+09:00 DEBUG 16737 --- [jhipster-task-1] o.m.jdbc.client.impl.StandardClient : execute query: EXECUTE INSERT INTO jhipster.jhi_authority(name) VALUES(?) 2023-03-27T22:54:01.695+09:00 DEBUG 16737 --- [jhipster-task-1] o.m.jdbc.client.impl.StandardClient : execute query: SELECT TABLE_SCHEMA TABLE_CAT, NULL TABLE_SCHEM, TABLE_NAME, IF(TABLE_TYPE=&#x27;BASE TABLE&#x27; or TABLE_TYPE=&#x27;SYSTEM VERSIONED&#x27;, &#x27;TABLE&#x27;, TABLE_TYPE) as TABLE_TYPE, TABLE_COMMENT REMARKS, NULL TYPE_CAT, NULL TYPE_SCHEM, NULL TYPE_NAME, NULL SELF_REFERENCING_COL_NAME, NULL REF_GENERATION FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA=&#x27;jhipster&#x27; AND TABLE_NAME LIKE &#x27;jhi\\\\_user\\\\_authority&#x27; AND TABLE_TYPE IN (&#x27;BASE TABLE&#x27;,&#x27;SYSTEM VERSIONED&#x27;) ORDER BY TABLE_TYPE, TABLE_SCHEMA, TABLE_NAME 2023-03-27T22:54:01.696+09:00 DEBUG 16737 --- [jhipster-task-1] o.m.jdbc.client.impl.StandardClient : execute query: SELECT TABLE_SCHEMA TABLE_CAT, NULL TABLE_SCHEM, TABLE_NAME, COLUMN_NAME, CASE data_type WHEN &#x27;bit&#x27; THEN -7 WHEN &#x27;tinyblob&#x27; THEN -3 WHEN &#x27;mediumblob&#x27; THEN -4 WHEN &#x27;longblob&#x27; THEN -4 WHEN &#x27;blob&#x27; THEN -4 WHEN &#x27;tinytext&#x27; THEN 12 WHEN &#x27;mediumtext&#x27; THEN -1 WHEN &#x27;longtext&#x27; THEN -1 WHEN &#x27;text&#x27; THEN -1 WHEN &#x27;date&#x27; THEN 91 WHEN &#x27;datetime&#x27; THEN 93 WHEN &#x27;decimal&#x27; THEN 3 WHEN &#x27;double&#x27; THEN 8 WHEN &#x27;enum&#x27; THEN 12 WHEN &#x27;float&#x27; THEN 7 WHEN &#x27;int&#x27; THEN IF( COLUMN_TYPE like &#x27;%unsigned%&#x27;, 4,4) WHEN &#x27;bigint&#x27; THEN -5 WHEN &#x27;mediumint&#x27; THEN 4 WHEN &#x27;null&#x27; THEN 0 WHEN &#x27;set&#x27; THEN 12 WHEN &#x27;smallint&#x27; THEN IF( COLUMN_TYPE like &#x27;%unsigned%&#x27;, 5,5) WHEN &#x27;varchar&#x27; THEN 12 WHEN &#x27;varbinary&#x27; THEN -3 WHEN &#x27;char&#x27; THEN 1 WHEN &#x27;binary&#x27; THEN -2 WHEN &#x27;time&#x27; THEN 92 WHEN &#x27;timestamp&#x27; THEN 93 WHEN &#x27;tinyint&#x27; THEN IF(COLUMN_TYPE like &#x27;tinyint(1)%&#x27;,-7,-6) WHEN &#x27;year&#x27; THEN 91 ELSE 1111 END DATA_TYPE, IF(COLUMN_TYPE like &#x27;tinyint(1)%&#x27;, &#x27;BIT&#x27;, UCASE(IF( COLUMN_TYPE LIKE &#x27;%(%)%&#x27;, CONCAT(SUBSTRING( COLUMN_TYPE,1, LOCATE(&#x27;(&#x27;,COLUMN_TYPE) - 1 ), SUBSTRING(COLUMN_TYPE ,1+locate(&#x27;)&#x27;, COLUMN_TYPE))), COLUMN_TYPE))) TYPE_NAME, CASE DATA_TYPE WHEN &#x27;time&#x27; THEN IF(DATETIME_PRECISION = 0, 10, CAST(11 + DATETIME_PRECISION as signed integer)) WHEN &#x27;date&#x27; THEN 10 WHEN &#x27;datetime&#x27; THEN IF(DATETIME_PRECISION = 0, 19, CAST(20 + DATETIME_PRECISION as signed integer)) WHEN &#x27;timestamp&#x27; THEN IF(DATETIME_PRECISION = 0, 19, CAST(20 + DATETIME_PRECISION as signed integer)) ELSE IF(NUMERIC_PRECISION IS NULL, LEAST(CHARACTER_MAXIMUM_LENGTH,2147483647), NUMERIC_PRECISION) END COLUMN_SIZE, 65535 BUFFER_LENGTH, CONVERT (CASE DATA_TYPE WHEN &#x27;year&#x27; THEN NUMERIC_SCALE WHEN &#x27;tinyint&#x27; THEN 0 ELSE NUMERIC_SCALE END, UNSIGNED INTEGER) DECIMAL_DIGITS, 10 NUM_PREC_RADIX, IF(IS_NULLABLE = &#x27;yes&#x27;,1,0) NULLABLE,COLUMN_COMMENT REMARKS, COLUMN_DEFAULT COLUMN_DEF, 0 SQL_DATA_TYPE, 0 SQL_DATETIME_SUB, LEAST(CHARACTER_OCTET_LENGTH,2147483647) CHAR_OCTET_LENGTH, ORDINAL_POSITION, IS_NULLABLE, NULL SCOPE_CATALOG, NULL SCOPE_SCHEMA, NULL SCOPE_TABLE, NULL SOURCE_DATA_TYPE, IF(EXTRA = &#x27;auto_increment&#x27;,&#x27;YES&#x27;,&#x27;NO&#x27;) IS_AUTOINCREMENT, IF(EXTRA in (&#x27;VIRTUAL&#x27;, &#x27;PERSISTENT&#x27;, &#x27;VIRTUAL GENERATED&#x27;, &#x27;STORED GENERATED&#x27;) ,&#x27;YES&#x27;,&#x27;NO&#x27;) IS_GENERATEDCOLUMN FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA=&#x27;jhipster&#x27; ORDER BY TABLE_CAT, TABLE_SCHEM, TABLE_NAME, ORDINAL_POSITION 2023-03-27T22:54:01.698+09:00 DEBUG 16737 --- [jhipster-task-1] o.m.jdbc.client.impl.StandardClient : execute query: SELECT TABLE_SCHEMA, TABLE_NAME, COLUMN_NAME, DATA_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = &#x27;jhipster&#x27; 2023-03-27T22:54:01.701+09:00 DEBUG 16737 --- [jhipster-task-1] o.m.jdbc.client.impl.StandardClient : execute query: PREPARE INSERT INTO jhipster.jhi_user_authority(user_id, authority_name) VALUES(?, ?) 2023-03-27T22:54:01.701+09:00 DEBUG 16737 --- [jhipster-task-1] o.m.jdbc.client.impl.StandardClient : execute query: EXECUTE INSERT INTO jhipster.jhi_user_authority(user_id, authority_name) VALUES(?, ?) 2023-03-27T22:54:01.702+09:00 DEBUG 16737 --- [jhipster-task-1] o.m.jdbc.client.impl.StandardClient : execute query: EXECUTE INSERT INTO jhipster.jhi_user_authority(user_id, authority_name) VALUES(?, ?) 2023-03-27T22:54:01.702+09:00 DEBUG 16737 --- [jhipster-task-1] o.m.jdbc.client.impl.StandardClient : execute query: EXECUTE INSERT INTO jhipster.jhi_user_authority(user_id, authority_name) VALUES(?, ?) 2023-03-27T22:54:01.702+09:00 DEBUG 16737 --- [jhipster-task-1] o.m.jdbc.client.impl.StandardClient : execute query: COMMIT 2023-03-27T22:54:01.703+09:00 DEBUG 16737 --- [jhipster-task-1] o.m.jdbc.client.impl.StandardClient : execute query: INSERT INTO jhipster.DATABASECHANGELOG (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, `DESCRIPTION`, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES (&#x27;00000000000001&#x27;, &#x27;jhipster&#x27;, &#x27;config/liquibase/changelog/00000000000000_initial_schema.xml&#x27;, NOW(), 2, &#x27;8:bfcfe797a737c34ed3179d416d50be6f&#x27;, &#x27;createTable tableName=jhi_user; createTable tableName=jhi_authority; createTable tableName=jhi_user_authority; addPrimaryKey tableName=jhi_user_authority; addForeignKeyConstraint baseTableName=jhi_user_authority, constraintName=fk_authority_name, ...&#x27;, &#x27;&#x27;, &#x27;EXECUTED&#x27;, NULL, NULL, &#x27;4.15.0&#x27;, &#x27;9925241159&#x27;) 2023-03-27T22:54:01.704+09:00 DEBUG 16737 --- [jhipster-task-1] o.m.jdbc.client.impl.StandardClient : execute query: COMMIT 2023-03-27T22:54:01.705+09:00 DEBUG 16737 --- [jhipster-task-1] o.m.jdbc.client.impl.StandardClient : execute query: UPDATE jhipster.DATABASECHANGELOGLOCK SET `LOCKED` = 0, LOCKEDBY = NULL, LOCKGRANTED = NULL WHERE ID = 1 2023-03-27T22:54:01.705+09:00 DEBUG 16737 --- [jhipster-task-1] o.m.jdbc.client.impl.StandardClient : execute query: COMMIT 2023-03-27T22:54:01.706+09:00 DEBUG 16737 --- [jhipster-task-1] t.j.c.liquibase.AsyncSpringLiquibase : Liquibase has updated your database in 896 ms 2023-03-27T22:54:02.438+09:00 DEBUG 16737 --- [ restartedMain] c.a.JHipsterSpringDocGroupsConfiguration : Initializing JHipster OpenApi customizer 2023-03-27T22:54:02.442+09:00 DEBUG 16737 --- [ restartedMain] c.a.JHipsterSpringDocGroupsConfiguration : Initializing JHipster OpenApi default group 2023-03-27T22:54:02.445+09:00 DEBUG 16737 --- [ restartedMain] c.a.JHipsterSpringDocGroupsConfiguration : Initializing JHipster OpenApi management group 2023-03-27T22:54:02.768+09:00 INFO 16737 --- [ restartedMain] org.jboss.threads : JBoss Threads version 3.1.0.Final 2023-03-27T22:54:02.802+09:00 INFO 16737 --- [ restartedMain] io.github.goodsaem.api.JhipsterApp : Started JhipsterApp in 3.901 seconds (JVM running for 4.157) 2023-03-27T22:54:02.806+09:00 INFO 16737 --- [ restartedMain] io.github.goodsaem.api.JhipsterApp : ---------------------------------------------------------- Application &#x27;jhipster&#x27; is running! Access URLs: Local: http://localhost:8080/ External: http://218.38.137.27:8080/ Profile(s): [dev, api-docs]---------------------------------------------------------- 프론트 서버 실행1npm run start 실행로그 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556&gt; jhipster@0.0.0 start&gt; npm run webapp:dev --&gt; jhipster@0.0.0 webapp:dev&gt; npm run webpack-dev-server -- --mode development --env stats=normal&gt; jhipster@0.0.0 webpack-dev-server&gt; webpack serve --config webpack/webpack.common.js &quot;--mode&quot; &quot;development&quot; &quot;--env&quot; &quot;stats=normal&quot;&lt;i&gt; [webpack-dev-server] [HPM] Proxy created: /api,/services,/management,/v3/api-docs,/h2-console,/auth -&gt; http://localhost:8080&lt;i&gt; [webpack-dev-server] Project is running at:&lt;i&gt; [webpack-dev-server] Loopback: http://localhost:9060/&lt;i&gt; [webpack-dev-server] On Your Network (IPv4): http://192.168.0.15:9060/&lt;i&gt; [webpack-dev-server] On Your Network (IPv6): http://[fe80::1]:9060/&lt;i&gt; [webpack-dev-server] Content not from webpack is served from &#x27;./target/classes/static/&#x27; directory&lt;i&gt; [webpack-dev-server] 404s will fallback to &#x27;/index.html&#x27;assets by path content/ 444 KiB 25 assetsassets by info 4.48 MiB [immutable] assets by path app/*.js 4.46 MiB 20 assets assets by chunk 19.2 KiB (auxiliary name: app) asset dd126cd23626f52c9123.svg 18.7 KiB [emitted] [immutable] [from: src/main/webapp/content/images/jhipster_family_member_3.svg] (auxiliary name: app) asset cfd81fbabebba3d187b7.png 605 bytes [emitted] [immutable] [from: src/main/webapp/content/images/logo-jhipster.png] (auxiliary name: app)assets by path swagger-ui/ 3.08 MiB 16 assetsassets by path ./i18n/*.json 23.2 KiB asset ./i18n/ko.json 11.9 KiB [emitted] asset ./i18n/en.json 11.4 KiB [emitted]asset index.html 5.78 KiB [emitted]asset favicon.ico 1.54 KiB [emitted] [from: src/main/webapp/favicon.ico] [copied]asset manifest.webapp 751 bytes [emitted] [from: src/main/webapp/manifest.webapp] [copied]asset robots.txt 216 bytes [emitted] [from: src/main/webapp/robots.txt] [copied]cached modules 4.23 MiB (javascript) 19.2 KiB (asset) [cached] 629 modulesruntime modules 32.1 KiB 14 modulescacheable modules 166 KiB modules by path ./node_modules/webpack-dev-server/client/ 55.8 KiB 12 modules modules by path ./node_modules/webpack/ 18.8 KiB ./node_modules/webpack/hot/dev-server.js 1.59 KiB [built] [code generated] ./node_modules/webpack/hot/log.js 1.34 KiB [built] [code generated] + 3 modules modules by path ./node_modules/html-entities/lib/*.js 81.3 KiB ./node_modules/html-entities/lib/index.js 7.74 KiB [built] [code generated] ./node_modules/html-entities/lib/named-references.js 72.7 KiB [built] [code generated] + 2 modules ./node_modules/ansi-html-community/index.js 4.16 KiB [built] [code generated] ./node_modules/ts-loader/index.js??clonedRuleSet-1.use[0]!./src/main/webapp/app/core/jhi-navbar/jhi-navbar.component.ts?vue&amp;type=script&amp;lang=ts&amp; 5.6 KiB [built] [code generated]webpack 5.74.0 compiled successfully in 1343 ms[Browsersync] Proxying: http://localhost:9060[Browsersync] Access URLs: ------------------------------------- Local: http://localhost:9000 External: http://192.168.0.15:9000 ------------------------------------- UI: http://localhost:3001 UI External: http://localhost:3001 ------------------------------------- 정상적으로 실행되면 웹브라우저가 열리면서 아래와 같은 화면을 볼수 있다. 관리자페이지 확인하기가장 우측의 계정의 인증 메뉴를 클릭해서 admin&#x2F;admin으로 로그인한다. 메뉴좌측 부터 오른쪽으로 메뉴 하나씩 하나씩 캡처한 내용이다. 홈 Entities아직은 비워있는데 모델을 추가하면 이곳에 엔티티가 추가된다. 관리자 &gt; 사용자관리 관리자 &gt; 메트릭스 관리자 &gt; 상태확인 관리자 &gt; 설정 관리자 &gt; 로그 관리자 &gt; API 언어 &gt; 언어변경","categories":[{"name":"Coding","slug":"Coding","permalink":"http://goodsaem.github.io/categories/Coding/"},{"name":"JHipster","slug":"Coding/JHipster","permalink":"http://goodsaem.github.io/categories/Coding/JHipster/"}],"tags":[{"name":"JHipster","slug":"JHipster","permalink":"http://goodsaem.github.io/tags/JHipster/"}]},{"title":"1. JHipster 설치","slug":"coding/jhipster/jhipster1","date":"2023-03-27T13:00:00.000Z","updated":"2025-06-29T07:42:00.805Z","comments":true,"path":"coding/jhipster/jhipster1/","link":"","permalink":"http://goodsaem.github.io/coding/jhipster/jhipster1/","excerpt":"","text":"개요springboot 로 restapi 를 만들일이 생겼다. 처음부터 끝까지 다만들려고 하니 시간이 너무 많이 걸릴것 같고잘 만들어진 오픈소스가 있을것 같아 구글링하다가 jhipster (제이 힙스터) 라는 개발 플랫폼을 알게되었고,정리가 잘되어 있는 사이트가 없어 정리한다. JHipster 란?“Hipster”는 미국에서 시작된 문화 용어로, 모던하고 일렉트로닉한 음악, 예술,패션 등을 즐기는 청년층을 지칭하는 말이다. 또한 이들이 추구하는 것들을 “Hip”하다고 표현한다. 일반적으로 힙하다는건은 쿨하고멋진것으로 생각되고,현대적이고 트렌디한 것을 의미하기도 한다.JHipster는 이러한 Hipster 문화에서 영감을 받아 “Java Hipster”라는 이름으로만들어졌다. Java 개발자들이 모던한 기술과 개발 방법론을 적극적으로 적용하여 개발을할 수 있도록 지원하는 도구를 만드는걸 지향하는듯 한다.“힙”한 자바 개발자가 되고 싶다면 한번 도전해 보시길… 아래와 같은 느낌이다.(픽사베이 무료이미지) 바로 설치우선 어떤 녀석인지 설치를 해보자. 필자는 mac 환경에서 설치를 진행했다. 사전 준비물 java git node.js mariadb 설치 방법은 본 블로그에 정리해 두었다. git 설치 방법 123456brew install git==&gt; Downloading https://formulae.brew.sh/api/formula.jws.json######################################################################## 100.0%==&gt; Downloading https://formulae.brew.sh/api/cask.jws.json######################################################################## 100.0%Warning: git 2.40.0 is already installed and up-to-date. java 버전확인1234java --versionopenjdk 18.0.2 2022-07-19OpenJDK Runtime Environment (build 18.0.2+9-61)OpenJDK 64-Bit Server VM (build 18.0.2+9-61, mixed mode, sharing) git 버전확인12git --versiongit version 2.40.0 node 버전확인12node --versionv16.14.0 mariadb 버전확인12mariadb --versionmariadb Ver 15.1 Distrib 10.11.2-MariaDB, for osx10.18 (x86_64) using EditLine wrapper JHipster 설치1npm install -g generator-jhipster JHipster 버전확인123jhipster --versionINFO! Using bundled JHipster7.9.3 JHipster 어플리케이션 생성디렉토리를 생성하고 3번째줄과 같이 jhipster라고 입력하면 된다. 123mkdir jhipstercd jhipsterjhipster 아래와 같은 내용이 나오는데 Monolithic application 을 선택하자. (23번라인)모놀리식이란 전통적인 소프트웨어 구조로 어플리케이션 안에 모든 기능이 다 들어가는걸 말한다. 12345678910111213141516171819202122232425INFO! Using bundled JHipster(node:13189) [DEP0148] DeprecationWarning: Use of deprecated folder mapping &quot;./lib/util/&quot; in the &quot;exports&quot; field module resolution of the package at /usr/local/lib/node_modules/generator-jhipster/node_modules/yeoman-environment/package.json.Update this package.json to use a subpath pattern like &quot;./lib/util/*&quot;.(Use `node --trace-deprecation ...` to show where the warning was created) ██╗ ██╗ ██╗ ████████╗ ███████╗ ██████╗ ████████╗ ████████╗ ███████╗ ██║ ██║ ██║ ╚══██╔══╝ ██╔═══██╗ ██╔════╝ ╚══██╔══╝ ██╔═════╝ ██╔═══██╗ ██║ ████████║ ██║ ███████╔╝ ╚█████╗ ██║ ██████╗ ███████╔╝ ██╗ ██║ ██╔═══██║ ██║ ██╔════╝ ╚═══██╗ ██║ ██╔═══╝ ██╔══██║ ╚██████╔╝ ██║ ██║ ████████╗ ██║ ██████╔╝ ██║ ████████╗ ██║ ╚██╗ ╚═════╝ ╚═╝ ╚═╝ ╚═══════╝ ╚═╝ ╚═════╝ ╚═╝ ╚═══════╝ ╚═╝ ╚═╝ https://www.jhipster.techWelcome to JHipster v7.9.3Application files will be generated in folder: /Users/gosu/jhipster _______________________________________________________________________________________________________________ Documentation for creating an application is at https://www.jhipster.tech/creating-an-app/ If you find JHipster useful, consider sponsoring the project at https://opencollective.com/generator-jhipster _______________________________________________________________________________________________________________? Which *type* of application would you like to create? (Use arrow keys)❯ Monolithic application (recommended for simple projects) Gateway application Microservice application 어플리케이션 이름은 jhipster 라고 입력한다. 1? What is the base name of your application? (jhipster) WebFlux는 리액트에서 사용하는 녀석 같은데 vue를 사용할 예정이므로 N으로 설정한다. (엔터를 입력하면 default 가 N 이므로 선택하지 않는다.) 1? Do you want to make it reactive with Spring WebFlux? (y/N) 자바패키지명은 각자 환경에 맞게 지정해주자 io.github.goodsaem.api 1? What is your default Java package name? (com.mycompany.myapp) 인증방식은 JWT 인증방식으로 지정 1234? Which *type* of authentication would you like to use? (Use arrow keys)❯ JWT authentication (stateless, with a token) OAuth 2.0 / OIDC Authentication (stateful, works with Keycloak and Okta) HTTP Session Authentication (stateful, default Spring Security mechanism) 데이터베이스는 마리아 디비로 선택한다. (SQL을 선택하고 두번째 MariaDB를 선택하면 된다.) 1234567? Which *type* of database would you like to use? (Use arrow keys)❯ SQL (H2, PostgreSQL, MySQL, MariaDB, Oracle, MSSQL) MongoDB Cassandra [BETA] Couchbase [BETA] Neo4j No database 개발 데이터베이스는 어떤걸 사용할건지 물어보는데 마리아 디비로 하자. 1234? Which *development* database would you like to use? H2 with disk-based persistence H2 with in-memory persistence ❯ MariaDB 캐쉬를 물어보는데 Ehcache를 선택한다. 12345678? Which cache do you want to use? (Spring cache abstraction) (Use arrow keys)❯ Ehcache (local cache, for a single node) Caffeine (local cache, for a single node) Hazelcast (distributed cache, for multiple nodes, supports rate-limiting for gateway applications) Infinispan (hybrid cache, for multiple nodes) Memcached (distributed cache) - Warning, when using an SQL database, this will disable the Hibernate 2nd level cache! Redis (distributed cache) No cache - Warning, when using an SQL database, this will disable the Hibernate 2nd level cache! 하이버네이트 쿼리성능향상을 위해 2차캐시를 쓸건지 물어보는데 Y라고 선택한다. 1? Do you want to use Hibernate 2nd level cache? (Y/n) 의존성 관리 도구는 maven을 선택한다. 123? Would you like to use Maven or Gradle for building the backend? (Use arrow keys)❯ Maven Gradle jHipster Registry 설정여부를 물어보는데 우선 No로 선택한다. 123? Do you want to use the JHipster Registry to configure, monitor and scale your application? (Use arrow keys)❯ No Yes 기타 기술을 물어보는데 아무것도 선택하지 않는다.(엔터입력) 12345? Which other technologies would you like to use? (Press &lt;space&gt; to select, &lt;a&gt; to toggle all, &lt;i&gt; to invert selection, and &lt;enter&gt; to proceed)❯◯ Elasticsearch as search engine◯ WebSockets using Spring Websocket◯ Apache Kafka as asynchronous messages broker◯ API first development using OpenAPI-generator 클라이언트 프레임워크는 vue를 선택하자. 12345? Which *Framework* would you like to use for the client? Angular React ❯ Vue No client 관리자 ui는 생성한다. 1? Do you want to generate the admin UI? (Y/n) 관리자 theme은 Default JHipster를 선택한다. 12345678? Would you like to use a Bootswatch theme (https://bootswatch.com/)? (Use arrow keys)❯ Default JHipster Cerulean Cosmo Cyborg Darkly Flatly Journal 다국어 지원을 물어보는 Y 를 선택한다. 1? Would you like to enable internationalization support? (Y/n) 대표언어는 Korean을 선택한다. 12345678? Please choose the native language of the application (Use arrow keys)❯ Korean Marathi Myanmar Polish Portuguese (Brazilian) Portuguese Punjabi 추가언어는 English를 선택한다. (키보드 위 버튼을 눌러서 English가 나오면 스페이스 입력) 12345678? Please choose additional languages to install (Press &lt;space&gt; to select, &lt;a&gt; to toggle all, &lt;i&gt; to invert selection, and &lt;enter&gt; to proceed) ◯ Danish ◯ Dutch❯◉ English ◯ Estonian ◯ Farsi ◯ Finnish ◯ French 테스트 프레임워크를 물어보는데 선택하지 않는다. 12345? Besides JUnit and Jest, which testing frameworks would you like to use? ❯◯ Cypress ◯ [DEPRECATED] Protractor ◯ Gatling ◯ Cucumber 마켓플레이스에서 추가 설치할것을 물어보는데 N을 선택한다. 1? Would you like to install other generators from the JHipster Marketplace? (y/N) 여기까지 선택된 내용전체는 아래와 같다. 123456789101112131415161718192021? Which *type* of application would you like to create? Monolithic application (recommended for simple projects)? What is the base name of your application? jhipster? Do you want to make it reactive with Spring WebFlux? No? What is your default Java package name? io.github.goodsaem.api? Which *type* of authentication would you like to use? JWT authentication (stateless, with a token)? Which *type* of database would you like to use? SQL (H2, PostgreSQL, MySQL, MariaDB, Oracle, MSSQL)? Which *production* database would you like to use? MariaDB? Which *development* database would you like to use? MariaDB? Which cache do you want to use? (Spring cache abstraction) Ehcache (local cache, for a single node)? Do you want to use Hibernate 2nd level cache? Yes? Would you like to use Maven or Gradle for building the backend? Maven? Do you want to use the JHipster Registry to configure, monitor and scale your application? No? Which other technologies would you like to use? ? Which *Framework* would you like to use for the client? Vue? Do you want to generate the admin UI? Yes? Would you like to use a Bootswatch theme (https://bootswatch.com/)? Default JHipster? Would you like to enable internationalization support? Yes? Please choose the native language of the application Korean? Please choose additional languages to install English? Besides JUnit and Jest, which testing frameworks would you like to use? ? Would you like to install other generators from the JHipster Marketplace? No 설치가 진행되고 아래와 같은 로그를 확인할수 있다. 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203204205206207208209210211212213214215216217218219220221222223224225226227228229230231232233234235236237238239240241242243244245246247248249250251252253254255256257258259260261262263264265266267268269270271272273274275276277278279280281282283284285286287288289290291292293294295296297298299300301302303304305306307308309310311312313314315316317318319320321322323324325326327328329330331332333334335336337338339340341342343344345346347348349350351352353354355356357358359360361362363364365366367368369370371372373374375376377378379380381382383384385386387388389390391392393394395396397398399400401402403404405406407408409410411412413414415416417418419420421422423424425426427428429430431432433434435436437438439440441442443444445446447448449450451452453Generating 2,048 bit RSA key pair and self-signed certificate (SHA256withRSA) with a validity of 99,999 days for: CN=Java Hipster, OU=Development, O=io.github.goodsaem.api, L=, ST=, C=KeyStore &#x27;/Users/gosu/jhipster/src/main/resources/config/tls//keystore.p12&#x27; generated successfully. create .prettierrc create .prettierignore create package.json force .yo-rc-global.json force .yo-rc.json create .gitignore create .gitattributes create .editorconfig create sonar-project.properties create .lintstagedrc.js create .husky/pre-commit create mvnw create mvnw.cmd create .mvn/jvm.config create .mvn/wrapper/maven-wrapper.jar create .mvn/wrapper/maven-wrapper.properties create npmw create npmw.cmd create src/main/resources/banner.txt create src/main/resources/config/liquibase/changelog/00000000000000_initial_schema.xml create src/main/resources/config/liquibase/master.xml create src/main/docker/jib/entrypoint.sh create checkstyle.xml create .devcontainer/Dockerfile create pom.xml create src/main/docker/app.yml create src/main/resources/logback-spring.xml create src/main/docker/zipkin.yml create src/main/docker/prometheus/prometheus.yml create src/main/resources/templates/error.html create src/main/docker/jhipster-control-center.yml create .devcontainer/devcontainer.json create src/main/docker/sonar.yml create src/main/resources/i18n/messages.properties create src/main/docker/monitoring.yml create src/main/docker/central-server-config/README.md create src/main/resources/config/application.yml create src/main/resources/config/application-dev.yml create src/main/docker/grafana/provisioning/dashboards/dashboard.yml create src/main/resources/config/application-tls.yml create src/main/docker/grafana/provisioning/dashboards/JVM.json create src/main/resources/config/application-prod.yml create src/main/docker/grafana/provisioning/datasources/datasource.yml create src/main/resources/config/bootstrap.yml create src/main/resources/config/bootstrap-prod.yml create src/main/java/io/github/goodsaem/api/security/SpringSecurityAuditorAware.java create src/main/java/io/github/goodsaem/api/security/jwt/JWTConfigurer.java create src/main/java/io/github/goodsaem/api/GeneratedByJHipster.java create src/main/java/io/github/goodsaem/api/config/JacksonConfiguration.java create src/main/java/io/github/goodsaem/api/domain/package-info.java create src/main/java/io/github/goodsaem/api/security/SecurityUtils.java create src/main/java/io/github/goodsaem/api/config/SecurityConfiguration.java create src/main/java/io/github/goodsaem/api/aop/logging/LoggingAspect.java create src/main/java/io/github/goodsaem/api/domain/AbstractAuditingEntity.java create src/main/java/io/github/goodsaem/api/config/LoggingAspectConfiguration.java create src/main/java/io/github/goodsaem/api/security/DomainUserDetailsService.java create src/main/java/io/github/goodsaem/api/ApplicationWebXml.java create src/main/java/io/github/goodsaem/api/config/package-info.java create src/main/java/io/github/goodsaem/api/config/WebConfigurer.java create src/main/java/io/github/goodsaem/api/repository/package-info.java create src/main/java/io/github/goodsaem/api/security/UserNotActivatedException.java create src/main/java/io/github/goodsaem/api/config/AsyncConfiguration.java create src/main/java/io/github/goodsaem/api/security/AuthoritiesConstants.java create src/main/java/io/github/goodsaem/api/security/package-info.java create src/main/java/io/github/goodsaem/api/web/rest/vm/LoginVM.java create src/main/java/io/github/goodsaem/api/config/CRLFLogConverter.java create src/main/java/io/github/goodsaem/api/config/StaticResourcesWebConfiguration.java create src/main/java/io/github/goodsaem/api/service/EmailAlreadyUsedException.java create src/main/java/io/github/goodsaem/api/web/rest/UserJWTController.java create src/main/java/io/github/goodsaem/api/service/InvalidPasswordException.java create src/main/java/io/github/goodsaem/api/security/jwt/TokenProvider.java create src/main/java/io/github/goodsaem/api/config/Constants.java create src/main/java/io/github/goodsaem/api/service/UsernameAlreadyUsedException.java create src/main/java/io/github/goodsaem/api/config/DateTimeFormatConfiguration.java create src/main/java/io/github/goodsaem/api/security/jwt/JWTFilter.java create src/main/java/io/github/goodsaem/api/web/rest/vm/package-info.java create src/main/java/io/github/goodsaem/api/config/LocaleConfiguration.java create src/main/java/io/github/goodsaem/api/service/package-info.java create src/main/java/io/github/goodsaem/api/web/rest/package-info.java create src/main/java/io/github/goodsaem/api/config/LoggingConfiguration.java create src/main/java/io/github/goodsaem/api/management/SecurityMetersService.java create src/main/java/io/github/goodsaem/api/config/ApplicationProperties.java create src/main/java/io/github/goodsaem/api/config/CacheConfiguration.java create src/main/java/io/github/goodsaem/api/web/rest/ClientForwardController.java create src/main/java/io/github/goodsaem/api/config/DatabaseConfiguration.java create src/main/java/io/github/goodsaem/api/web/rest/errors/package-info.java create src/main/java/io/github/goodsaem/api/JhipsterApp.java create src/main/java/io/github/goodsaem/api/web/rest/errors/BadRequestAlertException.java create src/main/java/io/github/goodsaem/api/web/rest/errors/ErrorConstants.java create src/main/java/io/github/goodsaem/api/web/rest/errors/ExceptionTranslator.java create src/main/java/io/github/goodsaem/api/web/rest/errors/FieldErrorVM.java create src/test/resources/logback.xml create src/main/java/io/github/goodsaem/api/web/rest/errors/EmailAlreadyUsedException.java create src/test/resources/junit-platform.properties create src/test/java/io/github/goodsaem/api/security/SecurityUtilsUnitTest.java create src/main/java/io/github/goodsaem/api/web/rest/errors/InvalidPasswordException.java create src/test/java/io/github/goodsaem/api/config/AsyncSyncConfiguration.java create src/main/java/io/github/goodsaem/api/web/rest/errors/LoginAlreadyUsedException.java create src/test/java/io/github/goodsaem/api/config/WebConfigurerTest.java create src/test/java/io/github/goodsaem/api/IntegrationTest.java create src/test/java/io/github/goodsaem/api/config/WebConfigurerTestController.java create src/test/java/io/github/goodsaem/api/config/StaticResourcesWebConfigurerTest.java create src/test/java/io/github/goodsaem/api/config/SpringBootTestClassOrderer.java create src/test/java/io/github/goodsaem/api/security/DomainUserDetailsServiceIT.java create src/main/java/io/github/goodsaem/api/domain/User.java create src/main/java/io/github/goodsaem/api/domain/Authority.java create src/main/java/io/github/goodsaem/api/repository/AuthorityRepository.java create src/main/resources/config/liquibase/data/user.csv create src/test/java/io/github/goodsaem/api/TechnicalStructureTest.java create src/main/resources/config/liquibase/data/authority.csv create src/test/java/io/github/goodsaem/api/web/rest/TestUtil.java create src/main/resources/config/liquibase/data/user_authority.csv create src/test/java/io/github/goodsaem/api/web/rest/errors/ExceptionTranslatorTestController.java create src/test/java/io/github/goodsaem/api/web/rest/errors/ExceptionTranslatorIT.java create src/test/java/io/github/goodsaem/api/web/rest/ClientForwardControllerTest.java create src/test/resources/config/application.yml create src/test/resources/config/bootstrap.yml create src/main/resources/templates/mail/activationEmail.html create src/main/resources/templates/mail/creationEmail.html create src/main/resources/templates/mail/passwordResetEmail.html create src/main/java/io/github/goodsaem/api/repository/UserRepository.java create src/main/java/io/github/goodsaem/api/service/UserService.java create src/main/java/io/github/goodsaem/api/service/MailService.java create src/main/java/io/github/goodsaem/api/web/rest/vm/ManagedUserVM.java create src/main/java/io/github/goodsaem/api/web/rest/AccountResource.java create src/main/java/io/github/goodsaem/api/web/rest/UserResource.java create src/test/resources/templates/mail/activationEmail.html create src/main/java/io/github/goodsaem/api/web/rest/PublicUserResource.java create src/main/java/io/github/goodsaem/api/web/rest/vm/KeyAndPasswordVM.java create src/main/java/io/github/goodsaem/api/service/dto/package-info.java create src/main/java/io/github/goodsaem/api/service/dto/AdminUserDTO.java create src/test/resources/testcontainers.properties create src/main/java/io/github/goodsaem/api/service/dto/UserDTO.java create src/test/resources/META-INF/spring.factories create src/test/resources/templates/mail/creationEmail.html create src/main/java/io/github/goodsaem/api/service/dto/PasswordChangeDTO.java create src/test/java/io/github/goodsaem/api/config/TestContainersSpringContextCustomizerFactory.java create src/test/resources/templates/mail/passwordResetEmail.html create src/main/java/io/github/goodsaem/api/service/mapper/package-info.java create src/main/java/io/github/goodsaem/api/service/mapper/UserMapper.java create src/test/java/io/github/goodsaem/api/web/rest/UserJWTControllerIT.java create src/test/resources/templates/mail/testEmail.html create src/test/java/io/github/goodsaem/api/management/SecurityMetersServiceTests.java create src/test/java/io/github/goodsaem/api/security/jwt/TokenProviderTest.java create src/test/java/io/github/goodsaem/api/web/rest/PublicUserResourceIT.java create src/test/java/io/github/goodsaem/api/web/rest/UserResourceIT.java create src/test/java/io/github/goodsaem/api/security/jwt/TokenProviderSecurityMetersTests.java create src/test/java/io/github/goodsaem/api/web/rest/AccountResourceIT.java create src/test/java/io/github/goodsaem/api/security/jwt/JWTFilterTest.java create src/test/java/io/github/goodsaem/api/web/rest/WithUnauthenticatedMockUser.java create src/test/resources/testcontainers/mariadb/my.cnf create src/test/java/io/github/goodsaem/api/service/MailServiceIT.java create src/main/docker/config/mariadb/my.cnf create src/test/java/io/github/goodsaem/api/service/UserServiceIT.java create src/test/java/io/github/goodsaem/api/service/mapper/UserMapperTest.java create src/main/java/io/github/goodsaem/api/config/LiquibaseConfiguration.java create src/test/java/io/github/goodsaem/api/config/timezone/HibernateTimeZoneIT.java create src/test/java/io/github/goodsaem/api/config/EmbeddedSQL.java create src/test/java/io/github/goodsaem/api/config/SqlTestContainer.java create src/test/resources/config/application-testdev.yml create src/test/resources/config/application-testprod.yml create src/main/docker/mariadb.yml create src/test/java/io/github/goodsaem/api/config/MariadbTestContainer.java create tsconfig.json create tsconfig.spec.json create .postcssrc.js create src/test/java/io/github/goodsaem/api/repository/timezone/DateTimeWrapper.java create .eslintrc.js create src/test/java/io/github/goodsaem/api/repository/timezone/DateTimeWrapperRepository.java create webpack/config.js create webpack/webpack.common.js create webpack/webpack.prod.js create webpack/vue.utils.js create webpack/webpack.dev.js create src/main/webapp/app/entities/entities.component.ts create src/main/webapp/app/shims-vue.d.ts create src/main/webapp/app/router/entities.ts create src/main/webapp/app/entities/entities.vue create src/main/webapp/app/constants.ts create src/main/webapp/content/scss/_bootstrap-variables.scss create src/main/webapp/app/entities/entities-menu.component.ts create src/main/webapp/app/declarations.d.ts create src/main/webapp/app/router/admin.ts create src/main/webapp/content/scss/global.scss create src/main/webapp/app/main.ts create src/main/webapp/app/router/pages.ts create src/main/webapp/content/scss/vendor.scss create src/main/webapp/app/entities/entities-menu.vue create src/main/webapp/app/app.vue create src/main/webapp/app/app.component.ts create src/main/webapp/app/router/index.ts create src/main/webapp/app/shared/alert/alert.service.ts create src/main/webapp/app/locale/translation.service.ts create src/main/webapp/app/shared/config/axios-interceptor.ts create src/main/webapp/app/shared/config/formatter.ts create src/main/webapp/app/shared/config/store/translation-store.ts create src/main/webapp/app/shared/config/config.ts create src/main/webapp/app/shared/config/config-bootstrap-vue.ts create src/main/webapp/app/shared/config/dayjs.ts create src/main/webapp/app/shared/config/store/account-store.ts create src/main/webapp/app/shared/security/authority.ts create src/main/webapp/app/core/home/home.vue create src/main/webapp/app/core/jhi-navbar/jhi-navbar.vue create src/main/webapp/app/core/jhi-navbar/jhi-navbar.component.ts create src/main/webapp/app/core/home/home.component.ts create src/main/webapp/app/core/ribbon/ribbon.vue create src/main/webapp/app/core/ribbon/ribbon.component.ts create src/main/webapp/app/shared/jhi-item-count.component.ts create src/main/webapp/app/shared/date/filters.ts create src/main/webapp/app/shared/jhi-item-count.vue create src/main/webapp/app/core/error/error.vue create src/main/webapp/app/core/error/error.component.ts create src/main/webapp/app/shared/sort/jhi-sort-indicator.component.ts create src/main/webapp/app/shared/sort/jhi-sort-indicator.vue create src/main/webapp/app/core/jhi-footer/jhi-footer.vue create src/main/webapp/app/core/jhi-footer/jhi-footer.component.ts create src/main/webapp/app/router/account.ts create src/main/webapp/app/shared/sort/sorts.ts create src/main/webapp/app/shared/data/data-utils.service.ts create src/main/webapp/app/shared/model/user.model.ts create src/main/webapp/app/account/account.service.ts create src/main/webapp/app/account/login-form/login-form.vue create src/main/webapp/app/account/login-form/login-form.component.ts create src/main/webapp/app/account/login.service.ts create src/main/webapp/app/account/change-password/change-password.vue create src/main/webapp/app/account/change-password/change-password.component.ts create src/main/webapp/app/account/register/register.vue create src/main/webapp/app/account/register/register.component.ts create src/main/webapp/app/account/register/register.service.ts create src/main/webapp/app/account/settings/settings.vue create src/main/webapp/app/account/settings/settings.component.ts create src/main/webapp/app/account/activate/activate.component.ts create src/main/webapp/app/account/activate/activate.service.ts create src/main/webapp/app/account/activate/activate.vue create src/main/webapp/app/account/reset-password/init/reset-password-init.vue create src/main/webapp/app/account/reset-password/init/reset-password-init.component.ts create src/main/webapp/app/account/reset-password/finish/reset-password-finish.vue create src/main/webapp/app/account/reset-password/finish/reset-password-finish.component.ts create src/main/webapp/app/admin/docs/docs.vue create src/main/webapp/app/admin/health/health-modal.vue create src/main/webapp/app/admin/docs/docs.component.ts create src/main/webapp/app/admin/health/health-modal.component.ts create src/main/webapp/app/admin/health/health.service.ts create src/main/webapp/app/admin/logs/logs.vue create src/main/webapp/app/admin/logs/logs.component.ts create src/main/webapp/app/admin/logs/logs.service.ts create src/main/webapp/app/admin/configuration/configuration.vue create src/main/webapp/app/admin/metrics/metrics.vue create src/main/webapp/app/admin/configuration/configuration.component.ts create src/main/webapp/app/admin/metrics/metrics.component.ts create src/main/webapp/app/admin/configuration/configuration.service.ts create src/main/webapp/app/admin/health/health.vue create src/main/webapp/app/admin/metrics/metrics.service.ts create src/main/webapp/app/admin/health/health.component.ts create src/main/webapp/app/admin/metrics/metrics-modal.vue create src/main/webapp/app/admin/metrics/metrics-modal.component.ts create src/main/webapp/app/admin/user-management/user-management.vue create src/main/webapp/app/admin/user-management/user-management.component.ts create src/main/webapp/app/admin/user-management/user-management-view.vue create src/main/webapp/app/admin/user-management/user-management-view.component.ts create src/main/webapp/app/admin/user-management/user-management-edit.vue create src/main/webapp/app/admin/user-management/user-management-edit.component.ts create src/main/webapp/app/admin/user-management/user-management.service.ts create src/main/webapp/app/entities/user/user.service.ts create src/test/javascript/jest.conf.js create src/test/javascript/spec/app/account/account.service.spec.ts create src/test/javascript/spec/app/admin/health/health-modal.component.spec.ts create src/test/javascript/spec/app/account/settings/settings.component.spec.ts create src/test/javascript/spec/app/core/home/home.component.spec.ts create src/test/javascript/spec/app/admin/health/health.service.spec.ts create src/main/webapp/content/images/jhipster_family_member_0.svg create src/test/javascript/spec/app/core/error/error.component.spec.ts create src/test/javascript/spec/app/admin/logs/logs.component.spec.ts create src/test/javascript/spec/app/core/jhi-navbar/jhi-navbar.component.spec.ts create src/test/javascript/spec/app/admin/metrics/metrics.component.spec.ts create src/test/javascript/spec/app/account/activate/activate.component.spec.ts create src/main/webapp/content/images/jhipster_family_member_0_head-192.png create src/test/javascript/spec/app/core/ribbon/ribbon.component.spec.ts create src/test/javascript/spec/app/admin/metrics/metrics-modal.component.spec.ts create src/test/javascript/spec/app/admin/user-management/user-management.component.spec.ts create src/test/javascript/spec/app/shared/alert/alert.service.spec.ts create src/test/javascript/spec/app/shared/config/formatter.spec.ts create src/main/webapp/content/images/jhipster_family_member_0_head-256.png create src/test/javascript/spec/app/shared/config/axios-interceptor.spec.ts create src/test/javascript/spec/app/account/login-form/login-form.component.spec.ts create src/test/javascript/spec/app/shared/data/data-utils.service.spec.ts create src/test/javascript/spec/app/account/change-password/change-password.component.spec.ts create src/test/javascript/spec/app/admin/user-management/user-management-view.component.spec.ts create src/main/webapp/content/images/jhipster_family_member_0_head-384.png create src/test/javascript/spec/app/shared/sort/sorts.spec.ts create src/test/javascript/spec/app/account/register/register.component.spec.ts create src/test/javascript/spec/app/admin/configuration/configuration.component.spec.ts create src/test/javascript/spec/app/account/reset-password/init/reset-password-init.component.spec.ts create src/main/webapp/content/images/jhipster_family_member_0_head-512.png create src/test/javascript/spec/app/admin/health/health.component.spec.ts create src/test/javascript/spec/app/admin/user-management/user-management-edit.component.spec.ts create src/test/javascript/spec/app/account/reset-password/finish/reset-password-finish.component.spec.ts create src/main/webapp/content/images/jhipster_family_member_1.svg create src/main/webapp/content/images/jhipster_family_member_1_head-192.png create src/main/webapp/content/images/jhipster_family_member_1_head-256.png create src/main/webapp/content/images/jhipster_family_member_1_head-384.png create src/main/webapp/content/images/jhipster_family_member_1_head-512.png create src/main/webapp/content/images/jhipster_family_member_2.svg create src/main/webapp/content/images/jhipster_family_member_2_head-192.png create src/main/webapp/content/images/jhipster_family_member_2_head-256.png create src/main/webapp/content/images/jhipster_family_member_2_head-384.png create src/main/webapp/content/images/jhipster_family_member_2_head-512.png create src/main/webapp/content/images/jhipster_family_member_3.svg create src/main/webapp/content/images/jhipster_family_member_3_head-192.png create src/main/webapp/content/images/jhipster_family_member_3_head-256.png create src/main/webapp/content/images/jhipster_family_member_3_head-384.png create src/main/webapp/content/images/jhipster_family_member_3_head-512.png create src/main/webapp/content/images/logo-jhipster.png create src/main/webapp/favicon.ico create src/main/webapp/swagger-ui/dist/images/throbber.gif create .eslintignore create src/main/webapp/manifest.webapp create src/main/webapp/WEB-INF/web.xml create src/main/webapp/robots.txt create src/main/webapp/content/css/loading.css create src/main/webapp/404.html create src/main/webapp/index.html create src/main/webapp/swagger-ui/index.html create src/main/webapp/i18n/ko/error.json create src/main/webapp/i18n/ko/activate.json create src/main/webapp/i18n/ko/login.json create src/main/webapp/i18n/ko/home.json create src/main/webapp/i18n/ko/global.json create src/main/webapp/i18n/ko/password.json create src/main/webapp/i18n/ko/register.json create src/main/webapp/i18n/ko/sessions.json create src/main/webapp/i18n/ko/settings.json create src/main/webapp/i18n/ko/reset.json create src/main/webapp/i18n/ko/user-management.json create src/main/webapp/i18n/ko/configuration.json create src/main/webapp/i18n/ko/health.json create src/main/webapp/i18n/en/error.json create src/main/webapp/i18n/en/logs.json create src/main/webapp/i18n/ko/logs.json create src/main/webapp/i18n/en/metrics.json create src/main/webapp/i18n/ko/metrics.json create src/main/webapp/i18n/en/activate.json create src/main/webapp/i18n/en/login.json create src/main/webapp/i18n/en/global.json create src/main/webapp/i18n/en/home.json create src/main/webapp/i18n/en/reset.json create src/main/webapp/i18n/en/password.json create src/main/webapp/i18n/en/health.json create src/main/resources/i18n/messages_ko.properties create src/main/webapp/i18n/en/register.json create src/test/resources/i18n/messages_ko.properties create src/main/webapp/i18n/en/sessions.json create src/main/resources/i18n/messages_en.properties create src/main/webapp/i18n/en/settings.json create src/test/resources/i18n/messages_en.properties create src/main/webapp/i18n/en/user-management.json create src/main/webapp/i18n/en/configuration.json create README.md force .yo-rc.jsonGit repository initialized.Changes to package.json were detected.[INFO] Scanning for projects...[WARNING] [WARNING] Some problems were encountered while building the effective model for io.github.goodsaem.api:jhipster:jar:0.0.1-SNAPSHOT[WARNING] &#x27;build.plugins.plugin.version&#x27; for org.apache.maven.plugins:maven-failsafe-plugin is missing. @ line 323, column 21[WARNING] [WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.[WARNING] [WARNING] For this reason, future Maven versions might no longer support building such malformed projects.[WARNING] [INFO] [INFO] ------------------&lt; io.github.goodsaem.api:jhipster &gt;-------------------[INFO] Building JHipster 0.0.1-SNAPSHOT[INFO] --------------------------------[ jar ]---------------------------------[INFO] [INFO] --- frontend-maven-plugin:1.12.1:install-node-and-npm (install-node-and-npm) @ jhipster ---[INFO] Installing node version v16.17.0[INFO] Unpacking /Users/gosu/.m2/repository/com/github/eirslett/node/16.17.0/node-16.17.0-darwin-x64.tar.gz into /Users/gosu/jhipster/target/node/tmp[INFO] Copying node binary from /Users/gosu/jhipster/target/node/tmp/node-v16.17.0-darwin-x64/bin/node to /Users/gosu/jhipster/target/node/node[INFO] Installed node locally.[INFO] Installing npm version 8.19.1[INFO] Unpacking /Users/gosu/.m2/repository/com/github/eirslett/npm/8.19.1/npm-8.19.1.tar.gz into /Users/gosu/jhipster/target/node/node_modules[INFO] Installed npm locally.[INFO] ------------------------------------------------------------------------[INFO] BUILD SUCCESS[INFO] ------------------------------------------------------------------------[INFO] Total time: 2.645 s[INFO] Finished at: 2023-03-27T21:53:26+09:00[INFO] ------------------------------------------------------------------------Using node installed locally v16.17.0Using npm installed locally 8.19.1npm WARN deprecated readdir-scoped-modules@1.1.0: This functionality has been moved to @npmcli/fsnpm WARN deprecated @npmcli/move-file@1.1.2: This functionality has been moved to @npmcli/fsnpm WARN deprecated source-map-url@0.4.1: See https://github.com/lydell/source-map-url#deprecatednpm WARN deprecated stable@0.1.8: Modern JS already guarantees Array#sort() is a stable sort, so this library is deprecated. See the compatibility table on MDN: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/sort#browser_compatibilitynpm WARN deprecated @npmcli/move-file@2.0.1: This functionality has been moved to @npmcli/fsnpm WARN deprecated rollup-plugin-terser@7.0.2: This package has been deprecated and is no longer maintained. Please use @rollup/plugin-tersernpm WARN deprecated urix@0.1.0: Please see https://github.com/lydell/urix#deprecatednpm WARN deprecated har-validator@5.1.5: this library is no longer supportednpm WARN deprecated resolve-url@0.2.1: https://github.com/lydell/resolve-url#deprecatednpm WARN deprecated source-map-resolve@0.5.3: See https://github.com/lydell/source-map-resolve#deprecatednpm WARN deprecated w3c-hr-time@1.0.2: Use your platform&#x27;s native performance.now() and performance.timeOrigin.npm WARN deprecated sourcemap-codec@1.4.8: Please use @jridgewell/sourcemap-codec insteadnpm WARN deprecated querystring@0.2.0: The querystring API is considered Legacy. new code should use the URLSearchParams API instead.npm WARN deprecated uuid@3.4.0: Please upgrade to version 7 or higher. Older versions may use Math.random() in certain circumstances, which is known to be problematic. See https://v8.dev/blog/math-random for details.npm WARN deprecated request@2.88.2: request has been deprecated, see https://github.com/request/request/issues/3142npm WARN deprecated popper.js@1.16.1: You can find the new Popper v2 at @popperjs/core, this package is dedicated to the legacy v1npm WARN deprecated core-js@2.6.12: core-js@&lt;3.23.3 is no longer maintained and not recommended for usage due to the number of issues. Because of the V8 engine whims, feature detection in old core-js versions could cause a slowdown up to 100x even if nothing is polyfilled. Some versions have web compatibility issues. Please, upgrade your dependencies to the actual version of core-js.&gt; jhipster@0.0.0 prepare&gt; husky installhusky - Git hooks installedadded 2016 packages, and audited 2017 packages in 2m214 packages are looking for funding run `npm fund` for details10 vulnerabilities (2 moderate, 7 high, 1 critical)To address issues that do not require attention, run: npm audit fixTo address all issues (including breaking changes), run: npm audit fix --forceRun `npm audit` for details.Application successfully committed to Git from /Users/gosu/jhipster.If you find JHipster useful consider sponsoring the project https://www.jhipster.tech/sponsors/Server application generated successfully.Run your Spring Boot application:./mvnwClient application generated successfully.Start your Webpack development server with: npm start&gt; jhipster@0.0.0 clean-www&gt; rimraf target/classes/static/app/&#123;src,target/&#125;Congratulations, JHipster execution is complete! 가장 마지막줄 보면 성공적으로 설치가 되었다","categories":[{"name":"Coding","slug":"Coding","permalink":"http://goodsaem.github.io/categories/Coding/"},{"name":"JHipster","slug":"Coding/JHipster","permalink":"http://goodsaem.github.io/categories/Coding/JHipster/"}],"tags":[{"name":"JHipster","slug":"JHipster","permalink":"http://goodsaem.github.io/tags/JHipster/"}]},{"title":"mac 환경에서 node.js 설치하기","slug":"setup/nodejs","date":"2023-03-27T11:34:00.000Z","updated":"2025-06-29T07:42:01.123Z","comments":true,"path":"setup/nodejs/","link":"","permalink":"http://goodsaem.github.io/setup/nodejs/","excerpt":"","text":"Mac에서 Node.js를 설치하는 방법 Node.js 공식 웹사이트(nodejs.org)에 접속한다. “Downloads” 메뉴를 클릭한다. 현재 버전의 Node.js 설치 파일을 다운로드한다. (macOS용 다운로드 링크: https://nodejs.org/en/download/) 다운로드 받은 설치 파일을 더블클릭하여 설치를 시작 설치 과정에서 라이선스 동의, 설치 경로 선택 등의 항목을 설정함 설치가 완료되면 터미널을 열어 node -v 명령어를 입력하여 Node.js가 정상적으로 설치되었는지 확인함. Node.js를 설치할 때 함께 설치되는 npm(Node Package Manager)은 Node.js 패키지를 관리하는 도구임.따라서 Node.js를 설치하면 npm도 함께 설치됨. 12node -vv16.14.0","categories":[{"name":"설치","slug":"설치","permalink":"http://goodsaem.github.io/categories/%EC%84%A4%EC%B9%98/"},{"name":"node.js","slug":"설치/node-js","permalink":"http://goodsaem.github.io/categories/%EC%84%A4%EC%B9%98/node-js/"}],"tags":[{"name":"node.js","slug":"node-js","permalink":"http://goodsaem.github.io/tags/node-js/"}]},{"title":"mac에서 mariadb 계정생성","slug":"coding/mariadb/mariadb-create-user","date":"2023-03-26T15:01:03.000Z","updated":"2025-06-29T07:42:00.868Z","comments":true,"path":"coding/mariadb/mariadb-create-user/","link":"","permalink":"http://goodsaem.github.io/coding/mariadb/mariadb-create-user/","excerpt":"","text":"개요mac 에서 maria db 접속 및 데이터베이스 생성 사용자 생성방법에 대해서 정리한 내용이다. db 접속터미널을 하나 열어서 아래 명령어를 입력한다. 1mariadb database 생성create database 생성할 데이터 베이스명 1create database jhipster; db 사용자 생성create user ‘생성할유저‘@’접속할아이피‘ identified by ‘비밀번호‘; 1create user &#x27;jhipster&#x27;@&#x27;127.0.0.1&#x27; identified by &#x27;jhipster&#x27;; database에 모든 권한 주기grant all privileges on 권한줄db명.권한명 to ‘유저명‘@’접속아이피‘;아래 예제는 jhipster 데이터베이스의 모든권한(*)을 127.0.0.1에서 접속하는 jhipster 란 유저에게 주겠다는 의미. 1grant all privileges on jhipster.* to &#x27;jhipster&#x27;@&#x27;127.0.0.1&#x27;; db 갱신db 정보를 갱신함 1flush privileges;","categories":[{"name":"Coding","slug":"Coding","permalink":"http://goodsaem.github.io/categories/Coding/"},{"name":"mariadb","slug":"Coding/mariadb","permalink":"http://goodsaem.github.io/categories/Coding/mariadb/"}],"tags":[{"name":"mariadb","slug":"mariadb","permalink":"http://goodsaem.github.io/tags/mariadb/"}]},{"title":"10. SpringBoot Backend 서버 구축","slug":"coding/springboot/springboot110","date":"2023-03-25T16:20:03.000Z","updated":"2025-06-29T07:42:00.962Z","comments":true,"path":"coding/springboot/springboot110/","link":"","permalink":"http://goodsaem.github.io/coding/springboot/springboot110/","excerpt":"","text":"SpringBoot Mariadb 설정spring boot 에 mariadb(mysql) 연결하는 방법에 대해서 알아보겠습니다. 1. mariadb user 생성전 사용하는 pc가 mac 이라 mac 에 설치를 진행했고 자세한 설치 방법은 아래 url을 참고하세요 &#x2F;setup&#x2F;mariadb&#x2F;z101-install_mac_mariadb.html 2. 법정코드 테이블 생성아래 sql 문장을 실행하여 테이블을 생성합니다. 아래 테이블은 &#x2F;spring&#x2F;springboot&#x2F;z101-freemarker.html에서 사용한 테이블 입니다. 이를 동일하게 mariadb에서 생성해 보겠습니다. 123456789CREATE TABLE HCODE ( id INT PRIMARY KEY AUTO_INCREMENT, LCODE VARCHAR(2), LNAME VARCHAR(255), MCODE VARCHAR(5), MNAME VARCHAR(255), SCODE VARCHAR(7) NOT NULL, SNAME VARCHAR(255)); 아래 파일을 다운로드 받아 insert 문장을 실행합니다. inser sql 3. spring start 에서 프로젝트 구조 잡기아래 url 을 클릭하여 spring 프로젝트 구조를 잡고 파일을 다운로드 한후적당한 위치에 압축을 풀어 주세요 spring start 완성된 폴더 및 파일 구조는 아래와 같습니다. 12345678910111213141516171819202122pom.xmlsrc└── main ├── java │ └── com │ └── io.github.goodsaem.mariadb │ ├── MariadbApplication.java │ ├── model │ │ └── HCode.java │ ├── controller │ │ └── HCodeController.java │ ├── repository │ │ └── HCodeRepository.java │ └── service │ ├── HCodeService.java │ └── IHCodeService.java └── resources ├── application.properties ├── static │ └── index.html └── templates └── showHCodes.ftlh 4. pom.xmlpom.xml은 아래와 같으며 spring start 에서 만든내용에서 변경된 사항은 없습니다. Spring Boot starter 를 이용하여 spring boot 를 쉽게 설정할수 있습니다. spring-boot-starter-web은 Spring MVC를 사용하는 RESTful 애플리케이션을 포함한 웹 구축을위한 스타터입니다. spring-boot-starter-freemarker는 Freemarker 뷰(html template)를 사용하여 MVC 웹 애플리케이션을 구축하기위한 스타터입니다. spring-boot-starter-data-jpa는 Hibernate에서 SpringData JPA를 사용하기위한 스타터입니다. 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&lt;project xmlns=&quot;http://maven.apache.org/POM/4.0.0&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xsi:schemaLocation=&quot;http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd&quot;&gt; &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt; &lt;parent&gt; &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; &lt;artifactId&gt;spring-boot-starter-parent&lt;/artifactId&gt; &lt;version&gt;2.4.3&lt;/version&gt; &lt;relativePath/&gt; &lt;!-- lookup parent from repository --&gt; &lt;/parent&gt; &lt;groupId&gt;io.github.goodsaem.mariadb&lt;/groupId&gt; &lt;artifactId&gt;mariadb&lt;/artifactId&gt; &lt;version&gt;0.0.1-SNAPSHOT&lt;/version&gt; &lt;name&gt;mariadb&lt;/name&gt; &lt;description&gt;springboot with mariadb&lt;/description&gt; &lt;properties&gt; &lt;java.version&gt;1.8&lt;/java.version&gt; &lt;/properties&gt; &lt;dependencies&gt; &lt;dependency&gt; &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; &lt;artifactId&gt;spring-boot-starter-data-jpa&lt;/artifactId&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; &lt;artifactId&gt;spring-boot-starter-freemarker&lt;/artifactId&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; &lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;org.mariadb.jdbc&lt;/groupId&gt; &lt;artifactId&gt;mariadb-java-client&lt;/artifactId&gt; &lt;scope&gt;runtime&lt;/scope&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;org.projectlombok&lt;/groupId&gt; &lt;artifactId&gt;lombok&lt;/artifactId&gt; &lt;optional&gt;true&lt;/optional&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; &lt;artifactId&gt;spring-boot-starter-test&lt;/artifactId&gt; &lt;scope&gt;test&lt;/scope&gt; &lt;/dependency&gt; &lt;/dependencies&gt; &lt;build&gt; &lt;plugins&gt; &lt;plugin&gt; &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; &lt;artifactId&gt;spring-boot-maven-plugin&lt;/artifactId&gt; &lt;configuration&gt; &lt;excludes&gt; &lt;exclude&gt; &lt;groupId&gt;org.projectlombok&lt;/groupId&gt; &lt;artifactId&gt;lombok&lt;/artifactId&gt; &lt;/exclude&gt; &lt;/excludes&gt; &lt;/configuration&gt; &lt;/plugin&gt; &lt;/plugins&gt; &lt;/build&gt;&lt;/project&gt; 5. application.properties처음시작 할때 spring boot 배너를 삭제하고 mariadb의 드라이버 및 접속 정보를 아래와 같이 생성합니다. 1234567spring.main.banner-mode=offlogging.level.org.springframework=ERRORspring.datasource.driverClassName=org.mariadb.jdbc.Driverspring.datasource.url=jdbc:mariadb://localhost:3306/goodsaem?useSSL=false&amp;serverTimezone=KSTspring.datasource.username=goodsaemspring.datasource.password=xxxxxxxx 6. HCode.javaHCode 엔티티입니다. @Entity 및 @Id 어노테이션은 필수로 지정되어 있어야 됩니다. 그리고 getter 와 setter를 만들어야 되는데편하게 lombok을 이용하여 자동 구성 했습니다. 그리고 @GeneratedValue(strategy &#x3D; GenerationType.AUTO) 을 이용하여 id 키가자동 채번되도록 설정했습니다. 1234567891011121314151617181920212223242526package io.github.goodsaem.mariadb.model;import lombok.EqualsAndHashCode;import lombok.Getter;import lombok.Setter;import lombok.ToString;import javax.persistence.*;@Getter@Setter@ToString@EqualsAndHashCode@Entity@Table(name = &quot;hcode&quot;)public class HCode &#123; @Id @GeneratedValue(strategy = GenerationType.AUTO) private Long id; private String lcode; private String lname; private String mcode; private String mname; private String scode; private String sname;&#125; 7. HCodeRepository.javaSpring CrudRepository를 상속받습니다. 해당 객체를 상속받으면 findAll ()을 포함하여 이미 구현 된 데이터 저장소에 대한 메소드들을 활용할수 있습니다. 123456789package io.github.goodsaem.mariadb.repository;import io.github.goodsaem.mariadb.model.HCode;import org.springframework.data.repository.CrudRepository;import org.springframework.stereotype.Repository;@Repositorypublic interface HCodeRepository extends CrudRepository&lt;HCode,Long&gt; &#123;&#125; 8. IHCodeService.java데이터를 가져오기 위한 인터페이스를 선언합니다. 123456789package io.github.goodsaem.mariadb.service;import io.github.goodsaem.mariadb.model.HCode;import java.util.List;public interface IHCodeService &#123; List&lt;HCode&gt; findAll();&#125; 9. HCodeService.java실제 데이터를 가져오는 findAll 메소드를 구현합니다. 1234567891011121314151617181920package io.github.goodsaem.mariadb.service;import io.github.goodsaem.mariadb.model.HCode;import io.github.goodsaem.mariadb.repository.HCodeRepository;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Service;import java.util.List;@Servicepublic class HCodeService implements IHCodeService&#123; @Autowired private HCodeRepository hCodeRepository; @Override public List&lt;HCode&gt; findAll() &#123; return (List&lt;HCode&gt;) hCodeRepository.findAll(); &#125;&#125; 10. HCodeController.java&#x2F;hcodes 페이지에 접속하면 데이터베이스의 행정코드 전체를 가져와서 showHCodes.ftlh에서출력하는 컨트롤러를 작성합니다. 1234567891011121314151617181920212223242526package io.github.goodsaem.mariadb.controller;import io.github.goodsaem.mariadb.model.HCode;import io.github.goodsaem.mariadb.service.IHCodeService;import lombok.var;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Controller;import org.springframework.ui.Model;import org.springframework.web.bind.annotation.GetMapping;import java.util.List;@Controllerpublic class HCodeController &#123; @Autowired private IHCodeService ihCodeService; @GetMapping(&quot;/hcodes&quot;) public String findHcodes(Model model) &#123; var hcodes = (List&lt;HCode&gt;) ihCodeService.findAll(); model.addAttribute(&quot;hcodes&quot;,hcodes); return &quot;showHCodes&quot;; &#125;&#125; 11. showHCodes.ftlh컨틀롤러에서 받은 데이터를 표현하는 템플릿 파일 입니다. 12345678910111213141516171819202122232425262728293031323334&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt; &lt;title&gt;HCodes&lt;/title&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;&lt;/head&gt;&lt;body&gt;&lt;h2&gt;행정구역 코드&lt;/h2&gt;&lt;table border=&quot;1&quot;&gt; &lt;tr&gt; &lt;th&gt;고유번호&lt;/th&gt; &lt;th&gt;시도코드&lt;/th&gt; &lt;th&gt;시도명칭&lt;/th&gt; &lt;th&gt;시군구코드&lt;/th&gt; &lt;th&gt;시군구명칭&lt;/th&gt; &lt;th&gt;읍면동코드&lt;/th&gt; &lt;th&gt;읍면동명칭&lt;/th&gt; &lt;/tr&gt; &lt;#list hcodes as hcode&gt; &lt;tr&gt; &lt;td&gt;$&#123;hcode.id&#125;&lt;/td&gt; &lt;td&gt;$&#123;hcode.lcode&#125;&lt;/td&gt; &lt;td&gt;$&#123;hcode.lname&#125;&lt;/td&gt; &lt;td&gt;$&#123;hcode.mcode&#125;&lt;/td&gt; &lt;td&gt;$&#123;hcode.mname&#125;&lt;/td&gt; &lt;td&gt;$&#123;hcode.scode&#125;&lt;/td&gt; &lt;td&gt;$&#123;hcode.sname&#125;&lt;/td&gt; &lt;/tr&gt; &lt;/#list&gt;&lt;/table&gt;&lt;/body&gt;&lt;/html&gt; 12. index.html최초 접속시 행정코드 전체 데이터를 불러오는 페이지 입니다. 1234567891011&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt; &lt;title&gt;행정코드&lt;/title&gt; &lt;meta charset=&quot;UTF-8&quot;/&gt; &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;/&gt;&lt;/head&gt;&lt;body&gt;&lt;a href=&quot;hcodes&quot;&gt;행정코드 확인하기&lt;/a&gt;&lt;/body&gt;&lt;/html&gt; 13. MariadbApplication.java스프링 부트 시작 java 파일 입니다. 12345678910111213package io.github.goodsaem.mariadb;import org.springframework.boot.SpringApplication;import org.springframework.boot.autoconfigure.SpringBootApplication;@SpringBootApplicationpublic class MariadbApplication &#123; public static void main(String[] args) &#123; SpringApplication.run(MariadbApplication.class, args); &#125;&#125; 14. 테스트application 을 실행하면 아래와 같은 페이지를 확인할수 있습니다. http://localhost:8080/ 아래 링크를 클릭하면 전체 행정코드를 출력하는 화면으로 이동합니다. 1행정코드 확인하기 http://localhost:8080/hcodes 여기에서 데이터를 확인할수 있습니다.","categories":[{"name":"Coding","slug":"Coding","permalink":"http://goodsaem.github.io/categories/Coding/"},{"name":"springboot","slug":"Coding/springboot","permalink":"http://goodsaem.github.io/categories/Coding/springboot/"}],"tags":[{"name":"springboot","slug":"springboot","permalink":"http://goodsaem.github.io/tags/springboot/"}]},{"title":"9. SpringBoot Backend 서버 구축","slug":"coding/springboot/springboot109","date":"2023-03-25T16:19:03.000Z","updated":"2025-06-29T07:42:00.935Z","comments":true,"path":"coding/springboot/springboot109/","link":"","permalink":"http://goodsaem.github.io/coding/springboot/springboot109/","excerpt":"","text":"SpringBoot Freemarket 설정spring boot 와 freemarker 템플릿 엔진 h2 db를 이용하여 간단한 app 을 만들어 보겠습니다. 기능설명 엑셀파일을 서버에 업로드하면 apache poi 라이브러리를 이용하여 엑셀 데이터를 읽은 다음 h2 db 에 업로드 합니다. 또한 업로드한 엑셀 데이터도 같이 표시 합니다. h2 db 의 hcode 테이블 데이터를 읽어 화면에 표시 합니다. ::: tip H2DBH2 DB 는 Java 로 만들어진 관계형 데이터 베이스(rdb) 입니다. 보통 Java application 에 임베디드 되어 사용되고클라이언트 및 서버 모두 실행되며 배포가 쉽고 설치시 필요한 용량이 적게 드는 경량 db 입니다. application 초기 서비스시 에는h2 db 같은걸로 가볍게 서비스를 하다가 규모가 커지고 h2 db로 관리가 힘들다고 생각되면 mariadb 나 postgre sql 같은걸로 갈아 타는걸 추천 드립니다. ::: 1. FreeMarker ?Apache FreeMarker ™는 템플릿 엔진으로 개발자가 템플릿 언어 FTL template 파일을작성해 놓고 controller 에서 서비스를 호출하여 db 에서 데이터를 불러온 후 controller 에게 데이터를 전달하면 이를 FreeMarker엔진에게 template 파일과 데이터를 같이 전달하여 화면을 표시하는 형태 입니다. 템플릿에서는 데이터를 표시하는 방법에 집중합니다.보통 ${model.name} 이런씩으로 해서 데이터를 화면에 표시합니다. 이를 그림으로 나타내면 아래와 같습니다. ::: warning 참고최근에 spring boot 에서 기본 FreeMarker 기본확장자를 .ftl 에서 .ftlh 로 변경했습니다. .ftl로 작성하시면 404 오류가 발생합니다.반드시 .fthl로 생성하시기 바랍니다.::: 2. 프로젝트 생성2.1 법정코드 다운로드엑셀업로드 할때 사용할 행정구역 코드 엑셀 파일을 다운로드 받습니다.행정지역코드 받기 엑셀파일을 열어보면 2020년6월 행정구역 코드 라고 되어 있는 행이 있는데요 첫번째 행은 삭제해주세요 첫번째행을 삭제하면 아래그림과 같이나오고 엑셀은 헤더부분을 제외하고 1번째 row부터 읽습니다. 2.2 spring 시작spring start 사이트에서 프로젝트에 필요한 파일을 생성합니다.아래와 같이 선택한후 generate 버튼을 클릭하면 압축 파일이 다운로드 됩니다. ::: tip 프로젝트 생성생성하는 부분에 보다 자세한 정보를 원하시면 프로젝트 생성 페이지를 참고하세요.::: 2.3 directory 구조다운로드 받은 프로젝트 파일의 압축을 풀고 Intellij 에서 폴더를 불러면 아래와 같은 디렉토리 구조가 생성됩니다. 아래에서 색상 강조한 부분이 수정 및 추가해야 될 파일 항목 입니다. line 1,7,9,11,13,14,16,19,21-24123456789101112131415161718192021222324build.gradlesrc└── main ├── java │ └── io │ └── github.goodsaem.freemarker │ ├── Application.java │ ├── model │ │ └── City.java │ ├── controller │ │ └── MyController.java │ └── service │ ├── CityService.java │ └── ICityService.java └── resources ├── application.properties ├── static │ └── css │ └── style.css └── templates ├── excel.ftlh ├── excelList.ftlh ├── index.ftlh └── showCities.ftlh 3. 코딩3.1 build.gradle 수정apache poi 를 통해서 엑셀 업로드를 진행하고 file io와 관련된 라이브러리를 사용 하므로 아래와 같이 수정하교 Reload all gradle project 를수행합니다. line 26-281234567891011121314151617181920212223242526272829303132333435363738plugins &#123; id &#x27;org.springframework.boot&#x27; version &#x27;2.4.2&#x27; id &#x27;io.spring.dependency-management&#x27; version &#x27;1.0.11.RELEASE&#x27; id &#x27;java&#x27; id &#x27;war&#x27;&#125;group = &#x27;io.github.goodsaem.freemarker&#x27;version = &#x27;0.0.1-SNAPSHOT&#x27;sourceCompatibility = &#x27;11&#x27;configurations &#123; compileOnly &#123; extendsFrom annotationProcessor &#125;&#125;repositories &#123; mavenCentral()&#125;dependencies &#123; implementation &#x27;org.springframework.boot:spring-boot-starter-freemarker&#x27; implementation &#x27;org.springframework.boot:spring-boot-starter-jdbc&#x27; implementation &#x27;org.springframework.boot:spring-boot-starter-web&#x27; implementation group: &#x27;org.apache.poi&#x27;, name: &#x27;poi&#x27;, version: &#x27;5.0.0&#x27; implementation group: &#x27;org.apache.poi&#x27;, name: &#x27;poi-ooxml&#x27;, version: &#x27;5.0.0&#x27; implementation group: &#x27;commons-io&#x27;, name: &#x27;commons-io&#x27;, version: &#x27;2.8.0&#x27; compileOnly &#x27;org.projectlombok:lombok&#x27; runtimeOnly &#x27;com.h2database:h2&#x27; annotationProcessor &#x27;org.projectlombok:lombok&#x27; providedRuntime &#x27;org.springframework.boot:spring-boot-starter-tomcat&#x27; testImplementation &#x27;org.springframework.boot:spring-boot-starter-test&#x27;&#125;test &#123; useJUnitPlatform()&#125; 3.2 application.properties아래 내용을 추가 해주세요 123456789spring.main.banner-mode=offspring.datasource.platform=h2spring.datasource.url=jdbc:h2:file:~/h2testspring.datasource.username=saspring.datasource.password=spring.datasource.driver-class-name=org.h2.Driverserver.port=9090spring.servlet.multipart.max-file-size=100MBspring.servlet.multipart.max-request-size=100MB 시작할때 배너를 보지 않겠다는 의미 입니다. h2 db 플랫폼을 사용합니다. h2 db는 default 저장소는 메모리입니다. 메모리는 서비스를 중단하면 데이터가 삭제됩니다.그래서 메모리 대신 파일을 사용하고 ~ 사용자 home 디렉토리 밑에 h2test 파일을 만들겠다는 의미 입니다. h2 db 계정명 입니다. h2 db 패스워드 입니다. h2 db 연결을 위한 h2 driver 를 설정합니다. 오픈할 서비스 포트 입니다. http://127.0.0.1:9090 엑셀파일 용량을 감안하여 한번에 올릴수 있는 파일 사이즈를 100M로 지정합니다. 한번에 요청할수 있는 request 사이즈를 100M로 지정합니다. 3.3 City.java행정코드 정보를 저장할 City bean 클래스를 생성합니다. lombok 을 사용하므로 아래와 같이 @Getter @Setter @ToString어노테이션을 사용하여 setter getter tostring 코드를 자동으로 완성했습니다. 1234567891011121314151617package io.github.goodsaem.freemarker.model;import lombok.Getter;import lombok.Setter;import lombok.ToString;@Getter@Setter@ToStringpublic class City &#123; private String lcode; private String lname; private String mcode; private String mname; private String scode; private String sname;&#125; 3.4 ICityServiceh2 db에 저장된 모든 데이터를 가져오는 fintAll 매소드와 엑셀파일을 읽고 난후 db에 저장하는createCode mehtod를 가진 인터페이스를 생성합니다. 1234567891011package io.github.goodsaem.freemarker.service;import io.github.goodsaem.freemarker.model.City;import java.util.List;public interface ICityService &#123; List&lt;City&gt; findAll(); Boolean createCode(String lcode,String lname,String mcode, String mname,String scode,String sname); void createTable();&#125; 3.5 CityServiceCityService 를 실제로 구현합니다. h2 db 데이터저장 데이터 읽기를 위해 16-17 라인처럼 JdbcTemplte 의존성을 주입합니다. findAll 메소드에서는 hcode 테이블 데이터를 전체 읽어 오는 query를 작성했고 createCode 메소드에서는 입력받은 값을 db 에 insert 하도록 구현했습니다.그리고 테이블이 생성되어 있지 않으면 생성하고 이미 생성되어 있으면 drop 하는 코드를 추가했습니다. 실제 서비스 할때는 drop 이나 create 는별도로 구현하시기 바랍니다.소스코드는 크게 어려운 부분이 없어 설명은 skip 하겠습니다. line 16-1712345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758package io.github.goodsaem.freemarker.service;import io.github.goodsaem.freemarker.model.City;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.dao.DataAccessException;import org.springframework.jdbc.core.BeanPropertyRowMapper;import org.springframework.jdbc.core.JdbcTemplate;import org.springframework.jdbc.core.PreparedStatementCallback;import org.springframework.stereotype.Service;import java.sql.PreparedStatement;import java.sql.SQLException;import java.util.List;@Servicepublic class CityService implements ICityService &#123; @Autowired private JdbcTemplate jdbcTemplate; @Override public List&lt;City&gt; findAll() &#123; var sql = &quot;SELECT * FROM hcode&quot;; return jdbcTemplate.query(sql,new BeanPropertyRowMapper&lt;&gt;(City.class)); &#125; @Override public Boolean createCode(String lcode, String lname, String mcode, String mname, String scode, String sname) &#123; var sql = &quot;insert into hcode(lcode,lname,mcode,mname,scode,sname) values (?,?,?,?,?,?)&quot;; return jdbcTemplate.execute(sql, new PreparedStatementCallback&lt;Boolean&gt;() &#123; @Override public Boolean doInPreparedStatement(PreparedStatement ps) throws SQLException, DataAccessException &#123; ps.setString(1,lcode); ps.setString(2,lname); ps.setString(3,mcode); ps.setString(4,mname); ps.setString(5,scode); ps.setString(6,sname); return ps.execute(); &#125; &#125;); &#125; @Override public void createTable() &#123; var sql = &quot;DROP TABLE IF EXISTS HCODE&quot;; jdbcTemplate.execute(sql); sql = &quot;CREATE TABLE IF NOT EXISTS HCODE ( &quot;+ &quot; LCODE VARCHAR(2), &quot;+ &quot; LNAME VARCHAR(255), &quot;+ &quot; MCODE VARCHAR(5), &quot;+ &quot; MNAME VARCHAR(255), &quot;+ &quot; SCODE VARCHAR(7) PRIMARY KEY, &quot;+ &quot; SNAME VARCHAR(255) &quot;+ &quot;) &quot;; jdbcTemplate.execute(sql); &#125;&#125; 3.6 MyController.javarequest 를 처리하는 컨트롤러는 아래와 같은 기능을 수행합니다. &#x2F; : 브라우저를 통해 최초로 접근하는 index 화면에 대한 제어를 담당합니다. &#x2F;cities : db에 등록되어 있는 행정코드를 읽어 화면에 표시합니다. &#x2F;excel : 엑셀파일을 선택해서 업로드 하는 화면을 호출합니다. &#x2F;uploadExcel : 업로드된 엑셀파일을 받아서 db에 저장하고 엑셀 내용을 역할을 담당합니다. 49 : 테이블이 있다면 drop 하고 없다면 생성합니다. 52-55 : 파일 확장자 xls xlsx 즉 액샐 파일 인지 체크 하여 아니면 오류를 발생합니다. 58-64 : 확장자에 맞는 workbook 을 선택한후 첫번째시트(0번째)를 불러옵니다. worksheet 67-83 : 엑셀 행수,칼럼수 만큼 돌면서 데이터를 추출하여 db 에 insert 합니다. 87 : 추출한 엑셀 내용을 datas list에 저장하여 excelList.ftlh view로 데이터를 전달합니다.line 49,52-55,58-64,67-83,871234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980818283848586878889package io.github.goodsaem.freemarker.controller;import io.github.goodsaem.freemarker.service.ICityService;import org.apache.commons.io.FilenameUtils;import org.apache.poi.hssf.usermodel.HSSFWorkbook;import org.apache.poi.ss.usermodel.Row;import org.apache.poi.ss.usermodel.Sheet;import org.apache.poi.ss.usermodel.Workbook;import org.apache.poi.xssf.usermodel.XSSFWorkbook;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Controller;import org.springframework.ui.Model;import org.springframework.web.bind.annotation.GetMapping;import org.springframework.web.bind.annotation.PostMapping;import org.springframework.web.bind.annotation.RequestParam;import org.springframework.web.multipart.MultipartFile;import org.springframework.web.servlet.ModelAndView;import java.io.IOException;import java.util.ArrayList;import java.util.HashMap;@Controllerpublic class MyController &#123; @Autowired private ICityService cityService; @GetMapping(value = &quot;/&quot;) public String index(Model model)&#123; return &quot;index&quot;; &#125; @GetMapping(value=&quot;/cities&quot;) public ModelAndView showCities() &#123; var cities = cityService.findAll(); var params = new HashMap&lt;String,Object&gt;(); params.put(&quot;cities&quot;,cities); return new ModelAndView(&quot;showCities&quot;,params); &#125; @GetMapping(value = &quot;/excel&quot;) public String excel(Model model)&#123; return &quot;excel&quot;; &#125; @PostMapping(value = &quot;/uploadExcel&quot;) public ModelAndView uploadExcel(@RequestParam(&quot;file&quot;)MultipartFile file) throws IOException &#123; cityService.createTable(); var dataList = new ArrayList&lt;&gt;(); String extension = FilenameUtils.getExtension(file.getOriginalFilename()); if(!extension.equals(&quot;xlsx&quot;) &amp;&amp; !extension.equals(&quot;xls&quot;)) &#123; throw new IOException(&quot;only excel file!!&quot;); &#125; Workbook workbook = null; if(extension.equals(&quot;xlsx&quot;)) &#123; workbook = new XSSFWorkbook(file.getInputStream()); &#125; else if(extension.equals(&quot;xls&quot;)) &#123; workbook = new HSSFWorkbook(file.getInputStream()); &#125; Sheet worksheet = workbook.getSheetAt(0); int k=0; for(int rowIndex=1; rowIndex&lt;worksheet.getPhysicalNumberOfRows(); rowIndex++) &#123; Row row = worksheet.getRow(rowIndex); if(row != null) &#123; int cells = row.getPhysicalNumberOfCells(); var hashMap = new HashMap(); for(int columnIndex=0; columnIndex&lt;= cells; columnIndex++) &#123; hashMap.put(&quot;col&quot;+columnIndex,row.getCell(columnIndex) + &quot;&quot;); &#125; dataList.add(hashMap); cityService.createCode((String)hashMap.get(&quot;col0&quot;), (String)hashMap.get(&quot;col1&quot;), (String)hashMap.get(&quot;col2&quot;), (String)hashMap.get(&quot;col3&quot;), (String)hashMap.get(&quot;col4&quot;), (String)hashMap.get(&quot;col5&quot;)); &#125; &#125; var params = new HashMap&lt;String,Object&gt;(); params.put(&quot;datas&quot;,dataList); return new ModelAndView(&quot;excelList&quot;,params); &#125;&#125; 3.7 .ftlh files index.ftlh1234567891011121314&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt; &lt;title&gt;행정코드관리&lt;/title&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;&lt;/head&gt;&lt;body&gt;&lt;a href=&quot;cities&quot;&gt;행정코드보기&lt;/a&gt;&lt;a href=&quot;excel&quot;&gt;엑셀 업로드&lt;/a&gt;&lt;/body&gt;&lt;/html&gt; excel.ftlh123456789101112131415&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt; &lt;title&gt;엑셀업로드&lt;/title&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;&lt;/head&gt;&lt;body&gt;&lt;form action=&quot;/uploadExcel&quot; method=&quot;POST&quot; enctype=&quot;multipart/form-data&quot;&gt; &lt;input type=&quot;file&quot; name=&quot;file&quot;&gt; &lt;input type=&quot;submit&quot; value=&quot;엑셀업로드&quot; /&gt;&lt;/form&gt;&lt;/body&gt;&lt;/html&gt; excelList.ftlh12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt; &lt;title&gt;행정구역코드&lt;/title&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt; &lt;link rel=&quot;stylesheet&quot; href=&quot;css/style.css&quot;&gt;&lt;/head&gt;&lt;body&gt;&lt;h2&gt;행정구역 코드&lt;/h2&gt;&lt;table border=&quot;1&quot;&gt; &lt;tr&gt; &lt;th&gt;시도코드&lt;/th&gt; &lt;th&gt;시도명칭&lt;/th&gt; &lt;th&gt;시군구코드&lt;/th&gt; &lt;th&gt;시군구명칭&lt;/th&gt; &lt;th&gt;읍면동코드&lt;/th&gt; &lt;th&gt;읍면동명칭&lt;/th&gt; &lt;/tr&gt; &lt;#list datas as data&gt; &lt;tr&gt; &lt;td&gt;$&#123;data[&quot;col0&quot;]&#125;&lt;/td&gt; &lt;td&gt;$&#123;data[&quot;col1&quot;]&#125;&lt;/td&gt; &lt;td&gt;$&#123;data[&quot;col2&quot;]&#125;&lt;/td&gt; &lt;td&gt;$&#123;data[&quot;col3&quot;]&#125;&lt;/td&gt; &lt;td&gt;$&#123;data[&quot;col4&quot;]&#125;&lt;/td&gt; &lt;td&gt;$&#123;data[&quot;col5&quot;]&#125;&lt;/td&gt; &lt;/tr&gt;&lt;/#list&gt;&lt;/table&gt;&lt;/body&gt;&lt;/html&gt;``` - showCities.ftlh```html&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt; &lt;title&gt;Cities&lt;/title&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt; &lt;link rel=&quot;stylesheet&quot; href=&quot;css/style.css&quot;&gt;&lt;/head&gt;&lt;body&gt;&lt;h2&gt;행정코드 리스트&lt;/h2&gt;&lt;table border=&quot;1&quot;&gt; &lt;tr&gt; &lt;th&gt;시도코드&lt;/th&gt; &lt;th&gt;시도명칭&lt;/th&gt; &lt;th&gt;시군구코드&lt;/th&gt; &lt;th&gt;시군구명칭&lt;/th&gt; &lt;th&gt;읍면동코드&lt;/th&gt; &lt;th&gt;읍면동명칭&lt;/th&gt; &lt;/tr&gt; &lt;#list cities as city&gt; &lt;tr&gt; &lt;td&gt;$&#123;city.lcode&#125;&lt;/td&gt; &lt;td&gt;$&#123;city.lname&#125;&lt;/td&gt; &lt;td&gt;$&#123;city.mcode&#125;&lt;/td&gt; &lt;td&gt;$&#123;city.mname&#125;&lt;/td&gt; &lt;td&gt;$&#123;city.scode&#125;&lt;/td&gt; &lt;td&gt;$&#123;city.sname&#125;&lt;/td&gt; &lt;/tr&gt;&lt;/#list&gt;&lt;/table&gt;&lt;/body&gt;&lt;/html&gt; 4. 테스트FreemarkerApplication.java 파일에서 마우스 오른쪽 버튼을 클릭하여 Run 메뉴를 실행합니다. 마무리처음에는 간단히 정리할려고 했는데 만들어가다 보니 욕심히 생겨서 이런 저런 기능을 추가 해서 코드가 길어 졌네요. 소스 코드가 필요하신분은아래 파일을 다운로드 받으셔서 실행해 보세요.. 예제에서 사용한 엑셀파일 소스다운로드","categories":[{"name":"Coding","slug":"Coding","permalink":"http://goodsaem.github.io/categories/Coding/"},{"name":"springboot","slug":"Coding/springboot","permalink":"http://goodsaem.github.io/categories/Coding/springboot/"}],"tags":[{"name":"springboot","slug":"springboot","permalink":"http://goodsaem.github.io/tags/springboot/"}]},{"title":"8. SpringBoot Backend 서버 구축","slug":"coding/springboot/springboot108","date":"2023-03-25T16:18:03.000Z","updated":"2025-06-29T07:42:00.930Z","comments":true,"path":"coding/springboot/springboot108/","link":"","permalink":"http://goodsaem.github.io/coding/springboot/springboot108/","excerpt":"","text":"8. RESTful API 디자인 원칙제가 생각하고 만들려고 하는 서비스는 frontend와 backend 서버가 별도로 구분되어 운영됩니다. backend 부분은 springboot 에서 restapi 형태로 데이터를제공합니다. 데이터를 어떻게 리턴할지 정리해 보겠습니다. 대부분 아래와 유사하게 작성할것 같은데요 만들어 보면서 정리해보겠습니다. 1. 메소드분리사용목적에 맞게 메소드를 분리합니다. http 프로토콜은 아래와 같은 http method을 제공합니다. 보통 get 과 post는 많이 사용햤는데 아래 put 과 delete도 사용할수 있으니용도에 맞게 사용하시기 바랍니다. 메소드 구분 설명 GET read 데이터를 읽어서 표시할때 사용합니다. POST create 데이터를 저장할때 사용합니다. PUT update 데이터를 수정할때 사용합니다. DELETE delete 데이터를 삭제 할때 사용합니다. 2. api 규칙위에 규칙으로 지금까지 만든 memo app 의 rest api 구성을 해보겠습니다. 메소드 url 설명 GET &#x2F;v1&#x2F;memo&#x2F;{idx} memo id 에 맞는 데이터를 조회합나다. GET &#x2F;v1&#x2F;memos 모든 메모를 조회합니다. POST &#x2F;v1&#x2F;memo 신규 메모를 등록합니다. PUT &#x2F;v1&#x2F;memo 기존 메모를 수정합니다. DELETE &#x2F;v1&#x2F;memo&#x2F;{id} memo id 에 맞는 메모를 삭제합니다. DELETE &#x2F;v1&#x2F;memos 모든 메모를 삭제 합니다. 3. 서비스 재시작 방법위에 url로 데이터를 요청할때 return 되는 구조를 정형화 하겠습니다. api 결과 에러발생시 에러코드 정보를 리턴하고데이터 리턴 하는 구조도 정형화 하겠습니다. 추가할 파일은 22, 27 라인이고 나머지는 위 구조에 맞게 수정 하겠습니다. line 14,18,22,27 123456789101112131415161718192021222324252627282930313233343536build.gradlesrc└── main ├── java │ └── io.github.goodsaem.api │ ├── config │ | ├── IgniteConfig.java │ | └── SwaggerUiWebMvcConfigurer.java │ | └── WebConfig.java │ ├── ApiApplication.java │ ├── controller │ │ │ └── v1 │ │ │ ├── HCodeController.java │ │ │ └── MemoController.java │ │ └── MyController.java │ ├── entity │ │ ├── HCode.java │ │ └── Memo.java │ ├── service │ │ ├── HCodeService.java │ │ ├── IHCodeService.java │ │ └── ResponseService.java │ ├── repo │ | ├── HCodeRepo.java │ | └── MemoJpaRepo.java │ ├── response │ | └── Response.java │ | │ └── store │ └── DataStore.java └── resources ├── application.yml ├── banner.txt └── templates ├── hcode.ftlh └── goodsaem.ftlh 4. Response.javarestapi 실행결과를 리턴하는 공통 모델 입니다. 123456789101112131415161718192021package io.github.goodsaem.api.response;import io.swagger.annotations.ApiModelProperty;import lombok.Getter;import lombok.Setter;@Getter@Setterpublic class Response&lt;T&gt; &#123; @ApiModelProperty(value = &quot;요청 처리 결과 : true or false&quot;) private boolean result; @ApiModelProperty(value =&quot;요청 처리 코드 0 성공 , -1 오류&quot;) private int resultCode; @ApiModelProperty(value =&quot;결과 메시지&quot;) private String message; @ApiModelProperty(value =&quot;리턴 데이터&quot;) private T data;&#125; 5. ResponseService.javaapi 요청 결과에 따라 sucess 와 fail 을 리턴할 enum type 의 ReturnResponse를 선언하고 api 처리결과 성공 실패를 리턴하는메소드를 하기와 같이 생성 합니다. 32번라인 key 값이 없다면 즉 결과가 한건이면 obj 값을 리턴하도록 하고 그외 경우는 key 값에 해당하는 리턴하는 형태로 구현했습니다. 자세한건 실행결과를 보면서 다시 설명하겠습니다. 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960package io.github.goodsaem.api.service;import io.github.goodsaem.api.response.Response;import lombok.Getter;import org.springframework.stereotype.Service;import java.util.HashMap;import java.util.Map;@Servicepublic class ResponseService &#123; @Getter public enum ReturnResponse &#123; SUCCESS(0, &quot;Success.&quot;), FAIL(-1, &quot;Fail.&quot;); int returnCode; String returnMessage; ReturnResponse(int returnCode, String returnMessage) &#123; this.returnCode = returnCode; this.returnMessage = returnMessage; &#125; &#125; public &lt;T&gt; Response&lt;T&gt; getResult(String key, Object obj) &#123; Response&lt;T&gt; result = new Response&lt;&gt;(); Map&lt;String,Object&gt; map = new HashMap&lt;&gt;(); map.put(key,obj); if(&quot;&quot;.equals(key)) &#123; result.setData((T) obj); &#125; else &#123; result.setData((T) map); &#125; result.setResult(true); result.setResultCode(ReturnResponse.SUCCESS.getReturnCode()); result.setMessage(ReturnResponse.SUCCESS.getReturnMessage()); return result; &#125; public Response getSuccessResult() &#123; Response result = new Response(); result.setResult(true); result.setResultCode(ReturnResponse.SUCCESS.getReturnCode()); result.setMessage(ReturnResponse.SUCCESS.getReturnMessage()); return result; &#125; public Response getFailResult(String message) &#123; Response result = new Response(); result.setResult(false); result.setResultCode(ReturnResponse.FAIL.getReturnCode()); result.setMessage(ReturnResponse.FAIL.getReturnMessage() + &quot; : &quot; + message); return result; &#125;&#125; 6. Memo.javaMemo 모델을 아래와 같이 수정합니다. 특별히 달라진점은 없고 @ApiModelProperty 로 칼럼에 대해서 상세하게 기술했습니다. 123456789101112131415161718192021222324252627package io.github.goodsaem.api.entity;import io.swagger.annotations.ApiModelProperty;import lombok.*;import javax.persistence.*;@Builder@Entity@Setter@Getter@NoArgsConstructor@AllArgsConstructor@Table(name=&quot;memo&quot;)public class Memo &#123; @Id @GeneratedValue(strategy = GenerationType.AUTO) @ApiModelProperty(value = &quot;메모번호&quot; , notes = &quot;메모 고유 번호&quot;, example = &quot;1&quot;) private long id; @Column(nullable = false, length = 30) @ApiModelProperty(required = true, value = &quot;제목&quot;, notes = &quot;메모 제목&quot; , example = &quot;중요한 메모&quot;) private String title; @Column(nullable = false, length = 4000) @ApiModelProperty(required = true, value=&quot;내용&quot;, notes = &quot;메모 내용&quot; , example = &quot;내용을 등록해 봅니다.&quot;) private String contents;&#125; 7. MemoController.java메모 컨트롤러에 단건 조회, 삭제 , 여러건 삭제 등을 추가하고 swagger 문서에 표시할 내용을 아래와 같이 추가했습니다. 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182package io.github.goodsaem.api.controller.v1;import io.github.goodsaem.api.entity.Memo;import io.github.goodsaem.api.repo.MemoJpaRepo;import io.github.goodsaem.api.response.Response;import io.github.goodsaem.api.service.ResponseService;import io.swagger.annotations.Api;import io.swagger.annotations.ApiOperation;import io.swagger.annotations.ApiParam;import lombok.RequiredArgsConstructor;import org.springframework.web.bind.annotation.*;@Api(tags = &#123;&quot;1. Memo&quot;&#125;)@RequiredArgsConstructor@RestController@RequestMapping(value = &quot;/v1&quot;)public class MemoController &#123; private final MemoJpaRepo memoJpaRepo; private final ResponseService responseService; @ApiOperation(value = &quot;메모 전체 조회&quot;, notes = &quot;모든 메모를 조회합니다.&quot;) @GetMapping(value = &quot;/memos&quot;) public Response&lt;Memo&gt; readMemos() &#123; return responseService.getResult(&quot;list&quot;,memoJpaRepo.findAll()); &#125; @ApiOperation(value = &quot;메모 한건 조회&quot;, notes = &quot;memo id 로 메모를 조회합니다.&quot;) @GetMapping(value = &quot;/memo/&#123;id&#125;&quot;) public Response&lt;Memo&gt; readMemo(@ApiParam(value = &quot;memo id&quot;, required = true) @PathVariable long id) &#123; return responseService.getResult(&quot;&quot;,memoJpaRepo.findById(id).orElse(null)); &#125; @ApiOperation(value = &quot;메모 등록&quot;, notes = &quot;메모를 등록합니다.&quot;) @PostMapping(value = &quot;/memo&quot;) public Response&lt;Memo&gt; createMemo(@ApiParam(value = &quot;제목&quot;, required = true) @RequestParam String title, @ApiParam(value = &quot;내용&quot;, required = true) @RequestParam String contents ) &#123; if(title.length() &gt; 200) &#123; return (Response&lt;Memo&gt;) responseService.getFailResult(&quot;제목 길이가 200보다 큽니다.&quot;); &#125; if(contents.length() &gt; 4000) &#123; return (Response&lt;Memo&gt;) responseService.getFailResult(&quot;제목 길이가 4000보다 큽니다.&quot;); &#125; Memo memo = Memo.builder() .title(title) .contents(contents) .build(); return responseService.getResult(&quot;&quot;,memoJpaRepo.save(memo)); &#125; @ApiOperation(value = &quot;메모 수정&quot;, notes = &quot;메모를 수정합니다.&quot;) @PutMapping(value = &quot;/memo&quot;) public Response&lt;Memo&gt; updateMemo(@ApiParam(value = &quot;메모번호&quot;, required = true) @RequestParam long id, @ApiParam(value = &quot;제목&quot;, required = true) @RequestParam String title, @ApiParam(value = &quot;내용&quot;, required = true) @RequestParam String contents ) &#123; Memo memo = Memo.builder() .id(id) .title(title) .contents(contents) .build(); return responseService.getResult(&quot;&quot;,memoJpaRepo.save(memo)); &#125; @ApiOperation(value = &quot;메모 삭제&quot;, notes = &quot;메모 번호로 메모를 삭제합니다.&quot;) @DeleteMapping(value = &quot;/memo&quot;) public Response deleteMemo(@ApiParam(value = &quot;메모번호&quot;, required = true) @RequestParam long id ) &#123; memoJpaRepo.deleteById(id); return responseService.getSuccessResult(); &#125; @ApiOperation(value = &quot;메모 젠체 삭제&quot;, notes = &quot;메모 전체를 삭제합니다.&quot;) @DeleteMapping(value = &quot;/memos&quot;) public Response deleteMemos() &#123; memoJpaRepo.deleteAll(); return responseService.getSuccessResult(); &#125;&#125; 8. swagger test만든 api 가 정상 동작하는지 swagger 를 통해서 확인 하겠습니다. http://localhost:9090/spring/swagger-ui/에 접속합니다. 1. create Memo를 클릭한후 post 를 클릭한후 Try it out 버튼을 눌러 제목과 내용을 입력하고 Excute 버튼을 클릭합니다. 여러개 생성합니다.아래와 같이 데이터가 등록되었고 return 값도 정상으로 받았습니다. Response.java 에 정의한 형태로 리턴 되었습니다. 12345678910&#123; &quot;result&quot;: true, &quot;resultCode&quot;: 0, &quot;message&quot;: &quot;Success.&quot;, &quot;data&quot;: &#123; &quot;id&quot;: 2, &quot;title&quot;: &quot;제목2&quot;, &quot;contents&quot;: &quot;내용2&quot; &#125;&#125; 2. create fail 제목을 200자 이상 입력했을경우 fail message 가 리턴되는지 확인해 보겠습니다. 결과가 fail로 예상한되로 동작합니다. 123456&#123; &quot;result&quot;: false, &quot;resultCode&quot;: -1, &quot;message&quot;: &quot;Fail. : 제목 길이가 200보다 큽니다.&quot;, &quot;data&quot;: null&#125; 3. updatePUT 메소드를 실행하여 메모를 수정합니다. 4. all listGET 메소드중 &#x2F;spring&#x2F;v1&#x2F;memos 메모 전체 조회 를 클릭하여 Try it out &gt; Execute 버튼을 클릭하여 실행하면 아래와 같은결과를 확인 할수 있습니다. memos 컨트롤러 부분을 확인하면 아래와 같이 key 값 list 와 findAll 메소드를 실행하여 전체 결과를 리턴합니다. 12345@ApiOperation(value = &quot;메모 전체 조회&quot;, notes = &quot;모든 메모를 조회합니다.&quot;)@GetMapping(value = &quot;/memos&quot;)public Response&lt;Memo&gt; readMemos() &#123; return responseService.getResult(&quot;list&quot;,memoJpaRepo.findAll());&#125; 그럼 아래와 같이 결과가 출력됩니다. list 대신 memos 라고 하면 memos 라고 표시됩니다. 12345678910111213141516171819&#123; &quot;result&quot;: true, &quot;resultCode&quot;: 0, &quot;message&quot;: &quot;Success.&quot;, &quot;data&quot;: &#123; &quot;list&quot;: [ &#123; &quot;id&quot;: 1, &quot;title&quot;: &quot;제목 수정&quot;, &quot;contents&quot;: &quot;내용 수정&quot; &#125;, &#123; &quot;id&quot;: 2, &quot;title&quot;: &quot;제목2&quot;, &quot;contents&quot;: &quot;내용2&quot; &#125; ] &#125;&#125; 5. 단건 조회 점검GET 메소드중 &#x2F;spring&#x2F;v1&#x2F;memo&#x2F;{id} 를 실행하면 한건 데이터만 조회 됩니다. 전체 url은 아래와 같으며http://localhost:9090/spring/v1/**memo**/**1** 위에서 설계한 되로 url 이 표시 됩니다. 6 삭제기능 점검같은 요령으로 삭제 및 전체 삭제를 수행하면 예상한되로 정상 동작합니다. 마무리유사한 형태로 작성하는 연습을 하시면 자연스럽게 익숡해 질거라 믿습니다. 글 읽어 주셔서 감사합니다. 좀더 좋은 글로 보답하겠습니다.","categories":[{"name":"Coding","slug":"Coding","permalink":"http://goodsaem.github.io/categories/Coding/"},{"name":"springboot","slug":"Coding/springboot","permalink":"http://goodsaem.github.io/categories/Coding/springboot/"}],"tags":[{"name":"springboot","slug":"springboot","permalink":"http://goodsaem.github.io/tags/springboot/"}]},{"title":"7. SpringBoot Backend 서버 구축","slug":"coding/springboot/springboot107","date":"2023-03-25T16:17:03.000Z","updated":"2025-06-29T07:42:00.915Z","comments":true,"path":"coding/springboot/springboot107/","link":"","permalink":"http://goodsaem.github.io/coding/springboot/springboot107/","excerpt":"","text":"7. Swagger 3.x 설치프로젝트를 진행할때 frontend와 backend 개발자가 다른경우가 많습니다. 이때 백엔드 개발자가 만든 api 사용법에 대해서 알려주어야되는데 보통 엑셀 같은걸로 정리해서 보내주는데 그런 문서 작업하는것도 공수가 많이 들어가죠 이때 유용하게 사용할수 있는게 swagger 입니다.swagger 들어가서 보시구요~ 거기서 테스트도 가능합니다. 라고 하면 불필요하게 문서 만들필요도 없고 바로바로 테스트 해볼수 있는 장점이 있고백엔드 개발자도 자신이 만든 코드가 제되로 동작하는지 바로 확인이 가능합니다. 1. Directory 구조와 파일디렉토리 구조 및 추가할 파일 들입니다. build.gradle 파일에 swagger 관련 라이브러리를 추가하고 config에 swagger 3.0 기준의 설정파일을 추가합니다. line 1,8 123456789101112131415161718192021222324252627282930313233build.gradlesrc└── main ├── java │ └── io.github.goodsaem.api │ ├── config │ | ├── IgniteConfig.java │ | └── SwaggerUiWebMvcConfigurer.java │ | └── WebConfig.java │ ├── ApiApplication.java │ ├── controller │ │ │ └── v1 │ │ │ ├── HCodeController.java │ │ │ └── MemoController.java │ │ └── MyController.java │ ├── entity │ │ ├── HCode.java │ │ └── Memo.java │ ├── service │ │ ├── HCodeService.java │ │ └── IHCodeService.java │ ├── repo │ | ├── HCodeRepo.java │ | └── MemoJpaRepo.java │ | │ └── store │ └── DataStore.java └── resources ├── application.yml ├── banner.txt └── templates ├── hcode.ftlh └── goodsaem.ftlh 2. 적용적용은 간단합니다. build.gradle 아래 2줄을 추가 합니다. line 42,43 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657buildscript &#123; ext &#123; apacheIgniteVersion = &#x27;2.9.1&#x27; springBootVersion = &#x27;2.4.3&#x27; &#125; repositories &#123; mavenCentral() &#125; dependencies &#123; classpath( &quot;org.springframework.boot:spring-boot-gradle-plugin:$&#123;springBootVersion&#125;&quot;) &#125;&#125;apply plugin: &#x27;org.springframework.boot&#x27;apply plugin: &#x27;war&#x27;apply plugin: &#x27;io.spring.dependency-management&#x27;sourceCompatibility = &#x27;1.8&#x27;targetCompatibility = &#x27;1.8&#x27;group = &#x27;io.github.goodsaem&#x27;version = &#x27;0.0.1-SNAPSHOT&#x27;configurations &#123; compileOnly &#123; extendsFrom annotationProcessor &#125;&#125;repositories &#123; mavenCentral()&#125;dependencies &#123; implementation &#x27;org.springframework.boot:spring-boot-starter-data-jpa&#x27; implementation &#x27;org.springframework.boot:spring-boot-starter-freemarker&#x27; implementation &#x27;org.springframework.boot:spring-boot-starter-web&#x27; implementation &#x27;org.springframework.boot:spring-boot-autoconfigure&#x27; implementation(&quot;org.mariadb.jdbc:mariadb-java-client&quot;) implementation group: &#x27;com.h2database&#x27;, name: &#x27;h2&#x27;, version: &#x27;1.4.196&#x27; implementation &quot;io.springfox:springfox-boot-starter:3.0.0&quot; implementation &quot;io.springfox:springfox-swagger-ui:3.0.0&quot; compile &quot;org.apache.ignite:ignite-core:$apacheIgniteVersion&quot;, &quot;org.apache.ignite:ignite-slf4j:$apacheIgniteVersion&quot;, &quot;org.apache.ignite:ignite-spring:$apacheIgniteVersion&quot; &quot;org.apache.ignite:ignite-rest-http:$apacheIgniteVersion&quot; compileOnly &#x27;org.projectlombok:lombok&#x27; annotationProcessor &#x27;org.projectlombok:lombok&#x27; testImplementation &#x27;org.springframework.boot:spring-boot-starter-test&#x27;&#125;test &#123; useJUnitPlatform()&#125; 그리고 나서 config 디렉토리에 아래 설정파일을 생성합니다. 여기까지 하면 설정은 끝납니다. 1234567891011121314151617181920212223242526272829package io.github.goodsaem.api.config;import org.springframework.util.StringUtils;import org.springframework.web.servlet.config.annotation.ResourceHandlerRegistry;import org.springframework.web.servlet.config.annotation.ViewControllerRegistry;import org.springframework.web.servlet.config.annotation.WebMvcConfigurer;public class SwaggerUiWebMvcConfigurer implements WebMvcConfigurer &#123; private final String baseUrl; public SwaggerUiWebMvcConfigurer(String baseUrl) &#123; this.baseUrl = baseUrl; &#125; @Override public void addResourceHandlers(ResourceHandlerRegistry registry) &#123; String baseUrl = StringUtils.trimTrailingCharacter(this.baseUrl, &#x27;/&#x27;); registry. addResourceHandler(baseUrl + &quot;/swagger-ui/**&quot;) .addResourceLocations(&quot;classpath:/META-INF/resources/webjars/springfox-swagger-ui/&quot;) .resourceChain(false); &#125; @Override public void addViewControllers(ViewControllerRegistry registry) &#123; registry.addViewController(baseUrl + &quot;/swagger-ui/&quot;) .setViewName(&quot;forward:&quot; + baseUrl + &quot;/swagger-ui/index.html&quot;); &#125;&#125; 3. ui 사용법http://localhost:9090/spring/swagger-ui/ 로 접속합니다.아래와 같은 ui 화면을 확인할수 있습니다. 메모 컨트롤러 중 메모 등록 api를 클릭합니다. Try it out 버튼을 클릭하고 등록할 메모 정보를 json 형태로 작성합니다. 그리고 나서 Execute 버튼을 클릭하여 메모를 생성합니다.아래 그림결과를 보면 200 즉 정상 생성되었다는 메시지를 받았습니다. 메모조회 api 를 클릭하여 제되로 등록되었는지 확인합니다. server respose body 부분 확인하면 위에서 생성한 메모를 확인할수 있습니다. endapi 문서도 만들어 주고 api 테스트도 해볼수 있는 유용한 tool이네요 사용해야 겠죠. 글 읽어 주셔서 감사합니다.","categories":[{"name":"Coding","slug":"Coding","permalink":"http://goodsaem.github.io/categories/Coding/"},{"name":"springboot","slug":"Coding/springboot","permalink":"http://goodsaem.github.io/categories/Coding/springboot/"}],"tags":[{"name":"springboot","slug":"springboot","permalink":"http://goodsaem.github.io/tags/springboot/"}]},{"title":"6. SpringBoot Backend 서버 구축","slug":"coding/springboot/springboot106","date":"2023-03-25T16:16:03.000Z","updated":"2025-06-29T07:42:00.915Z","comments":true,"path":"coding/springboot/springboot106/","link":"","permalink":"http://goodsaem.github.io/coding/springboot/springboot106/","excerpt":"","text":"6. SpringBoot Ignite 캐쉬설정프로젝트를 진행하다 보면 캐쉬를 사용해야 하는 경우가 있습니다. 실시간으로 변하는 dash board를 구축해달라고 할때 전 주로 캐쉬를 이용해서 문제를해결합니다. 대쉬보드를 사용하는 사용자가 천명 이라고 가정하고 대시보드는 5초마다 한번씩 변경되어 되고 한번에 불러오는 데이터량은 1만건 정도 된다고가정하겠습니다. 이걸 그냥 query 날려서 데이터를 가져온다고 가정하면 10,000 * 1,000 &#x3D; 10,000,000 5초마다 천만건의 데이터를 가져오게 되는거죠 db에도 부하가 많이가고 응답속도도 느려지고 메모리가 꽉 차서 코아 덤프떨어지고 서비스는 100% 중단됩니다. 이럴때 캐쉬를 사용하면 좋은데요redis는 참 좋은데 설치를 해야 되는 문제가 있습니다. unix에서는 설치도 안되고 패쇄망에 있는 리눅스에서 설치도 쉬운 문제가 아니죠..이때 ignite를 이용하면 쉽게 문제를 풀수 있습니다. 1. 아키텍처 (springboot , ignite , spring scheduler)구상하고 있는 구조는 아래와 같습니다. 스프링 스케쥴러를 이용하여 5초마다 한번씩 디비에 데이터를 읽어서 ignite 캐쉬에 json 형태로 데이터를담아 놓습니다. 1,000 명의 사용자가 5초마다 데이터를 요청하더라도 이미 가져온 캐쉬의 json 데이터를 가져와서 보여주기에 5초당 1만건 데이터를불러오는 부하만 걸리게 됩니다. 부하가 1&#x2F;1000 로 줄어 들게 됩니다. 최종 생각하는 모습은 위에 그림과 같으나 오늘 시간은 지금까지 만든 데이터를 ignite 캐쉬에 올려 보겠습니다. 사실 이부분 진행하면서 설정하는부분 때문에 시간을 많이 소비했는데 실패했던 부분도 정리해 두겠습니다. 유사한 설정 진행시 참고 하시기 바랍니다. 2. Directory 구조디렉토리 구조는 아래와 같습니다. builde.gradle 과 HCodeControll은 수정 되고 2개 파일은 추가할 예정 입니다. 디렉토리가 없으면 생성하고내용이 없는 클래스 파일을 우선 작성해 주세요 line 1,7,12,26 1234567891011121314151617181920212223242526272829303132build.gradlesrc└── main├── java│ └── io.github.goodsaem.api│ ├── config│ | ├── IgniteConfig.java│ | └── WebConfig.java│ ├── ApiApplication.java│ ├── controller│ │ │ └── v1│ │ │ ├── HCodeController.java│ │ │ └── MemoController.java│ │ └── MyController.java│ ├── entity│ │ ├── HCode.java│ │ └── Memo.java│ ├── service│ │ ├── HCodeService.java│ │ └── IHCodeService.java│ ├── repo│ | ├── HCodeRepo.java│ | └── MemoJpaRepo.java│ |│ └── store│ └── DataStore.java└── resources├── application.yml├── banner.txt└── templates├── hcode.ftlh└── goodsaem.ftlh 3. builde.gradleignite 사용을 위한 설정을 아래와 같이 추가합니다. line 3,42-45 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354buildscript &#123; ext &#123; apacheIgniteVersion = &#x27;2.9.1&#x27; springBootVersion = &#x27;2.4.3&#x27; &#125; repositories &#123; mavenCentral() &#125; dependencies &#123; classpath( &quot;org.springframework.boot:spring-boot-gradle-plugin:$&#123;springBootVersion&#125;&quot;) &#125;&#125;apply plugin: &#x27;org.springframework.boot&#x27;apply plugin: &#x27;war&#x27;apply plugin: &#x27;io.spring.dependency-management&#x27;sourceCompatibility = &#x27;1.8&#x27;targetCompatibility = &#x27;1.8&#x27;group = &#x27;io.github.goodsaem&#x27;version = &#x27;0.0.1-SNAPSHOT&#x27;configurations &#123; compileOnly &#123; extendsFrom annotationProcessor &#125;&#125;repositories &#123; mavenCentral()&#125;dependencies &#123; implementation &#x27;org.springframework.boot:spring-boot-starter-data-jpa&#x27; implementation &#x27;org.springframework.boot:spring-boot-starter-freemarker&#x27; implementation &#x27;org.springframework.boot:spring-boot-starter-web&#x27; implementation &#x27;org.springframework.boot:spring-boot-autoconfigure&#x27; implementation(&quot;org.mariadb.jdbc:mariadb-java-client&quot;) compile &quot;org.apache.ignite:ignite-core:$apacheIgniteVersion&quot;, &quot;org.apache.ignite:ignite-slf4j:$apacheIgniteVersion&quot;, &quot;org.apache.ignite:ignite-spring:$apacheIgniteVersion&quot; &quot;org.apache.ignite:ignite-rest-http:$apacheIgniteVersion&quot; compileOnly &#x27;org.projectlombok:lombok&#x27; annotationProcessor &#x27;org.projectlombok:lombok&#x27; testImplementation &#x27;org.springframework.boot:spring-boot-starter-test&#x27;&#125;test &#123; useJUnitPlatform()&#125; 4. IgniteConfig.java복잡한 설정을 진행하는데요 자세한 내용은 https://ignite.apache.org/docs/latest/extensions-and-integrations/spring/spring-boot여기를 참조 하시고 간단히 설명 드리면 서비스할 포트 지정하고 grid 명을 지정하는데 이부분은 여러개의 캐쉬 서버를 운영할때 서로 동기화 할수 있는 역할을담당하게 됩니다. 만약 사용자 로그인을 하고 세션정보를 서버1,서버2에 모두 저장 즉 클러스터링 하고 싶다면 ignite 를 통해 가능하고 서버1과 서버2를식별할수 있는 역할을 담당하게 됩니다. 그리고 thread pool 사이즈 같은 설정값이 있는데 이부분은 운영하면서 조정이 가능할것 같네요.. 그냥 쉽게 ignite 설정이구나 생각하시고 동일하게 설정해도 크게 문제 없다고 생각합니다(단 단독 서버인경우) 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455package io.github.goodsaem.api.config;import lombok.extern.slf4j.Slf4j;import org.apache.ignite.Ignite;import org.apache.ignite.IgniteException;import org.apache.ignite.IgniteLogger;import org.apache.ignite.Ignition;import org.apache.ignite.configuration.BinaryConfiguration;import org.apache.ignite.configuration.ConnectorConfiguration;import org.apache.ignite.configuration.IgniteConfiguration;import org.apache.ignite.logger.slf4j.Slf4jLogger;import org.apache.ignite.spi.discovery.tcp.TcpDiscoverySpi;import org.apache.ignite.spi.discovery.tcp.ipfinder.vm.TcpDiscoveryVmIpFinder;import org.springframework.context.annotation.Bean;import org.springframework.context.annotation.Configuration;import java.util.Collections;@Configuration@Slf4jpublic class IgniteConfig &#123; @Bean public IgniteConfiguration igniteConfiguration() &#123; System.setProperty(&quot;IGNITE_JETTY_PORT&quot;,&quot;8888&quot;); IgniteConfiguration igniteConfiguration = new IgniteConfiguration(); igniteConfiguration.setClientMode(false); ConnectorConfiguration connectorConfiguration = new ConnectorConfiguration(); connectorConfiguration.setPort(47500); igniteConfiguration.setMetricsLogFrequency(60000); igniteConfiguration.setQueryThreadPoolSize(2); igniteConfiguration.setDataStreamerThreadPoolSize(1); igniteConfiguration.setManagementThreadPoolSize(2); igniteConfiguration.setRebalanceThreadPoolSize(1); igniteConfiguration.setAsyncCallbackPoolSize(2); igniteConfiguration.setPeerClassLoadingEnabled(false); IgniteLogger log = new Slf4jLogger(); igniteConfiguration.setGridLogger(log); igniteConfiguration.setIgniteInstanceName(&quot;GoodSaem-Grid&quot;); BinaryConfiguration binaryConfiguration = new BinaryConfiguration(); binaryConfiguration.setCompactFooter(false); igniteConfiguration.setBinaryConfiguration(binaryConfiguration); TcpDiscoverySpi tcpDiscoverySpi = new TcpDiscoverySpi(); TcpDiscoveryVmIpFinder tcpDiscoveryVmIpFinder = new TcpDiscoveryVmIpFinder(); tcpDiscoveryVmIpFinder.setAddresses(Collections.singletonList(&quot;127.0.0.1:47500..47509&quot;)); tcpDiscoverySpi.setIpFinder(tcpDiscoveryVmIpFinder); igniteConfiguration.setDiscoverySpi(tcpDiscoverySpi); return igniteConfiguration; &#125; @Bean(destroyMethod = &quot;close&quot;, name=&quot;ignite&quot;) public Ignite ignite(IgniteConfiguration igniteConfiguration) throws IgniteException&#123; Ignite ignite = Ignition.start(igniteConfiguration); ignite.cluster().active(true); return ignite; &#125;&#125; 5. DataStore.java데이터를 저장하는 공간을 만들고 최초 어플리케이션이 시작되면 hCodeStore에 키값으로 hCodeCache 란 이름으로 db에서 불러온행정코드를 메모리를 올리는 역할을 담당합니다. 이렇게 캐쉬에 올려놓으면 다음번 사용자가 데이터를 요청할때는 db에서 가져오지 않고캐쉬에 데이터를 통해서 가져올수 있습니다. 데이터 수정,삭제,저장 시 캐쉬에 데이터를 변경하여 빠르게 데이터를 불러올때 활용하면좋겠네요 또 그리고 위에서 설명했던것 처럼 주기마다 데이터가 변하고 접속한 클라이언트가 많을때도 활용하면 속도 향상에 도움이되리라 생각합니다. 크게 어려운 코드는 없고 @EventListener(ApplicationReadyEvent.class) 어노테이션을 사용하여 어플리케이션이 구동되고나면 디비에서 행정코드를 읽어 캐쉬에 저장하는 부분만 유의해서 보시면 됩니다. line 40-48 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455package io.github.goodsaem.api.store;import io.github.goodsaem.api.entity.HCode;import io.github.goodsaem.api.service.IHCodeService;import lombok.extern.slf4j.Slf4j;import org.apache.ignite.Ignite;import org.apache.ignite.IgniteCache;import org.apache.ignite.cache.CacheMode;import org.apache.ignite.cache.CacheRebalanceMode;import org.apache.ignite.configuration.CacheConfiguration;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.boot.context.event.ApplicationReadyEvent;import org.springframework.context.event.EventListener;import org.springframework.stereotype.Component;import java.util.List;import java.util.Map;@Slf4j@Componentpublic class DataStore &#123; @Autowired private IHCodeService ihCodeService; private final IgniteCache&lt;String, List&lt;HCode&gt;&gt; hCodeStore; DataStore(Ignite ignite) &#123; hCodeStore = ignite.getOrCreateCache(getCacheConfiguration(&quot;hCodeStore&quot;)); &#125; private CacheConfiguration getCacheConfiguration(String name) &#123; CacheConfiguration cacheConfiguration = new CacheConfiguration(); cacheConfiguration.setName(name); cacheConfiguration.setCacheMode(CacheMode.REPLICATED); cacheConfiguration.setRebalanceMode(CacheRebalanceMode.SYNC); cacheConfiguration.setStatisticsEnabled(true); return cacheConfiguration; &#125; @EventListener(ApplicationReadyEvent.class) public void setHCodeCache() &#123; hCodeStore.remove(&quot;hCodeCache&quot;); Map&lt;String,List&lt;HCode&gt;&gt; hCodeMap = ihCodeService.getHCodeMap(); if(hCodeMap != null) &#123; hCodeStore.putAll(hCodeMap); &#125; getHCodeCache(); &#125; public List&lt;HCode&gt; getHCodeCache() &#123; List&lt;HCode&gt; hCodes = hCodeStore.get(&quot;hCodeCache&quot;); log.info(&quot;ignite hCodes.size() ===&gt; &quot; + hCodes.size()); return hCodes; &#125;&#125; 6. HCodeController.java기존 db에서 데이터 불러오던 부분을 캐쉬에서 가져오도록 코드를 수정했습니다. line 20,25 123456789101112131415161718192021222324252627282930package io.github.goodsaem.api.controller.v1;import io.github.goodsaem.api.entity.HCode;import io.github.goodsaem.api.service.IHCodeService;import io.github.goodsaem.api.store.DataStore;import lombok.var;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Controller;import org.springframework.ui.Model;import org.springframework.web.bind.annotation.GetMapping;import java.util.List;@Controllerpublic class HCodeController &#123; @Autowired private IHCodeService ihCodeService; @Autowired private DataStore dataStore; @GetMapping(&quot;/hcodes&quot;) public String findHcodes(Model model) &#123; //var hcodes = (List&lt;HCode&gt;) ihCodeService.findAll(); var hcodes = (List&lt;HCode&gt;) dataStore.getHCodeCache(); model.addAttribute(&quot;hcodes&quot;,hcodes); return &quot;hcode&quot;; &#125;&#125; 7. Server operation and problem!이상태에서 서버를 시작해 보겠습니다. ::: spoiler 처음 시작 이부분 까지는 문제가 없습니다. 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293██████╗ ██████╗ ██████╗ ██████╗ ███████╗ █████╗ ███████╗███╗ ███╗██╔════╝ ██╔═══██╗██╔═══██╗██╔══██╗██╔════╝██╔══██╗██╔════╝████╗ ████║██║ ███╗██║ ██║██║ ██║██║ ██║███████╗███████║█████╗ ██╔████╔██║██║ ██║██║ ██║██║ ██║██║ ██║╚════██║██╔══██║██╔══╝ ██║╚██╔╝██║╚██████╔╝╚██████╔╝╚██████╔╝██████╔╝███████║██║ ██║███████╗██║ ╚═╝ ██║╚═════╝ ╚═════╝ ╚═════╝ ╚═════╝ ╚══════╝╚═╝ ╚═╝╚══════╝╚═╝ ╚═╝:: Spring Boot :: ver : 2.4.32021-03-18 00:01:07.833 INFO 48562 --- [ main] io.github.goodsaem.api.ApiApplication : Starting ApiApplication using Java 1.8.0_275 on goodsaemui-iMac.local with PID 48562 (/Users/goodsaem/goodsaem/api/build/classes/java/main started by goodsaem in /Users/goodsaem/goodsaem/api)2021-03-18 00:01:07.835 INFO 48562 --- [ main] io.github.goodsaem.api.ApiApplication : No active profile set, falling back to default profiles: default2021-03-18 00:01:08.228 INFO 48562 --- [ main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.2021-03-18 00:01:08.260 INFO 48562 --- [ main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 27 ms. Found 2 JPA repository interfaces.2021-03-18 00:01:08.539 INFO 48562 --- [ main] o.s.b.w.embedded.tomcat.TomcatWebServer : Tomcat initialized with port(s): 9090 (http)2021-03-18 00:01:08.544 INFO 48562 --- [ main] o.apache.catalina.core.StandardService : Starting service [Tomcat]2021-03-18 00:01:08.544 INFO 48562 --- [ main] org.apache.catalina.core.StandardEngine : Starting Servlet engine: [Apache Tomcat/9.0.43]2021-03-18 00:01:08.606 INFO 48562 --- [ main] o.a.c.c.C.[.[localhost].[/spring] : Initializing Spring embedded WebApplicationContext2021-03-18 00:01:08.606 INFO 48562 --- [ main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 744 ms2021-03-18 00:01:08.726 INFO 48562 --- [ main] o.hibernate.jpa.internal.util.LogHelper : HHH000204: Processing PersistenceUnitInfo [name: default]2021-03-18 00:01:08.752 INFO 48562 --- [ main] org.hibernate.Version : HHH000412: Hibernate ORM core version 5.4.28.Final2021-03-18 00:01:08.821 INFO 48562 --- [ main] o.hibernate.annotations.common.Version : HCANN000001: Hibernate Commons Annotations &#123;5.1.2.Final&#125;2021-03-18 00:01:08.875 INFO 48562 --- [ main] com.zaxxer.hikari.HikariDataSource : HikariPool-1 - Starting...2021-03-18 00:01:08.935 INFO 48562 --- [ main] com.zaxxer.hikari.HikariDataSource : HikariPool-1 - Start completed.2021-03-18 00:01:08.943 INFO 48562 --- [ main] org.hibernate.dialect.Dialect : HHH000400: Using dialect: org.hibernate.dialect.MariaDBDialect2021-03-18 00:01:09.232 INFO 48562 --- [ main] o.h.e.t.j.p.i.JtaPlatformInitiator : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]2021-03-18 00:01:09.238 INFO 48562 --- [ main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit &#x27;default&#x27;2021-03-18 00:01:09.399 WARN 48562 --- [ main] o.apache.ignite.internal.util.typedef.G : Ignite work directory is not provided, automatically resolved to: /Users/goodsaem/goodsaem/api/ignite/work2021-03-18 00:01:09.446 INFO 48562 --- [ main] o.a.i.i.IgniteKernal%GoodSaem-Grid :&gt;&gt;&gt; __________ ________________&gt;&gt;&gt; / _/ ___/ |/ / _/_ __/ __/&gt;&gt;&gt; _/ // (7 7 // / / / / _/&gt;&gt;&gt; /___/\\___/_/|_/___/ /_/ /___/&gt;&gt;&gt;&gt;&gt;&gt; ver. 2.9.1#20201203-sha1:adcce517&gt;&gt;&gt; 2020 Copyright(C) Apache Software Foundation&gt;&gt;&gt;&gt;&gt;&gt; Ignite documentation: http://ignite.apache.org[00:01:09] __________ ________________[00:01:09] / _/ ___/ |/ / _/_ __/ __/[00:01:09] _/ // (7 7 // / / / / _/[00:01:09] /___/\\___/_/|_/___/ /_/ /___/[00:01:09][00:01:09] ver. 2.9.1#20201203-sha1:adcce517[00:01:09] 2020 Copyright(C) Apache Software Foundation[00:01:09][00:01:09] Ignite documentation: http://ignite.apache.org[00:01:09][00:01:09] Quiet mode.[00:01:09] ^-- Logging by &#x27;Slf4jLogger [impl=Logger[o.a.i.i.IgniteKernal%GoodSaem-Grid], quiet=true]&#x27;[00:01:09] ^-- To see **FULL** console log here add -DIGNITE_QUIET=false or &quot;-v&quot; to ignite.&#123;sh|bat&#125;[00:01:09]2021-03-18 00:01:09.449 INFO 48562 --- [ main] o.a.i.i.IgniteKernal%GoodSaem-Grid : Config URL: n/a2021-03-18 00:01:09.459 INFO 48562 --- [ main] o.a.i.i.IgniteKernal%GoodSaem-Grid : IgniteConfiguration [igniteInstanceName=GoodSaem-Grid, pubPoolSize=8, svcPoolSize=8, callbackPoolSize=2, stripedPoolSize=8, sysPoolSize=8, mgmtPoolSize=2, dataStreamerPoolSize=1, utilityCachePoolSize=8, utilityCacheKeepAliveTime=60000, p2pPoolSize=2, qryPoolSize=2, buildIdxPoolSize=1, igniteHome=null, igniteWorkDir=/Users/goodsaem/goodsaem/api/ignite/work, mbeanSrv=com.sun.jmx.mbeanserver.JmxMBeanServer@1d56ce6a, nodeId=87bb368a-9f10-4b7d-92be-aa6a243b5a26, marsh=BinaryMarshaller [], marshLocJobs=false, daemon=false, p2pEnabled=false, netTimeout=5000, netCompressionLevel=1, sndRetryDelay=1000, sndRetryCnt=3, metricsHistSize=10000, metricsUpdateFreq=2000, metricsExpTime=9223372036854775807, discoSpi=TcpDiscoverySpi [addrRslvr=null, sockTimeout=0, ackTimeout=0, marsh=null, reconCnt=10, reconDelay=2000, maxAckTimeout=600000, soLinger=0, forceSrvMode=false, clientReconnectDisabled=false, internalLsnr=null, skipAddrsRandomization=false], segPlc=STOP, segResolveAttempts=2, waitForSegOnStart=true, allResolversPassReq=true, segChkFreq=10000, commSpi=TcpCommunicationSpi [connectGate=null, connPlc=org.apache.ignite.spi.communication.tcp.TcpCommunicationSpi$FirstConnectionPolicy@640d604, chConnPlc=null, enableForcibleNodeKill=false, enableTroubleshootingLog=false, locAddr=null, locHost=null, locPort=47100, locPortRange=100, shmemPort=-1, directBuf=true, directSndBuf=false, idleConnTimeout=600000, connTimeout=5000, maxConnTimeout=600000, reconCnt=10, sockSndBuf=32768, sockRcvBuf=32768, msgQueueLimit=0, slowClientQueueLimit=0, nioSrvr=null, shmemSrv=null, usePairedConnections=false, connectionsPerNode=1, tcpNoDelay=true, filterReachableAddresses=false, ackSndThreshold=32, unackedMsgsBufSize=0, sockWriteTimeout=2000, boundTcpPort=-1, boundTcpShmemPort=-1, selectorsCnt=4, selectorSpins=0, forceClientToSrvConnections=false, addrRslvr=null, ctxInitLatch=java.util.concurrent.CountDownLatch@62cbc478[Count = 1], stopping=false, metricsLsnr=null, connectionRequestor=null], evtSpi=org.apache.ignite.spi.eventstorage.NoopEventStorageSpi@5438fa43, colSpi=NoopCollisionSpi [], deploySpi=LocalDeploymentSpi [], indexingSpi=org.apache.ignite.spi.indexing.noop.NoopIndexingSpi@615db358, addrRslvr=null, encryptionSpi=org.apache.ignite.spi.encryption.noop.NoopEncryptionSpi@256bb5be, tracingSpi=org.apache.ignite.spi.tracing.NoopTracingSpi@5fef0c19, clientMode=false, rebalanceThreadPoolSize=1, rebalanceTimeout=10000, rebalanceBatchesPrefetchCnt=3, rebalanceThrottle=0, rebalanceBatchSize=524288, txCfg=TransactionConfiguration [txSerEnabled=false, dfltIsolation=REPEATABLE_READ, dfltConcurrency=PESSIMISTIC, dfltTxTimeout=0, txTimeoutOnPartitionMapExchange=0, deadlockTimeout=10000, pessimisticTxLogSize=0, pessimisticTxLogLinger=10000, tmLookupClsName=null, txManagerFactory=null, useJtaSync=false], cacheSanityCheckEnabled=true, discoStartupDelay=60000, deployMode=SHARED, p2pMissedCacheSize=100, locHost=null, timeSrvPortBase=31100, timeSrvPortRange=100, failureDetectionTimeout=10000, sysWorkerBlockedTimeout=null, clientFailureDetectionTimeout=30000, metricsLogFreq=60000, connectorCfg=ConnectorConfiguration [jettyPath=null, host=null, port=11211, noDelay=true, directBuf=false, sndBufSize=32768, rcvBufSize=32768, idleQryCurTimeout=600000, idleQryCurCheckFreq=60000, sndQueueLimit=0, selectorCnt=4, idleTimeout=7000, sslEnabled=false, sslClientAuth=false, sslCtxFactory=null, sslFactory=null, portRange=100, threadPoolSize=8, msgInterceptor=null], odbcCfg=null, warmupClos=null, atomicCfg=AtomicConfiguration [seqReserveSize=1000, cacheMode=PARTITIONED, backups=1, aff=null, grpName=null], classLdr=null, sslCtxFactory=null, platformCfg=null, binaryCfg=BinaryConfiguration [idMapper=null, nameMapper=null, serializer=null, compactFooter=false], memCfg=null, pstCfg=null, dsCfg=DataStorageConfiguration [sysRegionInitSize=41943040, sysRegionMaxSize=104857600, pageSize=0, concLvl=0, dfltDataRegConf=DataRegionConfiguration [name=default, maxSize=8589934592, initSize=268435456, swapPath=null, pageEvictionMode=DISABLED, evictionThreshold=0.9, emptyPagesPoolSize=100, metricsEnabled=false, metricsSubIntervalCount=5, metricsRateTimeInterval=60000, persistenceEnabled=false, checkpointPageBufSize=0, lazyMemoryAllocation=true], dataRegions=null, storagePath=null, checkpointFreq=180000, lockWaitTime=10000, checkpointThreads=4, checkpointWriteOrder=SEQUENTIAL, walHistSize=20, maxWalArchiveSize=1073741824, walSegments=10, walSegmentSize=67108864, walPath=db/wal, walArchivePath=db/wal/archive, metricsEnabled=false, walMode=LOG_ONLY, walTlbSize=131072, walBuffSize=0, walFlushFreq=2000, walFsyncDelay=1000, walRecordIterBuffSize=67108864, alwaysWriteFullPages=false, fileIOFactory=org.apache.ignite.internal.processors.cache.persistence.file.AsyncFileIOFactory@285a4fe3, metricsSubIntervalCnt=5, metricsRateTimeInterval=60000, walAutoArchiveAfterInactivity=-1, writeThrottlingEnabled=false, walCompactionEnabled=false, walCompactionLevel=1, checkpointReadLockTimeout=null, walPageCompression=DISABLED, walPageCompressionLevel=null], snapshotPath=snapshots, activeOnStart=true, activeOnStartPropSetFlag=false, autoActivation=true, autoActivationPropSetFlag=false, clusterStateOnStart=null, sqlConnCfg=null, cliConnCfg=ClientConnectorConfiguration [host=null, port=10800, portRange=100, sockSndBufSize=0, sockRcvBufSize=0, tcpNoDelay=true, maxOpenCursorsPerConn=128, threadPoolSize=8, idleTimeout=0, handshakeTimeout=10000, jdbcEnabled=true, odbcEnabled=true, thinCliEnabled=true, sslEnabled=false, useIgniteSslCtxFactory=true, sslClientAuth=false, sslCtxFactory=null, thinCliCfg=ThinClientConfiguration [maxActiveTxPerConn=100, maxActiveComputeTasksPerConn=0]], mvccVacuumThreadCnt=2, mvccVacuumFreq=5000, authEnabled=false, failureHnd=null, commFailureRslvr=null, sqlCfg=SqlConfiguration [longQryWarnTimeout=3000, dfltQryTimeout=0, sqlQryHistSize=1000, validationEnabled=false]]2021-03-18 00:01:09.459 INFO 48562 --- [ main] o.a.i.i.IgniteKernal%GoodSaem-Grid : Daemon mode: off[00:01:09] OS: Mac OS X 10.16 x86_642021-03-18 00:01:09.460 INFO 48562 --- [ main] o.a.i.i.IgniteKernal%GoodSaem-Grid : OS: Mac OS X 10.16 x86_642021-03-18 00:01:09.460 INFO 48562 --- [ main] o.a.i.i.IgniteKernal%GoodSaem-Grid : OS user: goodsaem2021-03-18 00:01:09.460 INFO 48562 --- [ main] o.a.i.i.IgniteKernal%GoodSaem-Grid : PID: 48562[00:01:09] VM information: OpenJDK Runtime Environment 1.8.0_275-b01 Amazon.com Inc. OpenJDK 64-Bit Server VM 25.275-b012021-03-18 00:01:09.460 INFO 48562 --- [ main] o.a.i.i.IgniteKernal%GoodSaem-Grid : Language runtime: Java Platform API Specification ver. 1.82021-03-18 00:01:09.460 INFO 48562 --- [ main] o.a.i.i.IgniteKernal%GoodSaem-Grid : VM information: OpenJDK Runtime Environment 1.8.0_275-b01 Amazon.com Inc. OpenJDK 64-Bit Server VM 25.275-b012021-03-18 00:01:09.461 INFO 48562 --- [ main] o.a.i.i.IgniteKernal%GoodSaem-Grid : VM total memory: 8.9GB2021-03-18 00:01:09.461 INFO 48562 --- [ main] o.a.i.i.IgniteKernal%GoodSaem-Grid : Remote Management [restart: off, REST: on, JMX (remote: on, port: &lt;n/a&gt;, auth: off, ssl: on)]2021-03-18 00:01:09.461 INFO 48562 --- [ main] o.a.i.i.IgniteKernal%GoodSaem-Grid : Logger: Slf4jLogger [impl=Logger[org.apache.ignite.internal.IgniteKernal%GoodSaem-Grid], quiet=true]2021-03-18 00:01:09.461 INFO 48562 --- [ main] o.a.i.i.IgniteKernal%GoodSaem-Grid : IGNITE_HOME=null2021-03-18 00:01:09.462 INFO 48562 --- [ main] o.a.i.i.IgniteKernal%GoodSaem-Grid : VM arguments: [-XX:TieredStopAtLevel=1, -Xverify:none, -Dspring.output.ansi.enabled=always, -javaagent:/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar=53083:/Applications/IntelliJ IDEA.app/Contents/bin, -Dcom.sun.management.jmxremote, -Dspring.jmx.enabled=true, -Dspring.liveBeansView.mbeanDomain, -Dspring.application.admin.enabled=true, -Dfile.encoding=UTF-8]2021-03-18 00:01:09.462 INFO 48562 --- [ main] o.a.i.i.IgniteKernal%GoodSaem-Grid : System cache&#x27;s DataRegion size is configured to 40 MB. Use DataStorageConfiguration.systemRegionInitialSize property to change the setting.2021-03-18 00:01:09.462 INFO 48562 --- [ main] o.a.i.i.IgniteKernal%GoodSaem-Grid : Configured caches [in &#x27;sysMemPlc&#x27; dataRegion: [&#x27;ignite-sys-cache&#x27;]]2021-03-18 00:01:09.462 WARN 48562 --- [ main] o.a.i.i.IgniteKernal%GoodSaem-Grid : Please set system property &#x27;-Djava.net.preferIPv4Stack=true&#x27; to avoid possible problems in mixed environments.[00:01:09] Please set system property &#x27;-Djava.net.preferIPv4Stack=true&#x27; to avoid possible problems in mixed environments.2021-03-18 00:01:09.464 WARN 48562 --- [%GoodSaem-Grid%] o.apache.ignite.internal.GridDiagnostic : JMX remote management is enabled but JMX port is either not set or invalid. Check system property &#x27;com.sun.management.jmxremote.port&#x27; to make sure it specifies valid TCP/IP port.[00:01:09] Configured plugins:2021-03-18 00:01:09.499 INFO 48562 --- [ main] o.a.i.i.p.plugin.IgnitePluginProcessor : Configured plugins:[00:01:09] ^-- None2021-03-18 00:01:09.499 INFO 48562 --- [ main] o.a.i.i.p.plugin.IgnitePluginProcessor : ^-- None[00:01:09]2021-03-18 00:01:09.499 INFO 48562 --- [ main] o.a.i.i.p.plugin.IgnitePluginProcessor :[00:01:09] Configured failure handler: [hnd=StopNodeOrHaltFailureHandler [tryStop=false, timeout=0, super=AbstractFailureHandler [ignoredFailureTypes=UnmodifiableSet [SYSTEM_WORKER_BLOCKED, SYSTEM_CRITICAL_OPERATION_TIMEOUT]]]]2021-03-18 00:01:09.502 INFO 48562 --- [ main] o.a.i.i.p.failure.FailureProcessor : Configured failure handler: [hnd=StopNodeOrHaltFailureHandler [tryStop=false, timeout=0, super=AbstractFailureHandler [ignoredFailureTypes=UnmodifiableSet [SYSTEM_WORKER_BLOCKED, SYSTEM_CRITICAL_OPERATION_TIMEOUT]]]]2021-03-18 00:01:09.614 INFO 48562 --- [ main] o.a.i.s.c.tcp.TcpCommunicationSpi : Successfully bound communication NIO server to TCP port [port=47100, locHost=0.0.0.0/0.0.0.0, selectorsCnt=4, selectorSpins=0, pairedConn=false]2021-03-18 00:01:09.617 WARN 48562 --- [ main] o.a.i.s.c.tcp.TcpCommunicationSpi : Message queue limit is set to 0 which may lead to potential OOMEs when running cache operations in FULL_ASYNC or PRIMARY_SYNC modes due to message queues growth on sender and receiver sides.[00:01:09] Message queue limit is set to 0 which may lead to potential OOMEs when running cache operations in FULL_ASYNC or PRIMARY_SYNC modes due to message queues growth on sender and receiver sides.2021-03-18 00:01:09.622 WARN 48562 --- [ main] o.a.i.s.c.noop.NoopCheckpointSpi : Checkpoints are disabled (to enable configure any GridCheckpointSpi implementation)2021-03-18 00:01:09.634 WARN 48562 --- [ main] o.a.i.i.m.c.GridCollisionManager : Collision resolution is disabled (all jobs will be activated upon arrival).[00:01:09] Security status [authentication=off, sandbox=off, tls/ssl=off]2021-03-18 00:01:09.635 INFO 48562 --- [ main] o.a.i.i.IgniteKernal%GoodSaem-Grid : Security status [authentication=off, sandbox=off, tls/ssl=off]2021-03-18 00:01:09.728 INFO 48562 --- [ main] o.a.i.spi.discovery.tcp.TcpDiscoverySpi : Successfully bound to TCP port [port=47500, localHost=0.0.0.0/0.0.0.0, locNodeId=87bb368a-9f10-4b7d-92be-aa6a243b5a26]2021-03-18 00:01:09.755 WARN 48562 --- [ main] i.p.c.p.IgniteCacheDatabaseSharedManager : DataRegionConfiguration.maxWalArchiveSize instead DataRegionConfiguration.walHistorySize would be used for removing old archive wal files2021-03-18 00:01:09.761 INFO 48562 --- [ main] i.p.c.p.IgniteCacheDatabaseSharedManager : Configured data regions initialized successfully [total=3]2021-03-18 00:01:09.768 INFO 48562 --- [ main] o.a.i.i.p.c.d.d.t.PartitionsEvictManager : Evict partition permits=22021-03-18 00:01:09.803 WARN 48562 --- [ main] o.a.i.i.p.query.h2.IgniteH2Indexing : Serialization of Java objects in H2 was enabled.2021-03-18 00:01:09.826 ERROR 48562 --- [ main] o.a.i.i.IgniteKernal%GoodSaem-Grid : Exception during start processors, node will be stopped and close connections :::아래와 같은 오류가 발생하는데 원일을 알수 없어 한참을 구글링 했습니다.::: danger error 1org.apache.ignite.internal.processors.query.IgniteSQLException: Failed to initialize DB connection:jdbc:h2:mem:87bb368a-9f10-4b7d-92be-aa6a243b5a26;LOCK_MODE=3;MULTI_THREADED=1;DB_CLOSE_ON_EXIT=FALSE;DEFAULT_LOCK_TIMEOUT=10000;FUNCTIONS_IN_SCHEMA=true;OPTIMIZE_REUSE_RESULTS=0;QUERY_CACHE_SIZE=0;MAX_OPERATION_MEMORY=0;BATCH_JOINS=1;ROW_FACTORY=&quot;org.apache.ignite.internal.processors.query.h2.opt.H2PlainRowFactory&quot;;DEFAULT_TABLE_ENGINE=org.apache.ignite.internal.processors.query.h2.opt.GridH2DefaultTableEngineorg.apache.ignite.internal.processors.query.IgniteSQLException:Failed to initialize DB connection: jdbc:h2:mem:87bb368a-9f10-4b7d-92be-aa6a243b5a26;LOCK_MODE=3;MULTI_THREADED=1;DB_CLOSE_ON_EXIT=FALSE;DEFAULT_LOCK_TIMEOUT=10000;FUNCTIONS_IN_SCHEMA=true;OPTIMIZE_REUSE_RESULTS=0;QUERY_CACHE_SIZE=0;MAX_OPERATION_MEMORY=0;BATCH_JOINS=1;ROW_FACTORY=&quot;org.apache.ignite.internal.processors.query.h2.opt.H2PlainRowFactory&quot;;DEFAULT_TABLE_ENGINE=org.apache.ignite.internal.processors.query.h2.opt.GridH2DefaultTableEngine ::: ::: spoiler 오류난부분 이하 생략at org.apache.ignite.internal.processors.query.h2.ConnectionManager.&lt;init&gt;(ConnectionManager.java:129) ~[ignite-indexing-2.9.1.jar:2.9.1] at org.apache.ignite.internal.processors.query.h2.IgniteH2Indexing.start(IgniteH2Indexing.java:2099) ~[ignite-indexing-2.9.1.jar:2.9.1] at org.apache.ignite.internal.processors.query.GridQueryProcessor.start(GridQueryProcessor.java:273) ~[ignite-core-2.9.1.jar:2.9.1] at org.apache.ignite.internal.IgniteKernal.startProcessor(IgniteKernal.java:1934) ~[ignite-core-2.9.1.jar:2.9.1] at org.apache.ignite.internal.IgniteKernal.start(IgniteKernal.java:1216) ~[ignite-core-2.9.1.jar:2.9.1] at org.apache.ignite.internal.IgnitionEx$IgniteNamedInstance.start0(IgnitionEx.java:2052) [ignite-core-2.9.1.jar:2.9.1] at org.apache.ignite.internal.IgnitionEx$IgniteNamedInstance.start(IgnitionEx.java:1698) [ignite-core-2.9.1.jar:2.9.1] at org.apache.ignite.internal.IgnitionEx.start0(IgnitionEx.java:1114) [ignite-core-2.9.1.jar:2.9.1] at org.apache.ignite.internal.IgnitionEx.start(IgnitionEx.java:634) [ignite-core-2.9.1.jar:2.9.1] at org.apache.ignite.internal.IgnitionEx.start(IgnitionEx.java:560) [ignite-core-2.9.1.jar:2.9.1] at org.apache.ignite.Ignition.start(Ignition.java:328) [ignite-core-2.9.1.jar:2.9.1] at io.github.goodsaem.api.config.IgniteConfig.ignite(IgniteConfig.java:51) [main/:na] at io.github.goodsaem.api.config.IgniteConfig$$EnhancerBySpringCGLIB$$60f465d7.CGLIB$ignite$0(&lt;generated&gt;) [main/:na] at io.github.goodsaem.api.config.IgniteConfig$$EnhancerBySpringCGLIB$$60f465d7$$FastClassBySpringCGLIB$$2894e447.invoke(&lt;generated&gt;) [main/:na] at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244) [spring-core-5.3.4.jar:5.3.4] at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:331) [spring-context-5.3.4.jar:5.3.4] at io.github.goodsaem.api.config.IgniteConfig$$EnhancerBySpringCGLIB$$60f465d7.ignite(&lt;generated&gt;) [main/:na] at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_275] at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_275] at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_275] at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_275] at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154) [spring-beans-5.3.4.jar:5.3.4] at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653) [spring-beans-5.3.4.jar:5.3.4] at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:638) [spring-beans-5.3.4.jar:5.3.4] at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1334) [spring-beans-5.3.4.jar:5.3.4] at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1177) [spring-beans-5.3.4.jar:5.3.4] at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:564) [spring-beans-5.3.4.jar:5.3.4] at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524) [spring-beans-5.3.4.jar:5.3.4] at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) [spring-beans-5.3.4.jar:5.3.4] at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.4.jar:5.3.4] at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) [spring-beans-5.3.4.jar:5.3.4] at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) [spring-beans-5.3.4.jar:5.3.4] at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276) ~[spring-beans-5.3.4.jar:5.3.4] at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1380) ~[spring-beans-5.3.4.jar:5.3.4] at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300) ~[spring-beans-5.3.4.jar:5.3.4] at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887) [spring-beans-5.3.4.jar:5.3.4] at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791) [spring-beans-5.3.4.jar:5.3.4] at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229) [spring-beans-5.3.4.jar:5.3.4] at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1354) [spring-beans-5.3.4.jar:5.3.4] at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1204) [spring-beans-5.3.4.jar:5.3.4] at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:564) [spring-beans-5.3.4.jar:5.3.4] at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524) [spring-beans-5.3.4.jar:5.3.4] at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) [spring-beans-5.3.4.jar:5.3.4] at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.4.jar:5.3.4] at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) [spring-beans-5.3.4.jar:5.3.4] at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) [spring-beans-5.3.4.jar:5.3.4] at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276) ~[spring-beans-5.3.4.jar:5.3.4] at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1380) ~[spring-beans-5.3.4.jar:5.3.4] at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300) ~[spring-beans-5.3.4.jar:5.3.4] at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:657) ~[spring-beans-5.3.4.jar:5.3.4] at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640) ~[spring-beans-5.3.4.jar:5.3.4] at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119) ~[spring-beans-5.3.4.jar:5.3.4] at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399) ~[spring-beans-5.3.4.jar:5.3.4] at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1413) [spring-beans-5.3.4.jar:5.3.4] at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601) [spring-beans-5.3.4.jar:5.3.4] at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524) [spring-beans-5.3.4.jar:5.3.4] at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) [spring-beans-5.3.4.jar:5.3.4] at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.4.jar:5.3.4] at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) [spring-beans-5.3.4.jar:5.3.4] at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) [spring-beans-5.3.4.jar:5.3.4] at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:944) ~[spring-beans-5.3.4.jar:5.3.4] at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:917) ~[spring-context-5.3.4.jar:5.3.4] at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:582) ~[spring-context-5.3.4.jar:5.3.4] at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:144) ~[spring-boot-2.4.3.jar:2.4.3] at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:767) ~[spring-boot-2.4.3.jar:2.4.3] at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:759) ~[spring-boot-2.4.3.jar:2.4.3] at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:426) ~[spring-boot-2.4.3.jar:2.4.3] at org.springframework.boot.SpringApplication.run(SpringApplication.java:326) ~[spring-boot-2.4.3.jar:2.4.3] at org.springframework.boot.SpringApplication.run(SpringApplication.java:1311) ~[spring-boot-2.4.3.jar:2.4.3] at org.springframework.boot.SpringApplication.run(SpringApplication.java:1300) ~[spring-boot-2.4.3.jar:2.4.3] at io.github.goodsaem.api.ApiApplication.main(ApiApplication.java:9) ~[main/:na]Caused by: org.h2.jdbc.JdbcSQLNonTransientConnectionException: Unsupported connection setting &quot;MULTI_THREADED&quot; [90113-200] at org.h2.message.DbException.getJdbcSQLException(DbException.java:622) ~[h2-1.4.200.jar:1.4.200] at org.h2.message.DbException.getJdbcSQLException(DbException.java:429) ~[h2-1.4.200.jar:1.4.200] at org.h2.message.DbException.get(DbException.java:205) ~[h2-1.4.200.jar:1.4.200] at org.h2.message.DbException.get(DbException.java:181) ~[h2-1.4.200.jar:1.4.200] at org.h2.engine.ConnectionInfo.readSettingsFromURL(ConnectionInfo.java:269) ~[h2-1.4.200.jar:1.4.200] at org.h2.engine.ConnectionInfo.&lt;init&gt;(ConnectionInfo.java:78) ~[h2-1.4.200.jar:1.4.200] at org.h2.jdbc.JdbcConnection.&lt;init&gt;(JdbcConnection.java:152) ~[h2-1.4.200.jar:1.4.200] at org.h2.Driver.connect(Driver.java:69) ~[h2-1.4.200.jar:1.4.200] at java.sql.DriverManager.getConnection(DriverManager.java:664) ~[na:1.8.0_275] at java.sql.DriverManager.getConnection(DriverManager.java:270) ~[na:1.8.0_275] at org.apache.ignite.internal.processors.query.h2.ConnectionManager.&lt;init&gt;(ConnectionManager.java:118) ~[ignite-indexing-2.9.1.jar:2.9.1] ... 70 common frames omitted2021-03-18 00:01:09.828 ERROR 48562 --- [ main] o.a.i.i.IgniteKernal%GoodSaem-Grid : Got exception while starting (will rollback startup routine).org.apache.ignite.internal.processors.query.IgniteSQLException: Failed to initialize DB connection: jdbc:h2:mem:87bb368a-9f10-4b7d-92be-aa6a243b5a26;LOCK_MODE=3;MULTI_THREADED=1;DB_CLOSE_ON_EXIT=FALSE;DEFAULT_LOCK_TIMEOUT=10000;FUNCTIONS_IN_SCHEMA=true;OPTIMIZE_REUSE_RESULTS=0;QUERY_CACHE_SIZE=0;MAX_OPERATION_MEMORY=0;BATCH_JOINS=1;ROW_FACTORY=&quot;org.apache.ignite.internal.processors.query.h2.opt.H2PlainRowFactory&quot;;DEFAULT_TABLE_ENGINE=org.apache.ignite.internal.processors.query.h2.opt.GridH2DefaultTableEngine at org.apache.ignite.internal.processors.query.h2.ConnectionManager.&lt;init&gt;(ConnectionManager.java:129) ~[ignite-indexing-2.9.1.jar:2.9.1] at org.apache.ignite.internal.processors.query.h2.IgniteH2Indexing.start(IgniteH2Indexing.java:2099) ~[ignite-indexing-2.9.1.jar:2.9.1] at org.apache.ignite.internal.processors.query.GridQueryProcessor.start(GridQueryProcessor.java:273) ~[ignite-core-2.9.1.jar:2.9.1] at org.apache.ignite.internal.IgniteKernal.startProcessor(IgniteKernal.java:1934) ~[ignite-core-2.9.1.jar:2.9.1] at org.apache.ignite.internal.IgniteKernal.start(IgniteKernal.java:1216) ~[ignite-core-2.9.1.jar:2.9.1] at org.apache.ignite.internal.IgnitionEx$IgniteNamedInstance.start0(IgnitionEx.java:2052) [ignite-core-2.9.1.jar:2.9.1] at org.apache.ignite.internal.IgnitionEx$IgniteNamedInstance.start(IgnitionEx.java:1698) [ignite-core-2.9.1.jar:2.9.1] at org.apache.ignite.internal.IgnitionEx.start0(IgnitionEx.java:1114) [ignite-core-2.9.1.jar:2.9.1] at org.apache.ignite.internal.IgnitionEx.start(IgnitionEx.java:634) [ignite-core-2.9.1.jar:2.9.1] at org.apache.ignite.internal.IgnitionEx.start(IgnitionEx.java:560) [ignite-core-2.9.1.jar:2.9.1] at org.apache.ignite.Ignition.start(Ignition.java:328) [ignite-core-2.9.1.jar:2.9.1] at io.github.goodsaem.api.config.IgniteConfig.ignite(IgniteConfig.java:51) [main/:na] at io.github.goodsaem.api.config.IgniteConfig$$EnhancerBySpringCGLIB$$60f465d7.CGLIB$ignite$0(&lt;generated&gt;) [main/:na] at io.github.goodsaem.api.config.IgniteConfig$$EnhancerBySpringCGLIB$$60f465d7$$FastClassBySpringCGLIB$$2894e447.invoke(&lt;generated&gt;) [main/:na] at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244) [spring-core-5.3.4.jar:5.3.4] at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:331) [spring-context-5.3.4.jar:5.3.4] at io.github.goodsaem.api.config.IgniteConfig$$EnhancerBySpringCGLIB$$60f465d7.ignite(&lt;generated&gt;) [main/:na] at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_275] at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_275] at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_275] at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_275] at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154) [spring-beans-5.3.4.jar:5.3.4] at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653) [spring-beans-5.3.4.jar:5.3.4] at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:638) [spring-beans-5.3.4.jar:5.3.4] at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1334) [spring-beans-5.3.4.jar:5.3.4] at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1177) [spring-beans-5.3.4.jar:5.3.4] at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:564) [spring-beans-5.3.4.jar:5.3.4] at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524) [spring-beans-5.3.4.jar:5.3.4] at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) [spring-beans-5.3.4.jar:5.3.4] at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.4.jar:5.3.4] at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) [spring-beans-5.3.4.jar:5.3.4] at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) [spring-beans-5.3.4.jar:5.3.4] at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276) ~[spring-beans-5.3.4.jar:5.3.4] at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1380) ~[spring-beans-5.3.4.jar:5.3.4] at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300) ~[spring-beans-5.3.4.jar:5.3.4] at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887) [spring-beans-5.3.4.jar:5.3.4] at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791) [spring-beans-5.3.4.jar:5.3.4] at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229) [spring-beans-5.3.4.jar:5.3.4] at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1354) [spring-beans-5.3.4.jar:5.3.4] at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1204) [spring-beans-5.3.4.jar:5.3.4] at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:564) [spring-beans-5.3.4.jar:5.3.4] at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524) [spring-beans-5.3.4.jar:5.3.4] at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) [spring-beans-5.3.4.jar:5.3.4] at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.4.jar:5.3.4] at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) [spring-beans-5.3.4.jar:5.3.4] at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) [spring-beans-5.3.4.jar:5.3.4] at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276) ~[spring-beans-5.3.4.jar:5.3.4] at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1380) ~[spring-beans-5.3.4.jar:5.3.4] at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300) ~[spring-beans-5.3.4.jar:5.3.4] at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:657) ~[spring-beans-5.3.4.jar:5.3.4] at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640) ~[spring-beans-5.3.4.jar:5.3.4] at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119) ~[spring-beans-5.3.4.jar:5.3.4] at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399) ~[spring-beans-5.3.4.jar:5.3.4] at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1413) [spring-beans-5.3.4.jar:5.3.4] at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601) [spring-beans-5.3.4.jar:5.3.4] at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524) [spring-beans-5.3.4.jar:5.3.4] at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) [spring-beans-5.3.4.jar:5.3.4] at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.4.jar:5.3.4] at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) [spring-beans-5.3.4.jar:5.3.4] at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) [spring-beans-5.3.4.jar:5.3.4] at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:944) ~[spring-beans-5.3.4.jar:5.3.4] at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:917) ~[spring-context-5.3.4.jar:5.3.4] at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:582) ~[spring-context-5.3.4.jar:5.3.4] at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:144) ~[spring-boot-2.4.3.jar:2.4.3] at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:767) ~[spring-boot-2.4.3.jar:2.4.3] at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:759) ~[spring-boot-2.4.3.jar:2.4.3] at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:426) ~[spring-boot-2.4.3.jar:2.4.3] at org.springframework.boot.SpringApplication.run(SpringApplication.java:326) ~[spring-boot-2.4.3.jar:2.4.3] at org.springframework.boot.SpringApplication.run(SpringApplication.java:1311) ~[spring-boot-2.4.3.jar:2.4.3] at org.springframework.boot.SpringApplication.run(SpringApplication.java:1300) ~[spring-boot-2.4.3.jar:2.4.3] at io.github.goodsaem.api.ApiApplication.main(ApiApplication.java:9) ~[main/:na]Caused by: org.h2.jdbc.JdbcSQLNonTransientConnectionException: Unsupported connection setting &quot;MULTI_THREADED&quot; [90113-200] at org.h2.message.DbException.getJdbcSQLException(DbException.java:622) ~[h2-1.4.200.jar:1.4.200] at org.h2.message.DbException.getJdbcSQLException(DbException.java:429) ~[h2-1.4.200.jar:1.4.200] at org.h2.message.DbException.get(DbException.java:205) ~[h2-1.4.200.jar:1.4.200] at org.h2.message.DbException.get(DbException.java:181) ~[h2-1.4.200.jar:1.4.200] at org.h2.engine.ConnectionInfo.readSettingsFromURL(ConnectionInfo.java:269) ~[h2-1.4.200.jar:1.4.200] at org.h2.engine.ConnectionInfo.&lt;init&gt;(ConnectionInfo.java:78) ~[h2-1.4.200.jar:1.4.200] at org.h2.jdbc.JdbcConnection.&lt;init&gt;(JdbcConnection.java:152) ~[h2-1.4.200.jar:1.4.200] at org.h2.Driver.connect(Driver.java:69) ~[h2-1.4.200.jar:1.4.200] at java.sql.DriverManager.getConnection(DriverManager.java:664) ~[na:1.8.0_275] at java.sql.DriverManager.getConnection(DriverManager.java:270) ~[na:1.8.0_275] at org.apache.ignite.internal.processors.query.h2.ConnectionManager.&lt;init&gt;(ConnectionManager.java:118) ~[ignite-indexing-2.9.1.jar:2.9.1] ... 70 common frames omitted2021-03-18 00:01:09.828 WARN 48562 --- [ main] o.a.i.i.IgniteKernal%GoodSaem-Grid : Attempt to stop starting grid. This operation cannot be guaranteed to be successful.2021-03-18 00:01:09.831 ERROR 48562 --- [ main] o.a.i.i.IgniteKernal%GoodSaem-Grid : Failed to stop component (ignoring): GridProcessorAdapter []java.lang.NullPointerException: null at org.apache.ignite.internal.processors.query.h2.IgniteH2Indexing.stop(IgniteH2Indexing.java:2314) ~[ignite-indexing-2.9.1.jar:2.9.1] at org.apache.ignite.internal.processors.query.GridQueryProcessor.stop(GridQueryProcessor.java:317) ~[ignite-core-2.9.1.jar:2.9.1] at org.apache.ignite.internal.IgniteKernal.stop0(IgniteKernal.java:2577) [ignite-core-2.9.1.jar:2.9.1] at org.apache.ignite.internal.IgniteKernal.stop(IgniteKernal.java:2455) [ignite-core-2.9.1.jar:2.9.1] at org.apache.ignite.internal.IgniteKernal.start(IgniteKernal.java:1400) [ignite-core-2.9.1.jar:2.9.1] at org.apache.ignite.internal.IgnitionEx$IgniteNamedInstance.start0(IgnitionEx.java:2052) [ignite-core-2.9.1.jar:2.9.1] at org.apache.ignite.internal.IgnitionEx$IgniteNamedInstance.start(IgnitionEx.java:1698) [ignite-core-2.9.1.jar:2.9.1] at org.apache.ignite.internal.IgnitionEx.start0(IgnitionEx.java:1114) [ignite-core-2.9.1.jar:2.9.1] at org.apache.ignite.internal.IgnitionEx.start(IgnitionEx.java:634) [ignite-core-2.9.1.jar:2.9.1] at org.apache.ignite.internal.IgnitionEx.start(IgnitionEx.java:560) [ignite-core-2.9.1.jar:2.9.1] at org.apache.ignite.Ignition.start(Ignition.java:328) [ignite-core-2.9.1.jar:2.9.1] at io.github.goodsaem.api.config.IgniteConfig.ignite(IgniteConfig.java:51) [main/:na] at io.github.goodsaem.api.config.IgniteConfig$$EnhancerBySpringCGLIB$$60f465d7.CGLIB$ignite$0(&lt;generated&gt;) [main/:na] at io.github.goodsaem.api.config.IgniteConfig$$EnhancerBySpringCGLIB$$60f465d7$$FastClassBySpringCGLIB$$2894e447.invoke(&lt;generated&gt;) [main/:na] at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244) [spring-core-5.3.4.jar:5.3.4] at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:331) [spring-context-5.3.4.jar:5.3.4] at io.github.goodsaem.api.config.IgniteConfig$$EnhancerBySpringCGLIB$$60f465d7.ignite(&lt;generated&gt;) [main/:na] at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_275] at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_275] at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_275] at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_275] at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154) [spring-beans-5.3.4.jar:5.3.4] at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653) [spring-beans-5.3.4.jar:5.3.4] at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:638) [spring-beans-5.3.4.jar:5.3.4] at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1334) [spring-beans-5.3.4.jar:5.3.4] at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1177) [spring-beans-5.3.4.jar:5.3.4] at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:564) [spring-beans-5.3.4.jar:5.3.4] at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524) [spring-beans-5.3.4.jar:5.3.4] at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) [spring-beans-5.3.4.jar:5.3.4] at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.4.jar:5.3.4] at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) [spring-beans-5.3.4.jar:5.3.4] at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) [spring-beans-5.3.4.jar:5.3.4] at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276) ~[spring-beans-5.3.4.jar:5.3.4] at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1380) ~[spring-beans-5.3.4.jar:5.3.4] at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300) ~[spring-beans-5.3.4.jar:5.3.4] at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887) [spring-beans-5.3.4.jar:5.3.4] at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791) [spring-beans-5.3.4.jar:5.3.4] at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229) [spring-beans-5.3.4.jar:5.3.4] at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1354) [spring-beans-5.3.4.jar:5.3.4] at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1204) [spring-beans-5.3.4.jar:5.3.4] at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:564) [spring-beans-5.3.4.jar:5.3.4] at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524) [spring-beans-5.3.4.jar:5.3.4] at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) [spring-beans-5.3.4.jar:5.3.4] at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.4.jar:5.3.4] at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) [spring-beans-5.3.4.jar:5.3.4] at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) [spring-beans-5.3.4.jar:5.3.4] at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276) ~[spring-beans-5.3.4.jar:5.3.4] at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1380) ~[spring-beans-5.3.4.jar:5.3.4] at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300) ~[spring-beans-5.3.4.jar:5.3.4] at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:657) ~[spring-beans-5.3.4.jar:5.3.4] at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640) ~[spring-beans-5.3.4.jar:5.3.4] at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119) ~[spring-beans-5.3.4.jar:5.3.4] at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399) ~[spring-beans-5.3.4.jar:5.3.4] at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1413) [spring-beans-5.3.4.jar:5.3.4] at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601) [spring-beans-5.3.4.jar:5.3.4] at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524) [spring-beans-5.3.4.jar:5.3.4] at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) [spring-beans-5.3.4.jar:5.3.4] at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.4.jar:5.3.4] at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) [spring-beans-5.3.4.jar:5.3.4] at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) [spring-beans-5.3.4.jar:5.3.4] at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:944) ~[spring-beans-5.3.4.jar:5.3.4] at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:917) ~[spring-context-5.3.4.jar:5.3.4] at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:582) ~[spring-context-5.3.4.jar:5.3.4] at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:144) ~[spring-boot-2.4.3.jar:2.4.3] at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:767) ~[spring-boot-2.4.3.jar:2.4.3] at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:759) ~[spring-boot-2.4.3.jar:2.4.3] at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:426) ~[spring-boot-2.4.3.jar:2.4.3] at org.springframework.boot.SpringApplication.run(SpringApplication.java:326) ~[spring-boot-2.4.3.jar:2.4.3] at org.springframework.boot.SpringApplication.run(SpringApplication.java:1311) ~[spring-boot-2.4.3.jar:2.4.3] at org.springframework.boot.SpringApplication.run(SpringApplication.java:1300) ~[spring-boot-2.4.3.jar:2.4.3] at io.github.goodsaem.api.ApiApplication.main(ApiApplication.java:9) ~[main/:na]2021-03-18 00:01:09.837 INFO 48562 --- [ main] o.a.i.i.IgniteKernal%GoodSaem-Grid :&gt;&gt;&gt; Ignite ver. 2.9.1#20201203-sha1:adcce517ce542fdaca954bce399e7a1940630403 stopped with ERRORS&gt;&gt;&gt; +------------------------------------------------------------------------------------------+&gt;&gt;&gt; Ignite instance name: GoodSaem-Grid&gt;&gt;&gt; Grid uptime: 00:00:01.185&gt;&gt;&gt; See log above for detailed error message.&gt;&gt;&gt; Note that some errors during stop can prevent grid from&gt;&gt;&gt; maintaining correct topology since this node may have&gt;&gt;&gt; not exited grid properly.2021-03-18 00:01:09.839 WARN 48562 --- [ main] ConfigServletWebServerApplicationContext : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name &#x27;HCodeController&#x27;: Unsatisfied dependency expressed through field &#x27;dataStore&#x27;; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name &#x27;dataStore&#x27; defined in file [/Users/goodsaem/goodsaem/api/build/classes/java/main/io/github/goodsaem/api/store/DataStore.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name &#x27;ignite&#x27; defined in class path resource [io/github/goodsaem/api/config/IgniteConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ignite.Ignite]: Factory method &#x27;ignite&#x27; threw exception; nested exception is class org.apache.ignite.internal.processors.query.IgniteSQLException: Failed to initialize DB connection: jdbc:h2:mem:87bb368a-9f10-4b7d-92be-aa6a243b5a26;LOCK_MODE=3;MULTI_THREADED=1;DB_CLOSE_ON_EXIT=FALSE;DEFAULT_LOCK_TIMEOUT=10000;FUNCTIONS_IN_SCHEMA=true;OPTIMIZE_REUSE_RESULTS=0;QUERY_CACHE_SIZE=0;MAX_OPERATION_MEMORY=0;BATCH_JOINS=1;ROW_FACTORY=&quot;org.apache.ignite.internal.processors.query.h2.opt.H2PlainRowFactory&quot;;DEFAULT_TABLE_ENGINE=org.apache.ignite.internal.processors.query.h2.opt.GridH2DefaultTableEngine2021-03-18 00:01:09.839 INFO 48562 --- [ main] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit &#x27;default&#x27;2021-03-18 00:01:09.840 INFO 48562 --- [ main] com.zaxxer.hikari.HikariDataSource : HikariPool-1 - Shutdown initiated...[00:01:09] Ignite node stopped wih ERRORS [name=GoodSaem-Grid, uptime=00:00:01.185]2021-03-18 00:01:09.842 INFO 48562 --- [ main] com.zaxxer.hikari.HikariDataSource : HikariPool-1 - Shutdown completed.2021-03-18 00:01:09.843 INFO 48562 --- [ main] o.apache.catalina.core.StandardService : Stopping service [Tomcat]2021-03-18 00:01:09.850 INFO 48562 --- [ main] ConditionEvaluationReportLoggingListener :Error starting ApplicationContext. To display the conditions report re-run your application with &#x27;debug&#x27; enabled.2021-03-18 00:01:09.862 ERROR 48562 --- [ main] o.s.boot.SpringApplication : Application run failedorg.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name &#x27;HCodeController&#x27;: Unsatisfied dependency expressed through field &#x27;dataStore&#x27;; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name &#x27;dataStore&#x27; defined in file [/Users/goodsaem/goodsaem/api/build/classes/java/main/io/github/goodsaem/api/store/DataStore.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name &#x27;ignite&#x27; defined in class path resource [io/github/goodsaem/api/config/IgniteConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ignite.Ignite]: Factory method &#x27;ignite&#x27; threw exception; nested exception is class org.apache.ignite.internal.processors.query.IgniteSQLException: Failed to initialize DB connection: jdbc:h2:mem:87bb368a-9f10-4b7d-92be-aa6a243b5a26;LOCK_MODE=3;MULTI_THREADED=1;DB_CLOSE_ON_EXIT=FALSE;DEFAULT_LOCK_TIMEOUT=10000;FUNCTIONS_IN_SCHEMA=true;OPTIMIZE_REUSE_RESULTS=0;QUERY_CACHE_SIZE=0;MAX_OPERATION_MEMORY=0;BATCH_JOINS=1;ROW_FACTORY=&quot;org.apache.ignite.internal.processors.query.h2.opt.H2PlainRowFactory&quot;;DEFAULT_TABLE_ENGINE=org.apache.ignite.internal.processors.query.h2.opt.GridH2DefaultTableEngine at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:660) ~[spring-beans-5.3.4.jar:5.3.4] at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640) ~[spring-beans-5.3.4.jar:5.3.4] at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119) ~[spring-beans-5.3.4.jar:5.3.4] at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399) ~[spring-beans-5.3.4.jar:5.3.4] at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1413) ~[spring-beans-5.3.4.jar:5.3.4] at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601) ~[spring-beans-5.3.4.jar:5.3.4] at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524) ~[spring-beans-5.3.4.jar:5.3.4] at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.4.jar:5.3.4] at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.4.jar:5.3.4] at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.4.jar:5.3.4] at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.4.jar:5.3.4] at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:944) ~[spring-beans-5.3.4.jar:5.3.4] at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:917) ~[spring-context-5.3.4.jar:5.3.4] at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:582) ~[spring-context-5.3.4.jar:5.3.4] at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:144) ~[spring-boot-2.4.3.jar:2.4.3] at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:767) [spring-boot-2.4.3.jar:2.4.3] at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:759) [spring-boot-2.4.3.jar:2.4.3] at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:426) [spring-boot-2.4.3.jar:2.4.3] at org.springframework.boot.SpringApplication.run(SpringApplication.java:326) [spring-boot-2.4.3.jar:2.4.3] at org.springframework.boot.SpringApplication.run(SpringApplication.java:1311) [spring-boot-2.4.3.jar:2.4.3] at org.springframework.boot.SpringApplication.run(SpringApplication.java:1300) [spring-boot-2.4.3.jar:2.4.3] at io.github.goodsaem.api.ApiApplication.main(ApiApplication.java:9) [main/:na]Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name &#x27;dataStore&#x27; defined in file [/Users/goodsaem/goodsaem/api/build/classes/java/main/io/github/goodsaem/api/store/DataStore.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name &#x27;ignite&#x27; defined in class path resource [io/github/goodsaem/api/config/IgniteConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ignite.Ignite]: Factory method &#x27;ignite&#x27; threw exception; nested exception is class org.apache.ignite.internal.processors.query.IgniteSQLException: Failed to initialize DB connection: jdbc:h2:mem:87bb368a-9f10-4b7d-92be-aa6a243b5a26;LOCK_MODE=3;MULTI_THREADED=1;DB_CLOSE_ON_EXIT=FALSE;DEFAULT_LOCK_TIMEOUT=10000;FUNCTIONS_IN_SCHEMA=true;OPTIMIZE_REUSE_RESULTS=0;QUERY_CACHE_SIZE=0;MAX_OPERATION_MEMORY=0;BATCH_JOINS=1;ROW_FACTORY=&quot;org.apache.ignite.internal.processors.query.h2.opt.H2PlainRowFactory&quot;;DEFAULT_TABLE_ENGINE=org.apache.ignite.internal.processors.query.h2.opt.GridH2DefaultTableEngine at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800) ~[spring-beans-5.3.4.jar:5.3.4] at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229) ~[spring-beans-5.3.4.jar:5.3.4] at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1354) ~[spring-beans-5.3.4.jar:5.3.4] at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1204) ~[spring-beans-5.3.4.jar:5.3.4] at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:564) ~[spring-beans-5.3.4.jar:5.3.4] at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524) ~[spring-beans-5.3.4.jar:5.3.4] at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.4.jar:5.3.4] at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.4.jar:5.3.4] at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.4.jar:5.3.4] at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.4.jar:5.3.4] at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276) ~[spring-beans-5.3.4.jar:5.3.4] at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1380) ~[spring-beans-5.3.4.jar:5.3.4] at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300) ~[spring-beans-5.3.4.jar:5.3.4] at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:657) ~[spring-beans-5.3.4.jar:5.3.4] ... 21 common frames omittedCaused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name &#x27;ignite&#x27; defined in class path resource [io/github/goodsaem/api/config/IgniteConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ignite.Ignite]: Factory method &#x27;ignite&#x27; threw exception; nested exception is class org.apache.ignite.internal.processors.query.IgniteSQLException: Failed to initialize DB connection: jdbc:h2:mem:87bb368a-9f10-4b7d-92be-aa6a243b5a26;LOCK_MODE=3;MULTI_THREADED=1;DB_CLOSE_ON_EXIT=FALSE;DEFAULT_LOCK_TIMEOUT=10000;FUNCTIONS_IN_SCHEMA=true;OPTIMIZE_REUSE_RESULTS=0;QUERY_CACHE_SIZE=0;MAX_OPERATION_MEMORY=0;BATCH_JOINS=1;ROW_FACTORY=&quot;org.apache.ignite.internal.processors.query.h2.opt.H2PlainRowFactory&quot;;DEFAULT_TABLE_ENGINE=org.apache.ignite.internal.processors.query.h2.opt.GridH2DefaultTableEngine at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:658) ~[spring-beans-5.3.4.jar:5.3.4] at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:638) ~[spring-beans-5.3.4.jar:5.3.4] at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1334) ~[spring-beans-5.3.4.jar:5.3.4] at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1177) ~[spring-beans-5.3.4.jar:5.3.4] at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:564) ~[spring-beans-5.3.4.jar:5.3.4] at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524) ~[spring-beans-5.3.4.jar:5.3.4] at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.4.jar:5.3.4] at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.4.jar:5.3.4] at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.4.jar:5.3.4] at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.4.jar:5.3.4] at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276) ~[spring-beans-5.3.4.jar:5.3.4] at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1380) ~[spring-beans-5.3.4.jar:5.3.4] at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300) ~[spring-beans-5.3.4.jar:5.3.4] at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887) ~[spring-beans-5.3.4.jar:5.3.4] at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791) ~[spring-beans-5.3.4.jar:5.3.4] ... 34 common frames omittedCaused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ignite.Ignite]: Factory method &#x27;ignite&#x27; threw exception; nested exception is class org.apache.ignite.internal.processors.query.IgniteSQLException: Failed to initialize DB connection: jdbc:h2:mem:87bb368a-9f10-4b7d-92be-aa6a243b5a26;LOCK_MODE=3;MULTI_THREADED=1;DB_CLOSE_ON_EXIT=FALSE;DEFAULT_LOCK_TIMEOUT=10000;FUNCTIONS_IN_SCHEMA=true;OPTIMIZE_REUSE_RESULTS=0;QUERY_CACHE_SIZE=0;MAX_OPERATION_MEMORY=0;BATCH_JOINS=1;ROW_FACTORY=&quot;org.apache.ignite.internal.processors.query.h2.opt.H2PlainRowFactory&quot;;DEFAULT_TABLE_ENGINE=org.apache.ignite.internal.processors.query.h2.opt.GridH2DefaultTableEngine at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185) ~[spring-beans-5.3.4.jar:5.3.4] at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653) ~[spring-beans-5.3.4.jar:5.3.4] ... 48 common frames omittedCaused by: org.apache.ignite.internal.processors.query.IgniteSQLException: Failed to initialize DB connection: jdbc:h2:mem:87bb368a-9f10-4b7d-92be-aa6a243b5a26;LOCK_MODE=3;MULTI_THREADED=1;DB_CLOSE_ON_EXIT=FALSE;DEFAULT_LOCK_TIMEOUT=10000;FUNCTIONS_IN_SCHEMA=true;OPTIMIZE_REUSE_RESULTS=0;QUERY_CACHE_SIZE=0;MAX_OPERATION_MEMORY=0;BATCH_JOINS=1;ROW_FACTORY=&quot;org.apache.ignite.internal.processors.query.h2.opt.H2PlainRowFactory&quot;;DEFAULT_TABLE_ENGINE=org.apache.ignite.internal.processors.query.h2.opt.GridH2DefaultTableEngine at org.apache.ignite.internal.processors.query.h2.ConnectionManager.&lt;init&gt;(ConnectionManager.java:129) ~[ignite-indexing-2.9.1.jar:2.9.1] at org.apache.ignite.internal.processors.query.h2.IgniteH2Indexing.start(IgniteH2Indexing.java:2099) ~[ignite-indexing-2.9.1.jar:2.9.1] at org.apache.ignite.internal.processors.query.GridQueryProcessor.start(GridQueryProcessor.java:273) ~[ignite-core-2.9.1.jar:2.9.1] at org.apache.ignite.internal.IgniteKernal.startProcessor(IgniteKernal.java:1934) ~[ignite-core-2.9.1.jar:2.9.1] at org.apache.ignite.internal.IgniteKernal.start(IgniteKernal.java:1216) ~[ignite-core-2.9.1.jar:2.9.1] at org.apache.ignite.internal.IgnitionEx$IgniteNamedInstance.start0(IgnitionEx.java:2052) ~[ignite-core-2.9.1.jar:2.9.1] at org.apache.ignite.internal.IgnitionEx$IgniteNamedInstance.start(IgnitionEx.java:1698) ~[ignite-core-2.9.1.jar:2.9.1] at org.apache.ignite.internal.IgnitionEx.start0(IgnitionEx.java:1114) ~[ignite-core-2.9.1.jar:2.9.1] at org.apache.ignite.internal.IgnitionEx.start(IgnitionEx.java:634) ~[ignite-core-2.9.1.jar:2.9.1] at org.apache.ignite.internal.IgnitionEx.start(IgnitionEx.java:560) ~[ignite-core-2.9.1.jar:2.9.1] at org.apache.ignite.Ignition.start(Ignition.java:328) ~[ignite-core-2.9.1.jar:2.9.1] at io.github.goodsaem.api.config.IgniteConfig.ignite(IgniteConfig.java:51) ~[main/:na] at io.github.goodsaem.api.config.IgniteConfig$$EnhancerBySpringCGLIB$$60f465d7.CGLIB$ignite$0(&lt;generated&gt;) ~[main/:na] at io.github.goodsaem.api.config.IgniteConfig$$EnhancerBySpringCGLIB$$60f465d7$$FastClassBySpringCGLIB$$2894e447.invoke(&lt;generated&gt;) ~[main/:na] at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244) ~[spring-core-5.3.4.jar:5.3.4] at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:331) ~[spring-context-5.3.4.jar:5.3.4] at io.github.goodsaem.api.config.IgniteConfig$$EnhancerBySpringCGLIB$$60f465d7.ignite(&lt;generated&gt;) ~[main/:na] at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_275] at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_275] at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_275] at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_275] at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154) ~[spring-beans-5.3.4.jar:5.3.4] ... 49 common frames omittedCaused by: org.h2.jdbc.JdbcSQLNonTransientConnectionException: Unsupported connection setting &quot;MULTI_THREADED&quot; [90113-200] at org.h2.message.DbException.getJdbcSQLException(DbException.java:622) ~[h2-1.4.200.jar:1.4.200] at org.h2.message.DbException.getJdbcSQLException(DbException.java:429) ~[h2-1.4.200.jar:1.4.200] at org.h2.message.DbException.get(DbException.java:205) ~[h2-1.4.200.jar:1.4.200] at org.h2.message.DbException.get(DbException.java:181) ~[h2-1.4.200.jar:1.4.200] at org.h2.engine.ConnectionInfo.readSettingsFromURL(ConnectionInfo.java:269) ~[h2-1.4.200.jar:1.4.200] at org.h2.engine.ConnectionInfo.&lt;init&gt;(ConnectionInfo.java:78) ~[h2-1.4.200.jar:1.4.200] at org.h2.jdbc.JdbcConnection.&lt;init&gt;(JdbcConnection.java:152) ~[h2-1.4.200.jar:1.4.200] at org.h2.Driver.connect(Driver.java:69) ~[h2-1.4.200.jar:1.4.200] at java.sql.DriverManager.getConnection(DriverManager.java:664) ~[na:1.8.0_275] at java.sql.DriverManager.getConnection(DriverManager.java:270) ~[na:1.8.0_275] at org.apache.ignite.internal.processors.query.h2.ConnectionManager.&lt;init&gt;(ConnectionManager.java:118) ~[ignite-indexing-2.9.1.jar:2.9.1] ... 70 common frames omittedProcess finished with exit code 1 ::: 8. Error 해결방법build.gradle 수정41 번 라인처럼 h2 db 버전을 1.4.196 로 명시해 주어야 문제가 발생하지 않습니다. 높은 버전을 사용하거나 낮은 버전을 사용하면 문제가 발생합니다. 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455buildscript &#123; ext &#123; apacheIgniteVersion = &#x27;2.9.1&#x27; springBootVersion = &#x27;2.4.3&#x27; &#125; repositories &#123; mavenCentral() &#125; dependencies &#123; classpath( &quot;org.springframework.boot:spring-boot-gradle-plugin:$&#123;springBootVersion&#125;&quot;) &#125;&#125;apply plugin: &#x27;org.springframework.boot&#x27;apply plugin: &#x27;war&#x27;apply plugin: &#x27;io.spring.dependency-management&#x27;sourceCompatibility = &#x27;1.8&#x27;targetCompatibility = &#x27;1.8&#x27;group = &#x27;io.github.goodsaem&#x27;version = &#x27;0.0.1-SNAPSHOT&#x27;configurations &#123; compileOnly &#123; extendsFrom annotationProcessor &#125;&#125;repositories &#123; mavenCentral()&#125;dependencies &#123; implementation &#x27;org.springframework.boot:spring-boot-starter-data-jpa&#x27; implementation &#x27;org.springframework.boot:spring-boot-starter-freemarker&#x27; implementation &#x27;org.springframework.boot:spring-boot-starter-web&#x27; implementation &#x27;org.springframework.boot:spring-boot-autoconfigure&#x27; implementation(&quot;org.mariadb.jdbc:mariadb-java-client&quot;) implementation group: &#x27;com.h2database&#x27;, name: &#x27;h2&#x27;, version: &#x27;1.4.196&#x27; compile &quot;org.apache.ignite:ignite-core:$apacheIgniteVersion&quot;, &quot;org.apache.ignite:ignite-slf4j:$apacheIgniteVersion&quot;, &quot;org.apache.ignite:ignite-spring:$apacheIgniteVersion&quot; &quot;org.apache.ignite:ignite-rest-http:$apacheIgniteVersion&quot; compileOnly &#x27;org.projectlombok:lombok&#x27; annotationProcessor &#x27;org.projectlombok:lombok&#x27; testImplementation &#x27;org.springframework.boot:spring-boot-starter-test&#x27;&#125;test &#123; useJUnitPlatform()&#125; 9. 테스트이전 mariadb 연동시의 결과와 동일하지만 데이터를 캐쉬에서 불러와서 표시하는 부분만 달라집니다. 10. 전체파일 다운로드지금 까지 작성한 내용에 대해서 아래와 같이 압축해서 올립니다. 필요하신 분은 다운로드 받아서 사용하세요 &#x2F;api-master.zip","categories":[{"name":"Coding","slug":"Coding","permalink":"http://goodsaem.github.io/categories/Coding/"},{"name":"springboot","slug":"Coding/springboot","permalink":"http://goodsaem.github.io/categories/Coding/springboot/"}],"tags":[{"name":"springboot","slug":"springboot","permalink":"http://goodsaem.github.io/tags/springboot/"}]},{"title":"5. SpringBoot Backend 서버 구축","slug":"coding/springboot/springboot105","date":"2023-03-25T16:15:03.000Z","updated":"2025-06-29T07:42:00.915Z","comments":true,"path":"coding/springboot/springboot105/","link":"","permalink":"http://goodsaem.github.io/coding/springboot/springboot105/","excerpt":"","text":"5. Springboot Mariadb 설정h2 db 경우에는 간단한 application 만들때는 좋지만 규모가 있는 application 만들때는 문제가 있습니다. springboot + h2 db를 탑재한 상태에서dbeaver 를 통해 h2 db 에 접속하면 lock 상태로 접속할수 없다는 오류가 발생했습니다. 방법을 찾을수 있겠지만 과감히 버리고 mariadb 로 변경했습니다.우선 mac 에 maria db 설치하는 방법은 &#x2F;setup&#x2F;mariadb&#x2F;z101-install_mac_mariadb.html링크에 정리 했습니다. 1. directory 구조디렉토리 구조는 아래와 같습니다. builde.gradle 은 수정 되고 7개 파일은 추가할 예정 입니다. 디렉토리가 없으면 생성하고내용이 없는 클래스 파일을 우선 작성해 주세요 line 1,7,11,15,18,19,21,2712345678910111213141516171819202122232425262728build.gradlesrc└── main ├── java │ └── io.github.goodsaem.api │ ├── config │ | └── WebConfig.java │ ├── ApiApplication.java │ ├── controller │ │ │ └── v1 │ │ │ ├── HCodeController.java │ │ │ └── MemoController.java │ │ └── MyController.java │ ├── entity │ │ ├── HCode.java │ │ └── Memo.java │ ├── service │ │ ├── HCodeService.java │ │ └── IHCodeService.java │ └── repo │ ├── HCodeRepo.java │ └── MemoJpaRepo.java └── resources ├── application.yml ├── banner.txt └── templates ├── hcode.ftlh └── goodsaem.ftlh 2. build.gradle 이글을 쓰는 시점에 spring boot 2.4.3 안정화 버전이 나와서 버전을 올렸습니다. 이정도 개발했으면 1.1 버전은 된다고 생각하여 버전을 1.1로 올렸습니다. spring 설정을 위해 implementation ‘org.springframework.boot:spring-boot-autoconfigure’ 를 추가했습니다. mariadb 연결을 위해 드라이버를 추가했습니다. implementation(“org.mariadb.jdbc:mariadb-java-client”) 그리고 사용하지 않는 라이브러리는 삭제했습니다. 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748buildscript &#123; ext &#123; springBootVersion = &#x27;2.4.3&#x27; &#125; repositories &#123; mavenCentral() &#125; dependencies &#123; classpath( &quot;org.springframework.boot:spring-boot-gradle-plugin:$&#123;springBootVersion&#125;&quot;) &#125;&#125;apply plugin: &#x27;org.springframework.boot&#x27;apply plugin: &#x27;war&#x27;apply plugin: &#x27;io.spring.dependency-management&#x27;sourceCompatibility = &#x27;1.8&#x27;targetCompatibility = &#x27;1.8&#x27;group = &#x27;io.github.goodsaem&#x27;version = &#x27;1.1&#x27;configurations &#123; compileOnly &#123; extendsFrom annotationProcessor &#125;&#125;repositories &#123; mavenCentral()&#125;dependencies &#123; implementation &#x27;org.springframework.boot:spring-boot-starter-data-jpa&#x27; implementation &#x27;org.springframework.boot:spring-boot-starter-freemarker&#x27; implementation &#x27;org.springframework.boot:spring-boot-starter-web&#x27; implementation &#x27;org.springframework.boot:spring-boot-autoconfigure&#x27; implementation(&quot;org.mariadb.jdbc:mariadb-java-client&quot;) compileOnly &#x27;org.projectlombok:lombok&#x27; annotationProcessor &#x27;org.projectlombok:lombok&#x27; testImplementation &#x27;org.springframework.boot:spring-boot-starter-test&#x27;&#125;test &#123; useJUnitPlatform()&#125; 3. WebConfig.java 인증된 서버(https://goodsaem.github.io) 에서만 데이터 요청이 가능하도록 cors 설정을 아래와 같이 진행합니다. 허용할 메소드들에 대해서도 정의 합니다.(“GET”, “POST”, “PUT”, “PATCH”, “DELETE”,”OPTIONS”)123456789101112131415package io.github.goodsaem.api.config;import org.springframework.context.annotation.Configuration;import org.springframework.web.servlet.config.annotation.CorsRegistry;import org.springframework.web.servlet.config.annotation.WebMvcConfigurer;@Configurationpublic class WebConfig implements WebMvcConfigurer &#123; @Override public void addCorsMappings(CorsRegistry registry) &#123; registry.addMapping(&quot;/**&quot;) .allowedOrigins(&quot;https://goodsaem.github.io&quot;) .allowedMethods(&quot;GET&quot;, &quot;POST&quot;, &quot;PUT&quot;, &quot;PATCH&quot;, &quot;DELETE&quot;,&quot;OPTIONS&quot;); &#125;&#125; 4. HCode.java행정코드 Entity를 생성합니다. spring boot + mariadb 행 + mavaen 으로 연동하는 부분에도 같은 내용이 있으니 참고하세요spring&#x2F;springboot&#x2F;z102-springboot-with-mariadb.html @Getter @Setter @ToString @EqualsAndHashCode 이부분은 이름에서 알수 있듯이 lombok을 통해 해당 메소드들을자동으로 생성해 주는 부분 입니다. @Entity @Table(name &#x3D; “hcode”) 어노테이션 정보를 주어 테이블을 생성합니다. 테이블 자동 생성시에는자동으로 생성하는 @Id 속성을 가진 칼럼이 반드시 존재해야 하므로 강조한 라인처럼 id 부분을 정의합니다. 1234567891011121314151617181920212223242526package io.github.goodsaem.api.entity;import lombok.EqualsAndHashCode;import lombok.Getter;import lombok.Setter;import lombok.ToString;import javax.persistence.*;@Getter@Setter@ToString@EqualsAndHashCode@Entity@Table(name = &quot;hcode&quot;)public class HCode &#123; @Id @GeneratedValue(strategy = GenerationType.AUTO) private Long id; private String lcode; private String lname; private String mcode; private String mname; private String scode; private String sname;&#125; 5. HCodeRepo.java기본적인 curd가 동작하도록 CrudRepository를 상속받은 HCodeRepo 인터페이스를 아래와 같이 작성합니다. 123456789package io.github.goodsaem.api.repo;import io.github.goodsaem.api.entity.HCode;import org.springframework.data.repository.CrudRepository;import org.springframework.stereotype.Repository;@Repositorypublic interface HCodeRepo extends CrudRepository&lt;HCode,Long&gt; &#123;&#125; 6. IHCodeService.java행정코드 데이터를 가져올 인터페이스를 아래와 같이 작성합니다.findall 메소드는 데이터 전체를 가져오는 부분이며 getHCodeMap은 지금은 사용하지않지만 다음시간에 ignite 연동하는 부분에서 사용할 예정입니다. 미리 만들어 두세요.. 1234567891011package io.github.goodsaem.api.service;import io.github.goodsaem.api.entity.HCode;import java.util.List;import java.util.Map;public interface IHCodeService &#123; List&lt;HCode&gt; findAll(); Map&lt;String, List&lt;HCode&gt;&gt; getHCodeMap();&#125; 7. HCodeService.javaIHCodeService 를 상속받은 HCodeService를 생성합니다.특별한 내용은 없고 crudRepository를 상속받은 hCodeRepo를 통해 전체데이터를가져오는 부분이 있습니다. getHCodeMap은 전체 가져온 데이터를 맵형태로 리턴하는단순한 코드 입니다. 12345678910111213141516171819202122232425262728293031package io.github.goodsaem.api.service;import io.github.goodsaem.api.entity.HCode;import io.github.goodsaem.api.repo.HCodeRepo;import lombok.extern.slf4j.Slf4j;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Service;import java.util.HashMap;import java.util.List;import java.util.Map;@Slf4j@Servicepublic class HCodeService implements IHCodeService&#123; @Autowired private HCodeRepo hCodeRepo; @Override public List&lt;HCode&gt; findAll() &#123; return (List&lt;HCode&gt;) hCodeRepo.findAll(); &#125; @Override public Map&lt;String, List&lt;HCode&gt;&gt; getHCodeMap() &#123; Map hash = new HashMap(); hash.put(&quot;hCodeCache&quot;,hCodeRepo.findAll()); Map&lt;String, List&lt;HCode&gt;&gt; hCodeMap =hash; return hCodeMap; &#125;&#125; 8. HCodeController.javaurl &#x2F;hcodes 로 접속하면 전체 데이터를 불러와서 모델의 hcodes 속성에 저장하고hcode.ftlh 파일을 읽어 불러온 데이터를 전달합니다. 12345678910111213141516171819202122232425package io.github.goodsaem.api.controller.v1;import io.github.goodsaem.api.entity.HCode;import io.github.goodsaem.api.service.IHCodeService;import lombok.var;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Controller;import org.springframework.ui.Model;import org.springframework.web.bind.annotation.GetMapping;import java.util.List;@Controllerpublic class HCodeController &#123; @Autowired private IHCodeService ihCodeService; @GetMapping(&quot;/hcodes&quot;) public String findHcodes(Model model) &#123; var hcodes = (List&lt;HCode&gt;) ihCodeService.findAll(); model.addAttribute(&quot;hcodes&quot;,hcodes); return &quot;hcode&quot;; &#125;&#125; 9. hcode.ftlhcontroller 에서 주입한 hcodes list 아래와 같이 반복문을 실행하면서 전체 데이터를 출력합니다.테이블은 application.yml 파일의 설정으로 자동으로 만들어 집니다. 12345678910111213141516171819202122232425262728293031323334&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt; &lt;title&gt;HCodes&lt;/title&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;&lt;/head&gt;&lt;body&gt;&lt;h2&gt;행정구역 코드&lt;/h2&gt;&lt;table border=&quot;1&quot;&gt; &lt;tr&gt; &lt;th&gt;고유번호&lt;/th&gt; &lt;th&gt;시도코드&lt;/th&gt; &lt;th&gt;시도명칭&lt;/th&gt; &lt;th&gt;시군구코드&lt;/th&gt; &lt;th&gt;시군구명칭&lt;/th&gt; &lt;th&gt;읍면동코드&lt;/th&gt; &lt;th&gt;읍면동명칭&lt;/th&gt; &lt;/tr&gt; &lt;#list hcodes as hcode&gt; &lt;tr&gt; &lt;td&gt;$&#123;hcode.id&#125;&lt;/td&gt; &lt;td&gt;$&#123;hcode.lcode&#125;&lt;/td&gt; &lt;td&gt;$&#123;hcode.lname&#125;&lt;/td&gt; &lt;td&gt;$&#123;hcode.mcode&#125;&lt;/td&gt; &lt;td&gt;$&#123;hcode.mname&#125;&lt;/td&gt; &lt;td&gt;$&#123;hcode.scode&#125;&lt;/td&gt; &lt;td&gt;$&#123;hcode.sname&#125;&lt;/td&gt; &lt;/tr&gt;&lt;/#list&gt;&lt;/table&gt;&lt;/body&gt;&lt;/html&gt; 10. application.ymldatasource 설정은 아래와 같이 설정합니다. driver 는 mariadb로 잡아주시고url은 localhost:3306 username password 는 각각의 환경에 맞게 설정해주세요그리고 jba 을 아래와 같이 mariadb로 설정하고 properties.hibernate.hbm2ddl.auto 부분이none 이라고 되어있는데 application 테이블 생성이 필요하면 create 로 하여 테이블을 생성해주시고테이블이 생성되고 나면 다시 이값을 none 으로 변경하여 테이블 생성을 하지 않습니다. ::: tip hibernate hbm2ddl.auto 설정값 create : SessionFactory 시작시 스키마를 삭제하고 다시 생성합니다. create-drop : SessionFactory 종료시 스키마를 삭제합니다. update : SessionFactory 시작시 객체 구성와 스키마를 비교하여 컬럼 추가&#x2F;삭제 작업을 진행하고 기존의 스키마를 삭제하지 않고 유지합니다. validate : SessionFactory 시작시 객체구성과 스키마가 다르다면 예외 발생시킵니다. none : 해당 값으로 설정시 아무 동작도 하지 않습니다.:::12345678910111213141516171819server: port: 9090 servlet: context-path: /spring session: timeout: 60 tomcat: uri-encoding: UTF-8spring: datasource: driver-class-name: org.mariadb.jdbc.Driver url: jdbc:mariadb://localhost:3306/goodsaem?useSSL=false&amp;serverTimezone=KST username: goodsaem password: xxxxxxxxxxxx jpa: database-platform: org.hibernate.dialect.MariaDBDialect properties.hibernate.hbm2ddl.auto: none showSql: true 테이블 생성이 끝났다면 아래 파일을 다운로드 받아 insert 문장을 실행합니다.inser sql 11. 테스트http://localhost:9090/spring/hcodes 에 접속하시면 아래와 같은 화면을 확인할수 있습니다. 마무리내용을 정리할려고 하니 잘 모르는 부분을 찾아서 정리를 하고 나서 다음 단계로 넘어가서 생각보다 빨리 진행되지 않네요그래도 매일 글을 작성한다고 생각하고 노력 하겠습니다. 긴글 읽어 주셔서 감사합니다.","categories":[{"name":"Coding","slug":"Coding","permalink":"http://goodsaem.github.io/categories/Coding/"},{"name":"springboot","slug":"Coding/springboot","permalink":"http://goodsaem.github.io/categories/Coding/springboot/"}],"tags":[{"name":"springboot","slug":"springboot","permalink":"http://goodsaem.github.io/tags/springboot/"}]},{"title":"4. SpringBoot Backend 서버 구축","slug":"coding/springboot/springboot104","date":"2023-03-25T16:14:03.000Z","updated":"2025-06-29T07:42:00.899Z","comments":true,"path":"coding/springboot/springboot104/","link":"","permalink":"http://goodsaem.github.io/coding/springboot/springboot104/","excerpt":"","text":"4. Aws 배포지금까지 만든 springboot 프로그램을 war 파일로 만든다음 aws에 배포하여 특정디렉토리로 요청이왔을때는 springboot가 응답하도록 설정해보겠습니다.aws에 서버 구축과 php + mariadb 연동 + ssl 설정하는방법은 아래 url 참고하세요 &#x2F;setup&#x2F;aws&#x2F;z101-freetier.html 1. build.gradlewar 파일로 build하기 위해 build.gradle 파일을 아래와 같이 수정했습니다. 아래 강조된 색상 부분만 참고하시면 되구요 간단히 설명드리면spring boot 버전을 2.4.2 로 명시했구요 spring-boot-gradle-plugin 의존성을 추가한후 apply plugin war 등의 정보를추가했습니다. 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647buildscript &#123; ext &#123; springBootVersion = &#x27;2.4.2&#x27; &#125; repositories &#123; mavenCentral() &#125; dependencies &#123; classpath( &quot;org.springframework.boot:spring-boot-gradle-plugin:$&#123;springBootVersion&#125;&quot;) &#125;&#125;apply plugin: &#x27;org.springframework.boot&#x27;apply plugin: &#x27;war&#x27;apply plugin: &#x27;io.spring.dependency-management&#x27;sourceCompatibility = &#x27;1.8&#x27;targetCompatibility = &#x27;1.8&#x27;group = &#x27;io.github.goodsaem&#x27;version = &#x27;0.0.1-SNAPSHOT&#x27;configurations &#123; compileOnly &#123; extendsFrom annotationProcessor &#125;&#125;repositories &#123; mavenCentral()&#125;dependencies &#123; implementation &#x27;org.springframework.boot:spring-boot-starter-data-jpa&#x27; implementation &#x27;org.springframework.boot:spring-boot-starter-freemarker&#x27; implementation &#x27;org.springframework.boot:spring-boot-starter-web&#x27; compileOnly &#x27;org.projectlombok:lombok&#x27; runtimeOnly &#x27;com.h2database:h2&#x27; runtimeOnly &#x27;mysql:mysql-connector-java&#x27; annotationProcessor &#x27;org.projectlombok:lombok&#x27; testImplementation &#x27;org.springframework.boot:spring-boot-starter-test&#x27;&#125;test &#123; useJUnitPlatform()&#125; 2. 시작디렉토리 변경 및 cors설정nginx 가 설치되어 있는 https를 지원해주는 서버에 ( 설정은 위에 url 참고하세요) &#x2F;spring 이라는 요청이 오면 springboot 쪽으로 전달하여springboot가 처리하도록 하기 위해 context-path 에 spring 이라고 추가를 해줍니다. 세션타임아웃 시간등을 정해주시구요h2 db 파일을 springboot가 실행되는 디렉토리에서 찾기위해 .&#x2F;goodsaem이라고 설정을 변경했습니다. 12345678910111213141516171819server: port: 9090 servlet: context-path: /spring session: timeout: 60 tomcat: uri-encoding: UTF-8spring: datasource: url : jdbc:h2:./goodsaem driver-class-name: org.h2.Driver username: goodsaem password: xxxxxxxx jpa: database-platform: org.hibernate.dialect.H2Dialect properties.hibernate.hbm2ddl.auto: update showSql: true Cors 설정을 위해 프로젝트 &#x2F; 아래에 config 디렉토리를 만들고 아래와 같이 WebConfig를 생성합니다.아래 설정이 누락되면 동일출처오류 cors 오류가 발생합니다. 123456789101112131415package io.github.goodsaem.api.config;import org.springframework.context.annotation.Configuration;import org.springframework.web.servlet.config.annotation.CorsRegistry;import org.springframework.web.servlet.config.annotation.WebMvcConfigurer;@Configurationpublic class WebConfig implements WebMvcConfigurer &#123; @Override public void addCorsMappings(CorsRegistry registry) &#123; registry.addMapping(&quot;/**&quot;) .allowedOrigins(&quot;https://goodsaem.github.io&quot;) .allowedMethods(&quot;GET&quot;, &quot;POST&quot;, &quot;PUT&quot;, &quot;PATCH&quot;, &quot;DELETE&quot;,&quot;OPTIONS&quot;); &#125;&#125; 3. intellij buildintellij 에서 Gradle 을 클릭하고 Taks를 펼쳐 build 아래의 build를 더블 클릭합니다. 이렇게 진행하면 war파일이 생성됩니다. 좌측의 프로젝트 디렉토리에서 build &gt; libs &gt; api-0.0.1-SNAPSHOT.war 파일 확인이 가능합니다. 4. war 파일 업로드db파일과 war파일을 서버에 업로드 합니다. 파일질라를 통해 프로젝트 홈 디렉토리에 있는 goodsaem.mv.db 파일과 war파일을 업로드 합니다. 5. nginx 설정nginx 설정을 변경합니다. aws ssh shell에서 아래와 같이 입력합니다. 1ubuntu@goodsaem:~$ sudo vi /etc/nginx/conf.d/default.conf 아래와 같이 context path 의 spring 디렉토리의 요청이 오면 12~15 라인 설정에 따라 springboot로 보내는 설정입니다.그외 전체 nginx 설정이 있으니 참고 하시기 바랍니다.https://goodsaem.ml/spring/v1/memo 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071server &#123; server_name goodsaem.ml; charset utf-8; access_log /var/log/nginx/localhost.access.log main; error_log /var/log/nginx/localhost.error.log; root /home/ubuntu/phprest/public; location /spring &#123; proxy_pass http://localhost:9090/spring; proxy_set_header X-Real-IP $remote_addr; proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; proxy_set_header Host $http_host; &#125; location / &#123; try_files $uri $uri/ /index.php?$args; &#125; error_page 405 =200 $uri; error_page 500 502 503 504 /50x.html; location = /50x.html &#123; root /usr/share/nginx/html; &#125; location ~ \\.php$ &#123; proxy_pass http://127.0.0.1; fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name; include fastcgi_params; fastcgi_pass 127.0.0.1:9000; proxy_redirect off; fastcgi_intercept_errors on; fastcgi_read_timeout 300; fastcgi_send_timeout 300; &#125; location ~ /\\.ht &#123; deny all; &#125; location = /xmlrpc.php &#123; deny all; error_page 403 = /403.html; &#125; listen 443 ssl; # managed by Certbot ssl_certificate /etc/letsencrypt/live/goodsaem.ml/fullchain.pem; # managed by Certbot ssl_certificate_key /etc/letsencrypt/live/goodsaem.ml/privkey.pem; # managed by Certbot include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot&#125;server &#123; if ($host = goodsaem.ml) &#123; return 301 https://$host$request_uri; &#125; # managed by Certbot server_name goodsaem.ml; return 404; # managed by Certbot listen 443 ssl; # managed by Certbot ssl_certificate /etc/letsencrypt/live/goodsaem.ml/fullchain.pem; # managed by Certbot ssl_certificate_key /etc/letsencrypt/live/goodsaem.ml/privkey.pem; # managed by Certbot include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot&#125;server &#123; if ($host = goodsaem.ml) &#123; return 301 https://$host$request_uri; &#125; # managed by Certbot listen 80; server_name goodsaem.ml; return 404; # managed by Certbot&#125; 6. nginx springboot 시작아래 명령어로 nginx 를 재시작합니다. 1ubuntu@goodsaem:~$ sudo service nginx restart 업로드한 jar 파일을 아래 명령어로 실행합니다. 123456789101112131415161718192021222324252627282930ubuntu@goodsaem:~/api$ java -jar api*.war ██████╗ ██████╗ ██████╗ ██████╗ ███████╗ █████╗ ███████╗███╗ ███╗██╔════╝ ██╔═══██╗██╔═══██╗██╔══██╗██╔════╝██╔══██╗██╔════╝████╗ ████║██║ ███╗██║ ██║██║ ██║██║ ██║███████╗███████║█████╗ ██╔████╔██║██║ ██║██║ ██║██║ ██║██║ ██║╚════██║██╔══██║██╔══╝ ██║╚██╔╝██║╚██████╔╝╚██████╔╝╚██████╔╝██████╔╝███████║██║ ██║███████╗██║ ╚═╝ ██║ ╚═════╝ ╚═════╝ ╚═════╝ ╚═════╝ ╚══════╝╚═╝ ╚═╝╚══════╝╚═╝ ╚═╝:: Spring Boot :: (v2.4.2)2021-03-10 00:36:10.524 INFO 17286 --- [ main] io.github.goodsaem.api.ApiApplication : Starting ApiApplication using Java 1.8.0_282 on goodsaem with PID 17286 (/home/ubuntu/api/api-0.0.1-SNAPSHOT.war started by ubuntu in /home/ubuntu/api)2021-03-10 00:36:10.535 INFO 17286 --- [ main] io.github.goodsaem.api.ApiApplication : No active profile set, falling back to default profiles: default2021-03-10 00:36:12.405 INFO 17286 --- [ main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.2021-03-10 00:36:12.545 INFO 17286 --- [ main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 114 ms. Found 1 JPA repository interfaces.2021-03-10 00:36:14.131 INFO 17286 --- [ main] o.s.b.w.embedded.tomcat.TomcatWebServer : Tomcat initialized with port(s): 9090 (http)2021-03-10 00:36:14.167 INFO 17286 --- [ main] o.apache.catalina.core.StandardService : Starting service [Tomcat]2021-03-10 00:36:14.167 INFO 17286 --- [ main] org.apache.catalina.core.StandardEngine : Starting Servlet engine: [Apache Tomcat/9.0.41]2021-03-10 00:36:15.970 INFO 17286 --- [ main] o.a.c.c.C.[.[localhost].[/spring] : Initializing Spring embedded WebApplicationContext2021-03-10 00:36:15.970 INFO 17286 --- [ main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 5303 ms2021-03-10 00:36:16.857 INFO 17286 --- [ main] o.hibernate.jpa.internal.util.LogHelper : HHH000204: Processing PersistenceUnitInfo [name: default]2021-03-10 00:36:16.990 INFO 17286 --- [ main] org.hibernate.Version : HHH000412: Hibernate ORM core version 5.4.27.Final2021-03-10 00:36:17.253 INFO 17286 --- [ main] o.hibernate.annotations.common.Version : HCANN000001: Hibernate Commons Annotations &#123;5.1.2.Final&#125;2021-03-10 00:36:17.487 INFO 17286 --- [ main] com.zaxxer.hikari.HikariDataSource : HikariPool-1 - Starting...2021-03-10 00:36:17.958 INFO 17286 --- [ main] com.zaxxer.hikari.HikariDataSource : HikariPool-1 - Start completed.2021-03-10 00:36:17.979 INFO 17286 --- [ main] org.hibernate.dialect.Dialect : HHH000400: Using dialect: org.hibernate.dialect.H2Dialect2021-03-10 00:36:19.285 INFO 17286 --- [ main] o.h.e.t.j.p.i.JtaPlatformInitiator : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]2021-03-10 00:36:19.303 INFO 17286 --- [ main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit &#x27;default&#x27;2021-03-10 00:36:20.086 WARN 17286 --- [ main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning2021-03-10 00:36:20.370 INFO 17286 --- [ main] o.s.s.concurrent.ThreadPoolTaskExecutor : Initializing ExecutorService &#x27;applicationTaskExecutor&#x27;2021-03-10 00:36:21.187 INFO 17286 --- [ main] o.s.b.w.embedded.tomcat.TomcatWebServer : Tomcat started on port(s): 9090 (http) with context path &#x27;/spring&#x27;2021-03-10 00:36:21.210 INFO 17286 --- [ main] io.github.goodsaem.api.ApiApplication : Started ApiApplication in 11.982 seconds (JVM running for 13.126)2021-03-10 00:36:37.301 INFO 17286 --- [nio-9090-exec-1] o.apache.coyote.http11.Http11Processor : Error parsing HTTP request header :::tip open jdk 1.8 설치만약 openjdk 1.8이 설치되어 있지 않다면 아래 명령어로 설치해 주시기 바랍니다. 12345678910111213141516171819202122ubuntu@goodsaem:~/api$ sudo apt install openjdk-8-jdkReading package lists... DoneBuilding dependency tree Reading state information... DoneThe following additional packages will be installed: adwaita-icon-theme at-spi2-core ca-certificates-java fontconfig fonts-dejavu-extra gtk-update-icon-cache hicolor-icon-theme humanity-icon-theme java-common libasound2 libasound2-data libasyncns0 libatk-bridge2.0-0 libatk-wrapper-java libatk-wrapper-java-jni libatk1.0-0 libatk1.0-data libatspi2.0-0 libcairo2 libdatrie1 libdrm-amdgpu1 libdrm-intel1 libdrm-nouveau2 libdrm-radeon1 libflac8 libfontenc1 libgail-common libgail18 libgdk-pixbuf2.0-0 libgdk-pixbuf2.0-bin libgdk-pixbuf2.0-common libgif7 libgl1 libgl1-mesa-dri libgl1-mesa-glx libglapi-mesa libglvnd0 libglx-mesa0 libglx0 libgraphite2-3 libgtk2.0-0 libgtk2.0-bin libgtk2.0-common libharfbuzz0b libice-dev libice6 libllvm10 libnspr4 libnss3 libogg0 libpango-1.0-0 libpangocairo-1.0-0 libpangoft2-1.0-0 libpciaccess0 libpcsclite1 libpixman-1-0 libpthread-stubs0-dev libpulse0 librsvg2-2 librsvg2-common libsensors4 libsm-dev libsm6 libsndfile1 libthai-data libthai0 libvorbis0a libvorbisenc2 libx11-dev libx11-doc libx11-xcb1 libxau-dev libxaw7 libxcb-dri2-0 libxcb-dri3-0 libxcb-glx0 libxcb-present0 libxcb-render0 libxcb-shape0 libxcb-shm0 libxcb-sync1 libxcb1-dev libxcomposite1 libxcursor1 libxdamage1 libxdmcp-dev libxfixes3 libxft2 libxi6 libxinerama1 libxmu6 libxrandr2 libxrender1 libxshmfence1 libxt-dev libxt6 libxtst6 libxv1 libxxf86dga1 libxxf86vm1 openjdk-8-jdk-headless openjdk-8-jre openjdk-8-jre-headless ubuntu-mono x11-common x11-utils x11proto-core-dev x11proto-dev xorg-sgml-doctools xtrans-devSuggested packages: default-jre libasound2-plugins alsa-utils gvfs libice-doc pcscd pulseaudio librsvg2-bin lm-sensors libsm-doc libxcb-doc libxt-doc openjdk-8-demo openjdk-8-source visualvm icedtea-8-plugin libnss-mdns fonts-ipafont-gothic fonts-ipafont-mincho fonts-wqy-microhei fonts-wqy-zenhei fonts-indic mesa-utilsThe following NEW packages will be installed: adwaita-icon-theme at-spi2-core ca-certificates-java fontconfig fonts-dejavu-extra gtk-update-icon-cache hicolor-icon-theme humanity-icon-theme java-common libasound2 libasound2-data libasyncns0 libatk-bridge2.0-0 libatk-wrapper-java libatk-wrapper-java-jni libatk1.0-0 libatk1.0-data libatspi2.0-0 libcairo2 libdatrie1 libdrm-amdgpu1 libdrm-intel1 libdrm-nouveau2 libdrm-radeon1 libflac8 libfontenc1 libgail-common libgail18 libgdk-pixbuf2.0-0 libgdk-pixbuf2.0-bin libgdk-pixbuf2.0-common libgif7 libgl1 libgl1-mesa-dri libgl1-mesa-glx libglapi-mesa libglvnd0 libglx-mesa0 libglx0 libgraphite2-3 libgtk2.0-0 libgtk2.0-bin libgtk2.0-common libharfbuzz0b libice-dev libice6 libllvm10 libnspr4 libnss3 libogg0 libpango-1.0-0 libpangocairo-1.0-0 libpangoft2-1.0-0 libpciaccess0 libpcsclite1 libpixman-1-0 libpthread-stubs0-dev libpulse0 librsvg2-2 librsvg2-common libsensors4 libsm-dev libsm6 libsndfile1 libthai-data libthai0 libvorbis0a libvorbisenc2 libx11-dev libx11-doc libx11-xcb1 libxau-dev libxaw7 libxcb-dri2-0 libxcb-dri3-0 libxcb-glx0 libxcb-present0 libxcb-render0 libxcb-shape0 libxcb-shm0 libxcb-sync1 libxcb1-dev libxcomposite1 libxcursor1 libxdamage1 libxdmcp-dev libxfixes3 libxft2 libxi6 libxinerama1 libxmu6 libxrandr2 libxrender1 libxshmfence1 libxt-dev libxt6 libxtst6 libxv1 libxxf86dga1 libxxf86vm1 openjdk-8-jdk openjdk-8-jdk-headless openjdk-8-jre openjdk-8-jre-headless ubuntu-mono x11-common x11-utils x11proto-core-dev x11proto-dev xorg-sgml-doctools xtrans-dev0 upgraded, 111 newly installed, 0 to remove and 42 not upgraded.Need to get 81.6 MB of archives.After this operation, 556 MB of additional disk space will be used.Do you want to continue? [Y/n] y 정상적으로 설치되었는지 확인합니다. 1234ubuntu@goodsaem:~/api$ java -versionopenjdk version &quot;1.8.0_282&quot;OpenJDK Runtime Environment (build 1.8.0_282-8u282-b08-0ubuntu1~18.04-b08)OpenJDK 64-Bit Server VM (build 25.282-b08, mixed mode) ::: 7. 테스트아래 url 에 접속합니다. https://goodsaem.ml/spring/v1/memo 아래와 같이 json 문자열이 브라우저에 출력 된다면 ok 입니다. 123456[ &#123;&quot;idx&quot;:1,&quot;title&quot;:&quot;memo title1&quot;,&quot;contents&quot;:&quot;memo content1&quot;&#125;, &#123;&quot;idx&quot;:2,&quot;title&quot;:&quot;memo title2&quot;,&quot;contents&quot;:&quot;memo content2&quot;&#125;, &#123;&quot;idx&quot;:3,&quot;title&quot;:&quot;memo title3&quot;,&quot;contents&quot;:&quot;memo content3&quot;&#125;, &#123;&quot;idx&quot;:4,&quot;title&quot;:&quot;memo title4&quot;,&quot;contents&quot;:&quot;memo content4&quot;&#125;, &#123;&quot;idx&quot;:6,&quot;title&quot;:&quot;memo title5&quot;,&quot;contents&quot;:&quot;memo content5&quot;&#125;, &#123;&quot;idx&quot;:7,&quot;title&quot;:&quot;memo title7&quot;,&quot;contents&quot;:&quot;memo content7&quot;&#125;] 메모를 등록하면 post로 등록 api를 호출하여 db에 내용을 저장하고 조회 api 를 호출하여 데이터를 받아서 grid에 표현합니다. 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110&lt;template&gt; &lt;div&gt; &lt;el-row&gt; &lt;el-col :span=&quot;8&quot; style=&quot;padding-right: 10px;&quot;&gt; &lt;el-input placeholder=&quot;메모 제목을 입력하세요&quot; v-model=&quot;memo.title&quot;&gt;&lt;/el-input&gt; &lt;/el-col&gt; &lt;el-col :span=&quot;8&quot;&gt; &lt;el-input placeholder=&quot;메모 내용을 입력하세요&quot; v-model=&quot;memo.contents&quot;&gt;&lt;/el-input&gt; &lt;/el-col&gt; &lt;el-col :span=&quot;8&quot; style=&quot;padding-left: 10px;&quot;&gt; &lt;el-button type=&quot;primary&quot; @click=&quot;saveMemo&quot;&gt;메모등록&lt;/el-button&gt; &lt;el-button type=&quot;primary&quot; @click=&quot;searchMemo&quot;&gt;메모검색&lt;/el-button&gt; &lt;/el-col&gt; &lt;/el-row&gt; &lt;el-row&gt; &lt;el-col&gt; &lt;i class=&quot;fas fa-smile&quot;&gt;&lt;/i&gt; Element Ui로 데이터 표현하기 &lt;/el-col&gt; &lt;/el-row&gt; &lt;el-row&gt; &lt;el-table v-if=&quot;gridData.length &gt;= 0&quot; :data=&quot;gridData&quot; style=&quot;width: 100%&quot;&gt; &lt;el-table-column prop=&quot;idx&quot; label=&quot;번호&quot; width=&quot;180&quot;&gt; &lt;/el-table-column&gt; &lt;el-table-column prop=&quot;title&quot; label=&quot;제목&quot; width=&quot;180&quot;&gt; &lt;/el-table-column&gt; &lt;el-table-column prop=&quot;contents&quot; label=&quot;내용&quot;&gt; &lt;/el-table-column&gt; &lt;/el-table&gt; &lt;/el-row&gt; &lt;el-row&gt; &lt;el-col&gt; &lt;i class=&quot;fas fa-angry&quot;&gt;&lt;/i&gt; Tui Grid 로 데이터 표현하기 &lt;/el-col&gt; &lt;/el-row&gt; &lt;el-row&gt; &lt;el-col&gt; &lt;grid v-if=&quot;loadData === true&quot; ref=&quot;tuiGrid&quot; :data=&quot;gridData&quot; :columns=&quot;columns&quot; :scrollX=&quot;scrollX&quot; :scrollY=&quot;scrollY&quot; &gt;&lt;/grid&gt; &lt;/el-col&gt; &lt;/el-row&gt; &lt;/div&gt;&lt;/template&gt;&lt;script&gt;const URL = &quot;https://goodsaem.ml&quot;;//const URL = &quot;http://localhost:9090&quot;;export default &#123; name: &quot;Exam4&quot;, created() &#123; &#125;, data() &#123; return &#123; memo : &#123; title : &#x27;&#x27;, contents : &#x27;&#x27;, &#125;, loadData: true, gridData: [], columns: [ &#123; header: &#x27;번호&#x27;, name: &#x27;idx&#x27; &#125;, &#123; header: &#x27;메모&#x27;, name: &#x27;title&#x27; &#125;, &#123; header: &#x27;메모내용&#x27;, name: &#x27;contents&#x27; &#125;, ], scrollX: false, scrollY: false, &#125; &#125;, methods: &#123; create() &#123; &#125;, saveMemo() &#123; this.$http.post(URL + &#x27;/spring/v1/memo&#x27;,this.memo).then((response) =&gt; &#123; this.searchMemo(); &#125;) &#125;, searchMemo() &#123; this.loadData = false; this.$http.get(URL + &#x27;/spring/v1/memo&#x27;) .then((response) =&gt; &#123; this.gridData = response.data this.loadData = true; &#125;) &#125; &#125;&#125;&lt;/script&gt;&lt;style scoped&gt;&lt;/style&gt; 8. 참고위에 spring boot는 ctrl+c 를 누르거나 ssh 를 종료하면 서비스가 종료 됩니다. 서비스가 백그라운드에서 실행되도록하고프로세스를 죽이지 않도록 설정하겠습니다. start.sh 파일을 만듭니다. 1ubuntu@goodsaem:~/api$ vi start.sh nohup 은 프로세스를 죽이지 않겠다는 의미이고 &amp; 은 백그라운드에서 실행하겠다는 의미 입니다.이렇게 실행하면 로그가 보이지 않습니다. 1nohup java -jar api*.war &gt; api.log &amp; 아래 명령어를 입력하여 로그를 확인합니다. 12345678910111213141516ubuntu@goodsaem:~/api$ tail -f api.logHibernate: select memo0_.idx as idx1_0_, memo0_.contents as contents2_0_, memo0_.title as title3_0_ from memo memo0_Hibernate: select memo0_.idx as idx1_0_, memo0_.contents as contents2_0_, memo0_.title as title3_0_ from memo memo0_Hibernate: select memo0_.idx as idx1_0_, memo0_.contents as contents2_0_, memo0_.title as title3_0_ from memo memo0_Hibernate: select memo0_.idx as idx1_0_, memo0_.contents as contents2_0_, memo0_.title as title3_0_ from memo memo0_Hibernate: select memo0_.idx as idx1_0_, memo0_.contents as contents2_0_, memo0_.title as title3_0_ from memo memo0_Hibernate: select memo0_.idx as idx1_0_, memo0_.contents as contents2_0_, memo0_.title as title3_0_ from memo memo0_Hibernate: select memo0_.idx as idx1_0_, memo0_.contents as contents2_0_, memo0_.title as title3_0_ from memo memo0_Hibernate: select memo0_.idx as idx1_0_, memo0_.contents as contents2_0_, memo0_.title as title3_0_ from memo memo0_Hibernate: select memo0_.idx as idx1_0_, memo0_.contents as contents2_0_, memo0_.title as title3_0_ from memo memo0_Hibernate: select memo0_.idx as idx1_0_, memo0_.contents as contents2_0_, memo0_.title as title3_0_ from memo memo0_Hibernate: select memo0_.idx as idx1_0_, memo0_.contents as contents2_0_, memo0_.title as title3_0_ from memo memo0_Hibernate: select memo0_.idx as idx1_0_, memo0_.contents as contents2_0_, memo0_.title as title3_0_ from memo memo0_Hibernate: select memo0_.idx as idx1_0_, memo0_.contents as contents2_0_, memo0_.title as title3_0_ from memo memo0_Hibernate: select memo0_.idx as idx1_0_, memo0_.contents as contents2_0_, memo0_.title as title3_0_ from memo memo0_ 프로세스 종료는 아래와 같이 java 프로세스가 올라가 있는걸 확인하고 kill 명령어로 종료합니다.kill 되고 나서 프로세스가 살아있는지 한번더 프로세를 확인 합니다. 123456ubuntu@goodsaem:~/api$ ps -ef | grep javaubuntu 17700 1 4 01:40 ? 00:00:15 java -jar api-0.0.1-SNAPSHOT.warubuntu 17870 17842 0 01:46 pts/0 00:00:00 grep --color=auto javaubuntu@goodsaem:~/api$ kill -9 17700ubuntu@goodsaem:~/api$ ps -ef | grep javaubuntu 17872 17842 0 01:46 pts/0 00:00:00 grep --color=auto java","categories":[{"name":"Coding","slug":"Coding","permalink":"http://goodsaem.github.io/categories/Coding/"},{"name":"springboot","slug":"Coding/springboot","permalink":"http://goodsaem.github.io/categories/Coding/springboot/"}],"tags":[{"name":"springboot","slug":"springboot","permalink":"http://goodsaem.github.io/tags/springboot/"}]},{"title":"3. SpringBoot Backend 서버 구축","slug":"coding/springboot/springboot103","date":"2023-03-25T16:13:03.000Z","updated":"2025-06-29T07:42:00.899Z","comments":true,"path":"coding/springboot/springboot103/","link":"","permalink":"http://goodsaem.github.io/coding/springboot/springboot103/","excerpt":"","text":"3. SpringBoot H2DB 연동h2 db 와 spring boot 를 연결하는 방법에 대해서 알아보겠습니다. h2 db 설치하는 방법은 Setup 부분을 확인하세요 1. 디렉토리 구조디레토리 구조는 아래와 같으며 3개 파일을 추가할 예정입니다. 미리 파일을 만들어 주세요 12345678910111213141516171819build.gradlesrc└── main ├── java │ └── io.github.goodsaem.api │ ├── ApiApplication.java │ ├── controller │ │ │ └── v1 │ │ │ └── MemoController.java │ │ └── MyController.java │ ├── entity │ │ └── Memo.java │ └── repo │ └── MemoJpaRepo.java └── resources ├── application.yml ├── banner.txt └── templates └── goodsaem.ftlh 2. h2 db 실행h2 db 가 설치된 디렉토리의 bin 디렉토리로 이동하여 아래 명령어를 실행합니다. 1sh h2.sh 3. application.yml 수정application.yml 에 h2 db 연결 정보를 입력합니다. 6 line : h2 db 파일 위치를 지정합니다. 7 line : db 접속용 driver 는 h2 driver 를 지정합니다. 8,9 line : db 생성시 입력했던 아이디 패스워드를 입력합니다. 12 line : application 이 시작할때 자바 객체와 db 테이블을 비교하여 필요한 테이블이나 칼럼이 없을때 자바 객체에 맞춰 DB 스키마를 변경하라는 의미입니다. 13 line : jpa 가 실행한 쿼리를 콘솔 로그로 출력하라는 의미 입니다. 12345678910111213server: port: 9090spring: datasource: url : jdbc:h2:/Users/goodsaem/goodsaem/api/goodsaem driver-class-name: org.h2.Driver username: goodsaem password: xxxxxxxxxxxx jpa: database-platform: org.hibernate.dialect.H2Dialect properties.hibernate.hbm2ddl.auto: update showSql: true :::tip ORM,JPAORM(Object Relational Mapping) 은 객체와 관계형 데이터 베이스 Mapping, 객체와 DB 테이블이 매핑을 이루는것을 말합니다. 객체가 테이블이 되도록매핑시켜주는 프레임워크라고 생각하시면 됩니다. 이렇게 객체와 테이블을 연결해 놓으면 프로그램 복잡도 줄어 들고 자바 객체와 쿼리를 분리 할수 있어 트랜잭션처리나 데이터 베이스 관련작업을 손쉽게 할수 있다는 장점이 있습니다. Memo 테이블의 데이터를 가져오기 위해서는 SELECT * FROM MEMO 이런씩으로쿼리를 작성해서 가져왔는데요 ORM 에서는 Memo.findAll() 이라는 메소드를 호출 하여 데이터 조회가 가능합니다. JPA(Java Persistence API) 는 자바 ORM 기술에 대한 API 표준 명세서 입니다. ORM 을 사용하기 위한 인터페이스를 모두 가지고 있으며 자바 어플리케이션에서 관계형 데이터베이스(RDB)를 사용하는 방식을 정의한 Interface 입니다. 그래서 본 예제에서는 jpa 를 이용하여 쿼리 없이 insert select를 구현했습니다.::: 4. Memo.java자바 객체 Model 과 DB 테이블 매핑을 위해 JPA 가 사용할수 있는 Model 을 entity 폴더에 만듭니다. Lombok 어노테이션을 사용하여 불필요한 코딩을줄였습니다. 6 라인 : builder 를 사용하기 위한 어노테이션 입니다. 7 라인 : JPA Entity 라는 의미 입니다. 8,9 라인 : setter,getter 를 자동으로 생성합니다. 10 라인 : 인자없는 생성자를 자동 생성합니다. 11 라인 : 인자를 모두 갖춘 생성자를 자동 생성합니다. 12 라인 : memo 테이블과 매핑됨을 명시합니다. 14 라인 : primary key 를 선언합니다. 15 라인 : auto increment 칼럼을 의미 합니다. 18,21 라인 : 제목과 내용을 정의하고 각각의 길이를 정의합니다.1234567891011121314151617181920212223package io.github.goodsaem.api.entity;import lombok.*;import javax.persistence.*;@Builder@Entity@Setter@Getter@NoArgsConstructor@AllArgsConstructor@Table(name=&quot;memo&quot;)public class Memo &#123; @Id @GeneratedValue(strategy = GenerationType.IDENTITY) private long idx; @Column(nullable = false, length = 30) private String title; @Column(nullable = false, length = 4000) private String contents;&#125; ::: tip JPA Primary Key 지정방법 직접 지정 : @Id 어노테이션으로 필드와 매핑합니다. 자바 기본형,래퍼형,String,Date,BigDecimal,BigInteger 타입이 가능합니다. IDENTITY : @GeneratedValue(strategy &#x3D; GenerationType.IDENTITY) 를 사용하며 키 생성을 데이터베이스에 위임합니다. auto increment와 같은 기능을 사용할때 사용합니다. IDENTITY 를 사용하면 데이터를 insert 한 후 기본 키 값을 가져오기 위한 조회 문장을 실행합니다. SEQUENCE : 시퀀스를 사용해서 기본키를 생성성합니다. @SequenceGenerator name 식별자 생성기 이름을 지정해주고 sequenceName 에 db 에 등록되어 있는 시퀀스 정보를 입력합니다. initialValue 는 초기값을 지정하고 allocationSize 는 시퀀스가 증가하는 수 여기서는 1씩 증가합니다. 저장할때DB 시쿼스를 가져오기 insert 를 수행합니다. 12345678@Entity@SequenceGenerator(name = &quot;SEQ_MEMO_GENERATOR&quot;, sequnceName = &quot;SEQ_MEMO&quot; initialValue = 1, allocationSize = 1)public class Memo &#123; @Id @GeneratedValue(strategy = GenerationType.SEQUENCE, generator = &quot;SEQ_MEMO_GENERATOR&quot;) private Long idx;&#125; TABLE : 키 생성 전용 테이블을 하나 만들어 기본키를 생성하는 방법입니다. @TableGenerator 어노테이션을 사용하며 여기에 지정된 테이블과 pk 칼럼과증가하는 사이즈를 이용하여 기본키를 생성합니다.123456789101112131415161718192021@Entity@TableGenerator(name = &quot;SEQ_MEMO_GENERATOR&quot;, table = &quot;SEQUNCE_MEMO&quot; pkColumnValue = &quot;SEQ_MEMO&quot;, allocationSize = 1)public class Memo &#123;@Id@GeneratedValue(strategy = GenerationType.TABLE, generator = &quot;SEQ_MEMO_GENERATOR&quot;)private Long idx;&#125;``` :::## 5. MemoJpaRepo.javaJPA 에서 제공해주는 API 를 이용하여 테이블에 질의하기 위한 Repository 를 생성합니다.```javapackage io.github.goodsaem.api.repo;import io.github.goodsaem.api.entity.Memo;import org.springframework.data.jpa.repository.JpaRepository;public interface MemoJpaRepo extends JpaRepository&lt;Memo, Long&gt; &#123;&#125; 6. MemoController.java사용자 요청에 따라 위에서 생성한 MemoJpaRepo 를 이용하여 테이블에 insert select 를 수행하고 결과를 리턴하는 역할을 수행합니다. 10 라인 : memoJpaRepo 객체를 Constructor Injection 작업을 수행하기 위해 사용합니다. 11 라인 : 결과값을 json 형태로 리턴합니다. 12 라인 : api resource 를 버전별로 관리하기 위해서 사용하는 방법으로 보통 v1 v2 v3 이런씩으로 번호를 올려가면서 관리합니다. 16 라인 : get 방식으로 &#x2F;memo 를 호출하면 findAll 메소드를 이용하여 memo 테이블에 있는 모든 데이터르 보여줍니다. 즉 select * from memo 한 결과를 리턴합니다. 21 라인 : post 방식으로 &#x2F;memo 를 호출하면 save 메소드를 이용하여 memo 데이터를 디비에 인서트 합니다. insert into memo (idx,title,contents) values (null,?,?) 한결과와 동일합니다. 12345678910111213141516171819202122232425package io.github.goodsaem.api.controller.v1;import io.github.goodsaem.api.entity.Memo;import io.github.goodsaem.api.repo.MemoJpaRepo;import lombok.RequiredArgsConstructor;import org.springframework.web.bind.annotation.*;import java.util.List;@RequiredArgsConstructor@RestController@RequestMapping(value = &quot;/v1&quot;)public class MemoController &#123;private final MemoJpaRepo memoJpaRepo; @GetMapping(value = &quot;/memo&quot;) public List&lt;Memo&gt; findAllUser() &#123; return memoJpaRepo.findAll(); &#125; @PostMapping(value = &quot;/memo&quot;) public Memo save(@RequestBody Memo memo) &#123; return memoJpaRepo.save(memo); &#125;&#125; :::tip 생성자 주입 방식(Constructor Injection)생성자 주입을 사용하는 이유는 아래 링크를 참고해 주세요Constructor-주입을-사용하자::: 7. 테스트테스트는 postman 을 사용해서 진행하겠습니다. https://www.postman.com/downloads/ 사이트에서 Download the App버튼을 클릭하여 설치를 진행해 주세요 http 전송방식은 POST 로 지정을 하시고 url 은 http://localhost:9090/v1/memo 를 지정하고 Headers Contents-Type을 application&#x2F;json 으로 지정합니다. body 부분은 아래와 같이 입력하고 post 버튼을 클릭합니다. 1234&#123; &quot;title&quot; : &quot;memo title1&quot;, &quot;contents&quot; : &quot;memo content1&quot;&#125; 동일한 url 을 사용하고 http 방식만 get 방식으로 변경하고 send 버튼을 클릭하면 아래와 같이 등록한 데이터를 리스트업 되는걸 확인할수 있습니다. 8. application.yml 수정properties.hibernate.hbm2ddl.auto: update 속성 값에 따라 테이블이 자동 생성 또는 수정되었습니다. 개발 모드에서는 이렇게 사용해도 되는데 운영환경에서는 이렇게 지정하면 원하지 않는 디비 변경이 발생하여 문제가 될수 있습니다. 아래와 같이 none 으로 변경합니다. 12345678910111213server: port: 9090spring: datasource: url : jdbc:h2:/Users/goodsaem/goodsaem/api/goodsaem driver-class-name: org.h2.Driver username: goodsaem password: xxxxxxxxxxxx jpa: database-platform: org.hibernate.dialect.H2Dialect properties.hibernate.hbm2ddl.auto: none showSql: true properties.hibernate.hbm2ddl.auto 값 설명 구분 설명 create application 이 시작할때 모든 테이블을 생성합니다. create-drop application 이 시작할때 테이블을 생성하고 종료할때는 테이블을 drop 합니다. update application 시작 시 Entity 와 테이블을 비교하여 변경된 내용을 반영합니다. 테이블이 없으면 생성하고 칼럼이 없으면 추가합니다. validate application 시작시 Entity 와 테이블을 비교하여 동일하지 않으면 application 을 종료합니다. none 아무런 처리를 하지 않습니다. 마무리대충 보고 넘어갔던 내용들을 글로 적으니 하나씩 그 의미를 찾아보게 되네요 제가 글을 써가면서 제 실력이 향상된다고 믿으며 오늘도 긴글 끝까지 읽어주신분들에게 고마운 마음을 전합니다. 감사합니다.","categories":[{"name":"Coding","slug":"Coding","permalink":"http://goodsaem.github.io/categories/Coding/"},{"name":"springboot","slug":"Coding/springboot","permalink":"http://goodsaem.github.io/categories/Coding/springboot/"}],"tags":[{"name":"springboot","slug":"springboot","permalink":"http://goodsaem.github.io/tags/springboot/"}]},{"title":"2. SpringBoot Backend 서버 구축","slug":"coding/springboot/springboot102","date":"2023-03-25T16:09:03.000Z","updated":"2025-06-29T07:42:00.899Z","comments":true,"path":"coding/springboot/springboot102/","link":"","permalink":"http://goodsaem.github.io/coding/springboot/springboot102/","excerpt":"","text":"2. SpringBoot 첫 예제rest api 만들기 2번째 시간입니다. 오늘은 새로운 언어를 배울때 항상 제일 먼저 나오는 hello 출력을 진행하겠습니다. rest api 니 ur l을호출하면 hello goodsaem! 을 출력하는 api를 만들어 보겠습니다. [[toc]] 1. 디렉토리 구조프로젝트 생성이 정상적으로 진행되었다면 아래와 그림과 같은 디렉토리 구조를 가집니다. 아래 3개 폴더를 만들어 주세요. controller 폴더 template 폴더 ::: tip 폴더생성방법io.github.goodsaem.api 패키지에서 마우스 오른쪽 버튼을 클릭하여 New Package 를 선택하여 controller 라고 입력하면controller 폴더가 생성됩니다. 동일한 형태로 각각의 폴더를 만들어 주세요. ::: 다만들고 나면 아래와 같은 구조가 됩니다. 12345678910build.gradlesrc└── main ├── java │ └── io.github.goodsaem.api │ ├── ApiApplication.java │ └── controller └── resources ├── application.yml └── templates 2. file 추가 controller 폴더 MyController.java 파일을 생성합니다. resources 폴더 application.properties 파일을 삭제합니다. application.yml 파일을 생성합니다. banner.txt 파일을 생성합니다. templates 폴더 goodaem.ftlh 파일을 생성합니다. 12345678910111213build.gradlesrc└── main ├── java │ └── io.github.goodsaem.api │ ├── ApiApplication.java │ └── controller │ └── MyController.java └── resources ├── application.yml ├── banner.txt └── templates └── goodsaem.ftlh 3. 코딩3.1 banner.txtspring boot 시작할때 콘솔창을 보면 텍스트 이모티콘으로 spring boot 라는 글자가 보이는데요이걸 아래와 같은 텍스트로 변경해 보겠습니다. 아래 사이트 들어가서 원하는 글자를 만든 후 텍스트를 복새하세요그리고 나서 추가한 banner.txt 파일에 붙여 넣기를 합니다. 텍스트를 입력하면 이모티콘으로 변경해주는 사이트 1234567 ██████╗ ██████╗ ██████╗ ██████╗ ███████╗ █████╗ ███████╗███╗ ███╗██╔════╝ ██╔═══██╗██╔═══██╗██╔══██╗██╔════╝██╔══██╗██╔════╝████╗ ████║██║ ███╗██║ ██║██║ ██║██║ ██║███████╗███████║█████╗ ██╔████╔██║██║ ██║██║ ██║██║ ██║██║ ██║╚════██║██╔══██║██╔══╝ ██║╚██╔╝██║╚██████╔╝╚██████╔╝╚██████╔╝██████╔╝███████║██║ ██║███████╗██║ ╚═╝ ██║ ╚═════╝ ╚═════╝ ╚═════╝ ╚═════╝ ╚══════╝╚═╝ ╚═╝╚══════╝╚═╝ ╚═╝:: Spring Boot :: (v2.4.2) 그럼 시작 할때 아래와 같은 배너를 확인할수 있습니다. 3.2 application.ymlspring boot 서비스 port 를 9090 서비스 포트에서 서비스 하기 위해 아래 내용을 추가합니다. 12server: port: 9090 3.3 MyController.java간단히 코드 설명을 하면… 20 라인 : string 형태로 출을 합니다. 28 라인 : json 형태로 출력 합니다. 35 라인 : freemaker template 엔진을 이용하여 html page 형태로 출력합니다. 1234567891011121314151617181920212223242526272829303132333435363738package io.github.goodsaem.api.controller;import lombok.Getter;import lombok.Setter;import org.springframework.stereotype.Controller;import org.springframework.web.bind.annotation.GetMapping;import org.springframework.web.bind.annotation.ResponseBody;@Controllerpublic class MyController &#123; private final String MSG=&quot;안녕하세요 좋은 선생님 goodsaem! 입니다.&quot;; @Setter @Getter public static class JsonObj &#123; private String msg; &#125; @GetMapping(value = &quot;/goodsaem/string&quot;) @ResponseBody public String getString() &#123; return MSG; &#125; @GetMapping(value = &quot;/goodsaem/json&quot;) @ResponseBody public JsonObj getJson() &#123; JsonObj obj = new JsonObj(); obj.msg = MSG; return obj; &#125; @GetMapping(value = &quot;/goodsaem/page&quot;) public String helloworld() &#123; return &quot;goodsaem&quot;; &#125;&#125; 3.4 goodsaem.ftlhfree maker template 페이지 입니다.::: danger .ftlh최근 freemaker 확장자가 변경되었습니다.fth 였는데 .fthl 로 변경되었습니다. 이걸 몰라서 한참을 구글링 했습니다.::: 12345678910111213&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt; &lt;title&gt;goodsaem&lt;/title&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;&lt;/head&gt;&lt;body&gt;안녕하세요 좋은 선생님 goodsaem! 입니다.&lt;/body&gt;&lt;/html&gt; 4. 실행Intellij 우측 상단의 실행 아이콘을 클릭하여 application 을 가동합니다. 정상적으로 실행되면 콘솔창에 아래와 같이 출력 됩니다. 5. 테스트 string json page 마무리어렵지 않은 내용인데 .fthl 에서 시간을 많이 낭비 했습니다. 프로그램을 작성하다 보면 이건 왜 안되지 이건 왜 되지 ?이런 일들의 연속인데요 그런데 다 이유가 있더라구요 뭔가 안된다면 의심을 하시구요 내가 생각한게 틀릴수도 있다는 유연한생각을 가지고 문제를 하나씩 풀어가다 보면 해결될거라 생각합니다. 긴글 읽어주셔서 감사합니다. 보다 좋은글로 보답하겠습니다.","categories":[{"name":"Coding","slug":"Coding","permalink":"http://goodsaem.github.io/categories/Coding/"},{"name":"springboot","slug":"Coding/springboot","permalink":"http://goodsaem.github.io/categories/Coding/springboot/"}],"tags":[{"name":"springboot","slug":"springboot","permalink":"http://goodsaem.github.io/tags/springboot/"}]},{"title":"1. SpringBoot Backend 서버 구축","slug":"coding/springboot/springboot101","date":"2023-03-25T16:08:03.000Z","updated":"2025-06-29T07:42:00.883Z","comments":true,"path":"coding/springboot/springboot101/","link":"","permalink":"http://goodsaem.github.io/coding/springboot/springboot101/","excerpt":"","text":"개요인텔리제이 springboot 개발환경을 구축하여 backend 프레임워크 구성을 진행 하고자 한다.본 기술블로그에서 vue 관련 내용들을 정리 예정인데 backend framework는 springboot를사용할 예정이다. jpa swagger mybatis 등 실무에서 사용하는 기술들에 대해 정리 예정이다. 인텔리제이 설치먼저 아래 사이트에서 인텔리제이 커뮤니티를 다운로드한다. 참고로 굳쎔은 Ultimate 버전을구매해서 사용중이다. 나중에 vue.js를 코딩을 할때 ultimate 버전을 가지고 있다고 백엔드와프론트 모두 한가지 ide로 할수 있어 여러모로 편리하다. 인텔리제이 다운로드 springboot project 생성spring starter 사이트에서 spring 프로젝트를 생성함.아래와 같이 설정을하고 GENERATE 버튼을 클릭하면 해당 설정되로 압축 파일이 생성 및 다운로드됨.다운로드후 압축 파일 풀어서 적당한 위치에 옮겨 해당 디렉토리를 불러오면 설정완료 구분 설정 비고 Project Gradle Project 선택 Language Java 선택 Spring Boot 3.0.5 선택 Group io.github.goodsaem GroupId는 프로젝트를 식별해 주는 고유값. 각자의 도메인으로 설정함 Artifact api war 나 jar 파일을 만들때 사용되며 버전정보를 제외한 파일이름 Name api Description rest api Package name io.github.goodsaem.api 각자 맞게 설정 Packaging war Java 17 안정버전을 선택 Dependencies Lombok getter 나 setter 등을 자동완성할때 사용 H2 Database H2 db 사용 MariaDB Driver maria db 연결 Spring JPA Java Persistence API 로 객체 지향적으로 데이터를 관리 openjdk 최신버전 설치방법은 아래 링크 참고할것mac에 oepnjdk 19.0.1 버전 설치방법 인텔리제이에서 프로젝트 오픈압축 푼 디렉토리를 인테리제이에서 Open 한다.오픈 후 먼저 프로젝트 SDK 선택및 프로젝트에서 컴파일할 java 버전을 지정한다. 폴더에서 우클릭 하여 아래 그림과 같이 Open Moudule Setttings 메뉴를 클릭한다. SDKS 메뉴를 클릭한다. +아이콘을 클릭한다. open jdk 19 를 선택한다. 프로젝트 메뉴를 선택한다. jdk를 선택한다. 프로젝트 언어 레벨을 17로 맞춘다. 해당 과정이 끝나고 나면 build.gradle 에 정의되어 있는 라이브러리를 자동으로 불러 온다.만약 라이브러리를 제되로 불러오지 않는다면 Gradle 메뉴를 클릭하고 아이콘을클릭하여 필요한 모듈을 다시 불러온다. 마무리여기까지 springboot + 인텔리제이 개발 환경을 셋팅했다. 이제 실제 springboot 를 통한 예제를 하나씩실습해보면서 spring boot를 마스터 해보자.","categories":[{"name":"Coding","slug":"Coding","permalink":"http://goodsaem.github.io/categories/Coding/"},{"name":"springboot","slug":"Coding/springboot","permalink":"http://goodsaem.github.io/categories/Coding/springboot/"}],"tags":[{"name":"springboot","slug":"springboot","permalink":"http://goodsaem.github.io/tags/springboot/"}]},{"title":"13/13 무료 aws + springboot 서버 구축","slug":"setup/aws-springboot-13","date":"2023-03-25T11:13:00.000Z","updated":"2025-06-29T07:42:01.071Z","comments":true,"path":"setup/aws-springboot-13/","link":"","permalink":"http://goodsaem.github.io/setup/aws-springboot-13/","excerpt":"","text":"13. vue용 메모앱aws 에 프리티어 서버를 만들고 도메인을 발급받고 jdk 를 설치하고 springboot app 까지 만든이유는 결국 vue.js로화면을 만들기 위함 입니다. 초간단 메모 app을 만들어 보겠습니다. 1. 화면디자인만들화면에 대해서 대략적인 화면설계를 해보았습니다. 제목 내용에 해당하는 메모를 검색합니다. 체크박스 체크된 메모를 선택하고 삭제버튼을 클릭하면 체크된 메모를 삭제합니다. 등록 버튼을 클릭하면 우측의 등록 화면의 제목쪽으로 포커스를 이동합니다. 등록 버튼을 클릭하면 메모가 등록되고 좌측에 메모가 하나 추가 됩니다. 페이지 번호를 클릭하면 해당 페이지에 속하는 메모가 리스트업 됩니다. 좌측 메모리스트에서 row를 클릭하면 우측에 제목과 내용이 보이고 수정모드로 변합니다. 수정모드에서 수정 버튼을 클릭하면 메모가 수정되고 수정된 내용이 좌측 리스트에 반영됩니다. 2. 화면개발위 화면 설계서 되로 아래와 같이 화면을 개발해 보았습니다.개발하다가 조금더 욕심이 생겨 전체 갯수도 표시하고 한페이지당 보여줄 갯수도 변경했습니다.등록&#x2F;검색 버튼을 클릭하여 app 이 제되로 동작하는 확인해 보세요. 참고로 아래 ui 컴포넌트는 element ui를이용하여 개발 했습니다. 3. backend 서비스 수정위 화면에서 사용하는 backend 관련 수정파일은 아래와 같습니다. 12. springboot application 만들기해당 강좌에서 아래 4개 파일만 수정하시고 수정되면 동일한 요령으로 build 해서 서버에 배포 하고 서비스를 재시작 합니다. 15,19,21,22 라인 1234567891011121314151617181920212223242526.├── build.gradle└── src └── main ├── java │ └── io │ └── github │ └── goodsaem │ └── api │ ├── ApiApplication.java │ ├── config │ │ └── WebConfig.java │ ├── controller │ │ └── v1 │ │ └── MemoController.java │ ├── entity │ │ └── Memo.java │ ├── repo │ │ └── MemoJpaRepo.java │ └── service │ ├── IMemoService.java │ └── MemoService.java └── resources ├── application.yml ├── banner.txt └── templates 4. MemoController.java메모 검색 및 페이징 처리를 위해서 아래와 같이 &#x2F;memo&#x2F;search 컨트롤러를 추가했습니다. pageable jpa에서 지원해주는 객체로 페이징 처리를 위해필요한 값 페이지당 보여줄 row 수와 현재페이지 정보를 넘겨주면 알아서 가져올 데이터량을 줄여 줍니다. 즉 query에 offset 과 limit 문장이추가됩니다. 눈여겨 보아야 되는 부분은 다건 삭제 부분입니다. 삭제 기능은 여러건을 넘겨서 일괄 삭제하는데 pathVariable 로 &#x2F;spring&#x2F;v1&#x2F;memo&#x2F;1,2,3이런씩으로 넘기면 이를 List로 받아서 for문을 돌리면서 하나씩 삭제 하는 부분입니다. 51-56 라인 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657package io.github.goodsaem.api.controller.v1;import io.github.goodsaem.api.entity.Memo;import io.github.goodsaem.api.service.IMemoService;import lombok.RequiredArgsConstructor;import lombok.extern.slf4j.Slf4j;import org.springframework.data.domain.Page;import org.springframework.data.domain.Pageable;import org.springframework.data.web.PageableDefault;import org.springframework.web.bind.annotation.*;import java.util.List;@RequiredArgsConstructor@RestController@RequestMapping(value = &quot;/v1&quot;)@Slf4jpublic class MemoController &#123; private final IMemoService iMemoService; @GetMapping(value = &quot;/memo/search&quot;) public Page&lt;Memo&gt; searchMemo(@RequestParam String keyword, @PageableDefault(size=3,sort=&quot;id&quot;) Pageable pageable) &#123; return iMemoService.searchMemo(keyword,pageable); &#125; @GetMapping(value = &quot;/memos&quot;) public List&lt;Memo&gt; readMemos() &#123; return iMemoService.readMemos(); &#125; @GetMapping(value = &quot;/memo/&#123;id&#125;&quot;) public Memo readMemo(@PathVariable long id) &#123; return iMemoService.readMemo(id); &#125; @PostMapping(value = &quot;/memo&quot;) public Memo createMemo(@RequestBody Memo memo) &#123; return iMemoService.createMemo(memo.getTitle(), memo.getContents()); &#125; @PutMapping(value = &quot;/memo&quot;) public Memo updateMemo(@RequestBody Memo memo) &#123; return iMemoService.updateMemo(memo.getId(), memo.getTitle(), memo.getContents()); &#125; @DeleteMapping(value = &quot;/memo/&#123;id&#125;&quot;) public void deleteMemo(@PathVariable long id) &#123; iMemoService.deleteMemo(id); &#125; @DeleteMapping(value = &quot;/memos/&#123;ids&#125;&quot;) public void deleteMemos(@PathVariable(&quot;ids&quot;) List&lt;Long&gt; ids) &#123; for(Long id:ids) &#123; iMemoService.deleteMemo(id); &#125; &#125;&#125; 5. MemoJpaRepo.java검색조건을 가져오는 부분을 아래와 같이 @Query를 통해서 작성해 보았습니다. 이렇게 진행하지 않고 세련되게 작성하는 방법도 있을것 같은데 아직jpa에 익숙하지 않아 내공이 쌓이면 따로 정리하겠습니다. 화면에서 검색어 keyword가 전달되면 제목 및 내용에서 찾는 간단한 sql 입니다.정렬은 가장 마지막에 등록한 메모가 보이게 했구요 countQuery도 같이 작성하여 페이징 처리시 참고 합니다. 1234567891011121314151617package io.github.goodsaem.api.repo;import io.github.goodsaem.api.entity.Memo;import org.springframework.data.domain.Page;import org.springframework.data.domain.Pageable;import org.springframework.data.jpa.repository.JpaRepository;import org.springframework.data.jpa.repository.Query;public interface MemoJpaRepo extends JpaRepository&lt;Memo, Long&gt; &#123; Page&lt;Memo&gt; findAll(Pageable pageable); @Query( value = &quot;SELECT m FROM Memo m WHERE m.title LIKE %:keyword% OR m.contents LIKE %:keyword% ORDER BY m.id DESC&quot;, countQuery = &quot;SELECT COUNT(m.id) FROM Memo m WHERE m.title LIKE %:keyword% OR m.contents LIKE %:keyword%&quot; ) Page&lt;Memo&gt; findAllSearch(String keyword,Pageable pageable);&#125; 6. IMemoService.java메모 검색을 사용하기 위한 searchMemo 메소드를 추가했습니다. 1234567891011121314package io.github.goodsaem.api.service;import io.github.goodsaem.api.entity.Memo;import org.springframework.data.domain.Page;import org.springframework.data.domain.Pageable;import java.util.List;public interface IMemoService &#123; List&lt;Memo&gt; readMemos(); Page&lt;Memo&gt; searchMemo(String keyword, Pageable pageable); Memo readMemo(long id); Memo createMemo(String title,String contents); Memo updateMemo(long id,String title,String contents); void deleteMemo(long id);&#125; 7. MemoService.java메모 서비스에서 메모를 검색하는 부분을 구현했습니다. 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162package io.github.goodsaem.api.service;import io.github.goodsaem.api.entity.Memo;import io.github.goodsaem.api.repo.MemoJpaRepo;import lombok.RequiredArgsConstructor;import lombok.extern.slf4j.Slf4j;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.data.domain.Page;import org.springframework.data.domain.Pageable;import org.springframework.stereotype.Service;import java.util.List;@Slf4j@Service@RequiredArgsConstructorpublic class MemoService implements IMemoService &#123; private final MemoJpaRepo memoJpaRepo; @Override public List&lt;Memo&gt; readMemos() &#123; return memoJpaRepo.findAll(); &#125; @Override public Page&lt;Memo&gt; searchMemo(String keyword, Pageable pageable) &#123; Page&lt;Memo&gt; memo = memoJpaRepo.findAllSearch(keyword,pageable); return memo; &#125; @Override public Memo readMemo(long id) &#123; return memoJpaRepo.findById(id).orElse(null); &#125; @Override public Memo createMemo(String title, String contents) &#123; Memo memo = Memo.builder() .title(title) .contents(contents) .build(); return memoJpaRepo.save(memo); &#125; @Override public Memo updateMemo(long id, String title, String contents) &#123; Memo memo = Memo.builder() .id(id) .title(title) .contents(contents) .build(); return memoJpaRepo.save(memo); &#125; @Override public void deleteMemo(long id) &#123; memoJpaRepo.deleteById(id); &#125;&#125; 8. FrontEnd Source Description MemoCreate.vue위 화면중 우측 부분 내용으로 메모를 등록하는 폼은 다른 화면에서 사용할수 있을것 같아 별도의 컴포넌트로 분리했습니다. MemoCreate를 호출하는부모 컨포넌트는 memo 모델을 넘겨줍니다. 그럼 memo 모델의 값을 복제해서 화면에서 활용하고 데이터 수정이 끝나고 저장 버튼을 누르면상위 컴포넌트에게 save 되었다고 알려(emit) 줍니다. 자세한 내용은 vue 강좌 때 다시 설명하겠습니다. 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465&lt;template&gt; &lt;div style=&quot;margin-top: 10px&quot;&gt; &lt;el-row&gt; &lt;el-col :span=&quot;4&quot; align=&quot;center&quot;&gt; 제목 &lt;/el-col&gt; &lt;el-col :span=&quot;20&quot;&gt; &lt;el-input ref=&quot;title&quot; placeholder=&quot;메모 제목을 입력하세요&quot; v-model=&quot;memo.title&quot;&gt;&lt;/el-input&gt; &lt;/el-col&gt; &lt;/el-row&gt; &lt;el-row style=&quot;margin-top: 10px&quot;&gt; &lt;el-col :span=&quot;4&quot; align=&quot;center&quot;&gt; 내용 &lt;/el-col&gt; &lt;el-col :span=&quot;20&quot;&gt; &lt;el-input type=&quot;textarea&quot; :rows=&quot;7&quot; placeholder=&quot;Please input&quot; v-model=&quot;memo.contents&quot;&gt; &lt;/el-input&gt; &lt;/el-col&gt; &lt;/el-row&gt; &lt;el-row style=&quot;margin-top: 10px&quot;&gt; &lt;el-col :span=&quot;24&quot; align=&quot;center&quot;&gt; &lt;el-button type=&quot;primary&quot; @click=&quot;saveMemo&quot;&gt;저장&lt;/el-button&gt; &lt;/el-col&gt; &lt;/el-row&gt; &lt;/div&gt;&lt;/template&gt;&lt;script&gt;export default &#123; name: &quot;MemoCreate&quot;, props : &#123; model : &#123; type : Object, &#125; &#125;, created() &#123; &#125;, data() &#123; return &#123; memo : &#123; id : -1, title : &#x27;&#x27;, contents : &#x27;&#x27;, &#125;, &#125; &#125;, methods: &#123; create() &#123; &#125;, saveMemo() &#123; this.$emit(&quot;save&quot;,this.memo) &#125; &#125;, watch: &#123; model(model) &#123; this.memo = Object.assign(&#123;&#125;,model); this.$refs.title.focus(); &#125; &#125;&#125;&lt;/script&gt;&lt;style scoped&gt;&lt;/style&gt; Exam5.vue검색 및 결과를 출력하는 컴포넌트 입니다. 화면을 그리는 부분 빼고 실제 코딩은 많지 않습니다. data 값만 잘 주고 받ㅇ면 화면은잘 표현되니까 자세한 내용은 역시 다음 시간으로 돌리겠습니다. 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166&lt;template&gt; &lt;div style=&quot;margin-top: 10px&quot;&gt; &lt;el-row&gt; &lt;el-col :span=&quot;12&quot;&gt; &lt;el-row&gt; &lt;el-col :span=&quot;4&quot; style=&quot;padding-right: 10px;&quot;&gt; 검색어 : &lt;/el-col&gt; &lt;el-col :span=&quot;12&quot; style=&quot;padding-right: 10px;&quot;&gt; &lt;el-input @change=&quot;searchMemo&quot; v-model=&quot;keyword&quot;&gt;&lt;/el-input&gt; &lt;/el-col&gt; &lt;el-col :span=&quot;8&quot; style=&quot;padding-left: 10px;&quot;&gt; &lt;el-button type=&quot;primary&quot; @click=&quot;searchMemo&quot;&gt;메모검색&lt;/el-button&gt; &lt;/el-col&gt; &lt;/el-row&gt; &lt;el-row style=&quot;margin-top: 10px&quot;&gt; &lt;el-col&gt; 전체 : &#123;&#123; total &#125;&#125; &lt;el-button type=&quot;primary&quot; @click=&quot;deleteMemo&quot;&gt;삭제&lt;/el-button&gt; &lt;el-button type=&quot;primary&quot; @click=&quot;createMemo&quot;&gt;등록&lt;/el-button&gt; &lt;el-select v-model=&quot;size&quot; placeholder=&quot;한페이지당 row수&quot; @change=&quot;searchMemo&quot; &gt; &lt;el-option v-for=&quot;(row,index) in 100&quot; :key=&quot;index&quot; :label=&quot;row&quot; :value=&quot;row&quot;&gt; &lt;/el-option&gt; &lt;/el-select&gt; &lt;/el-col&gt; &lt;/el-row&gt; &lt;el-row style=&quot;margin-top: 10px&quot;&gt; &lt;el-col&gt; &lt;el-row&gt; &lt;el-table ref=&quot;table&quot; v-if=&quot;gridData.length &gt;= 0&quot; @row-click=&quot;rowClick&quot; :data=&quot;gridData&quot; style=&quot;width: 100%&quot;&gt; &lt;el-table-column type=&quot;selection&quot; align=&quot;center&quot; width=&quot;55&quot;&gt; &lt;/el-table-column&gt; &lt;el-table-column prop=&quot;id&quot; align=&quot;center&quot; label=&quot;번호&quot; width=&quot;50&quot;&gt; &lt;/el-table-column&gt; &lt;el-table-column prop=&quot;title&quot; label=&quot;제목&quot; header-align=&quot;center&quot; style=&quot;width: 95%&quot;&gt; &lt;/el-table-column&gt; &lt;/el-table&gt; &lt;/el-row&gt; &lt;el-row style=&quot;margin-top: 10px&quot;&gt; &lt;el-col&gt; &lt;el-pagination background layout=&quot;prev, pager, next&quot; @current-change=&quot;chgPage&quot; :current-page=&quot;page+1&quot; :page-size=&quot;size&quot; :total=&quot;total&quot;&gt; &lt;/el-pagination&gt; &lt;/el-col&gt; &lt;/el-row&gt; &lt;/el-col&gt; &lt;/el-row&gt; &lt;/el-col&gt; &lt;el-col :span=&quot;12&quot; style=&quot;border-left: 1px solid #efefef;&quot;&gt; &lt;memo-create :model=&quot;memo&quot; @save=&quot;saveMemo&quot;/&gt; &lt;/el-col&gt; &lt;/el-row&gt; &lt;/div&gt;&lt;/template&gt;&lt;script&gt;const URL = &quot;https://goodsaem.ml/spring&quot;;//const URL = &quot;http://localhost:9090/spring&quot;;import MemoCreate from &quot;./MemoCreate&quot;;export default &#123; name: &quot;Exam5&quot;, created() &#123; &#125;, components: &#123; MemoCreate &#125;, data() &#123; return &#123; page: 0, size : 3, total : 0, keyword: &#x27;&#x27;, memo: &#123; title: &#x27;&#x27;, contents: &#x27;&#x27;, &#125;, gridData: [], &#125; &#125;, methods: &#123; create() &#123; &#125;, rowClick(v) &#123; this.memo = v; &#125;, chgPage(page) &#123; this.page=page-1 this.searchMemo(); &#125;, saveMemo(memo) &#123; if (memo.id === -1) &#123; this.$http.post(URL + &#x27;/v1/memo&#x27;, memo).then((response) =&gt; &#123; this.searchMemo(); &#125;) &#125; else &#123; this.$http.put(URL + &#x27;/v1/memo&#x27;, memo).then((response) =&gt; &#123; this.searchMemo(); &#125;) &#125; &#125;, createMemo() &#123; this.memo = Object.assign(&#123; id : -1, title : &#x27;&#x27;, contents : &#x27;&#x27;, &#125;) &#125;, deleteMemo() &#123; let ids = &quot;&quot;; this.$refs.table.selection.map(r =&gt; ids += r.id + &quot;,&quot;); ids = ids.substring(0,ids.length-1); if(this.$refs.table.selection.length &gt; 0) &#123; this.$http.delete(URL + &#x27;/v1/memos/&#x27; + ids) .then((response) =&gt; &#123; this.$message(&quot;정상적으로 삭제되었습니다.&quot;); this.searchMemo(); &#125;) &#125; &#125;, searchMemo() &#123; this.$http.get(URL + &#x27;/v1/memo/search&#x27;, &#123; params: &#123; keyword : this.keyword, page: this.page, size: this.size, &#125; &#125;) .then((response) =&gt; &#123; console.log(response) this.gridData = response.data.data.content; this.total = response.data.totalElements; &#125;) &#125; &#125;&#125;&lt;/script&gt;&lt;style scoped&gt;&lt;/style&gt; 마치며처음 vue 공부를 할때는 정말 어려웠는데 이제 정말 편할수가 없네요 아직 복잡한 화면을 안만들어봐서 그런지 springboot가 더 어렵다는 생각이 듭니다.계속 하다보면 늘겠죠. 한걸음 한걸음씩 꾸준히 진행하겠습니다. 긴글 읽어주셔서 감사합니다. ::: tip 전체 소스12. springboot application 만들기 의 소스다운 로드 하신후 위의 4개 파일만변경하시고 build 하면 정상동작합니다.(backend) frontend 는 시간될때 독립적으로 움직일수 있도록 vue project를 따로 만들어 배포하겠습니다.:::","categories":[{"name":"설치","slug":"설치","permalink":"http://goodsaem.github.io/categories/%EC%84%A4%EC%B9%98/"},{"name":"SPRINGBOOT","slug":"설치/SPRINGBOOT","permalink":"http://goodsaem.github.io/categories/%EC%84%A4%EC%B9%98/SPRINGBOOT/"}],"tags":[{"name":"AWS","slug":"AWS","permalink":"http://goodsaem.github.io/tags/AWS/"},{"name":"SPRINGBOOT","slug":"SPRINGBOOT","permalink":"http://goodsaem.github.io/tags/SPRINGBOOT/"}]},{"title":"12/13 무료 aws + springboot 서버 구축","slug":"setup/aws-springboot-12","date":"2023-03-25T11:12:00.000Z","updated":"2025-06-29T07:42:01.064Z","comments":true,"path":"setup/aws-springboot-12/","link":"","permalink":"http://goodsaem.github.io/setup/aws-springboot-12/","excerpt":"","text":"12. 메모앱 만들기지금까지 구축한 aws 서버위에 간단한 메모 application을 만들어서 배포 하겠습니다. 1. 테이블 생성 및 초기데이터 적재테이블을 생성하고 초기 데이터를 인서트 합니다. 아래 스크립트는 aws 의 mariadb 에서 실행합니다. 먼저 메모 테이블을 생성합니다. 123456CREATE TABLE `memo` ( `id` bigint(20) NOT NULL, `contents` varchar(4000) NOT NULL, `title` varchar(200) NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4; 자동증가 시쿼스 테이블을 만듭니다. 123CREATE TABLE `hibernate_sequence` ( `next_val` bigint(20) DEFAULT NULL) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4; 초기 데이터를 생성합니다. 123456INSERT INTO memo (id, contents, title) VALUES(1, &#x27;내용1&#x27;, &#x27;제목1&#x27;);INSERT INTO memo (id, contents, title) VALUES(2, &#x27;내용2&#x27;, &#x27;제목2&#x27;);INSERT INTO memo (id, contents, title) VALUES(3, &#x27;내용3&#x27;, &#x27;제목3&#x27;);INSERT INTO hibernate_sequence (next_val) VALUES(4); 2. 앱구조springboot application 구조는 아래와 같습니다. 1234567891011121314151617181920212223242526.├── build.gradle└── src └── main ├── java │ └── io │ └── github │ └── goodsaem │ └── api │ ├── ApiApplication.java │ ├── config │ │ └── WebConfig.java │ ├── controller │ │ └── v1 │ │ └── MemoController.java │ ├── entity │ │ └── Memo.java │ ├── repo │ │ └── MemoJpaRepo.java │ └── service │ ├── IMemoService.java │ └── MemoService.java └── resources ├── application.yml ├── banner.txt └── templates 3. build.gradle특별한 내용은 없고 springboot 2.4.4 버전 사용 및 mariadb 와 jpa 라이브러리 추가및 lombok 플러그인을 추가했습니다. 12345678910111213141516171819202122232425262728293031323334353637383940414243444546buildscript &#123; ext &#123; springBootVersion = &#x27;2.4.4&#x27; &#125; repositories &#123; mavenCentral() &#125; dependencies &#123; classpath( &quot;org.springframework.boot:spring-boot-gradle-plugin:$&#123;springBootVersion&#125;&quot;) &#125;&#125;apply plugin: &#x27;org.springframework.boot&#x27;apply plugin: &#x27;war&#x27;apply plugin: &#x27;io.spring.dependency-management&#x27;sourceCompatibility = &#x27;1.8&#x27;targetCompatibility = &#x27;1.8&#x27;group = &#x27;io.github.goodsaem&#x27;version = &#x27;1.1&#x27;configurations &#123; compileOnly &#123; extendsFrom annotationProcessor &#125;&#125;repositories &#123; mavenCentral()&#125;dependencies &#123; implementation &#x27;org.springframework.boot:spring-boot-starter-data-jpa&#x27; implementation &#x27;org.springframework.boot:spring-boot-starter-web&#x27; implementation &#x27;org.springframework.boot:spring-boot-autoconfigure&#x27; implementation(&quot;org.mariadb.jdbc:mariadb-java-client&quot;) compileOnly &#x27;org.projectlombok:lombok&#x27; annotationProcessor &#x27;org.projectlombok:lombok&#x27; testImplementation &#x27;org.springframework.boot:spring-boot-starter-test&#x27;&#125;test &#123; useJUnitPlatform()&#125; 4. ApiApplication.javaspringboot 시작 파일 입니다. 1234567891011package io.github.goodsaem.api;import org.springframework.boot.SpringApplication;import org.springframework.boot.autoconfigure.SpringBootApplication;@SpringBootApplicationpublic class ApiApplication &#123; public static void main(String[] args) &#123; SpringApplication.run(ApiApplication.class, args); &#125;&#125; 5. WebConfig.javaCORS 설정 파일입니다. 허용할 도메인에 대해서 아래와 같이 정의 합니다. 12345678910111213141516package io.github.goodsaem.api.config;import org.springframework.context.annotation.Configuration;import org.springframework.web.servlet.config.annotation.CorsRegistry;import org.springframework.web.servlet.config.annotation.WebMvcConfigurer;@Configurationpublic class WebConfig implements WebMvcConfigurer &#123; @Override public void addCorsMappings(CorsRegistry registry) &#123; registry.addMapping(&quot;/**&quot;) .allowedOrigins(&quot;https://goodsaem.github.io&quot;,&quot;http://localhost:8080&quot;) .allowedMethods(&quot;GET&quot;, &quot;POST&quot;, &quot;PUT&quot;, &quot;PATCH&quot;, &quot;DELETE&quot;,&quot;OPTIONS&quot;); &#125;&#125; 6. MemoController.javarestapi controller 입니다. 메모의 crud url 을 호출하면 해당 요청에 맞는 서비스를 호출하여 db 작업을 수행합니다 123456789101112131415161718192021222324252627282930313233343536373839404142434445package io.github.goodsaem.api.controller.v1;import io.github.goodsaem.api.entity.Memo;import io.github.goodsaem.api.service.IMemoService;import lombok.RequiredArgsConstructor;import org.springframework.web.bind.annotation.*;import java.util.List;@RequiredArgsConstructor@RestController@RequestMapping(value = &quot;/v1&quot;)public class MemoController &#123; private final IMemoService iMemoService; @GetMapping(value = &quot;/memos&quot;) public List&lt;Memo&gt; readMemos() &#123; return iMemoService.readMemos(); &#125; @GetMapping(value = &quot;/memo/&#123;id&#125;&quot;) public Memo readMemo( @PathVariable long id) &#123; return iMemoService.readMemo(id); &#125; @PostMapping(value = &quot;/memo&quot;) public Memo createMemo(@RequestParam String title,String contents) &#123; return iMemoService.createMemo(title,contents); &#125; @PutMapping(value = &quot;/memo&quot;) public Memo updateMemo(@RequestParam long id, @RequestParam String title,String contents) &#123; return iMemoService.updateMemo(id,title,contents); &#125; @DeleteMapping(value=&quot;/memo/&#123;id&#125;&quot;) public void deleteMemo(@PathVariable long id) &#123; iMemoService.deleteMemo(id); &#125; @DeleteMapping(value=&quot;/memos&quot;) public void deleteMemos() &#123; iMemoService.deleteMemos(); &#125;&#125; 7. Memo.javamemo entity 입니다. 1234567891011121314151617181920212223package io.github.goodsaem.api.entity;import lombok.*;import javax.persistence.*;@Builder@Entity@Setter@Getter@NoArgsConstructor@AllArgsConstructor@Table(name=&quot;memo&quot;)public class Memo &#123; @Id @GeneratedValue(strategy = GenerationType.AUTO) private long id; @Column(nullable = false, length = 30) private String title; @Column(nullable = false, length = 4000) private String contents;&#125; 8. MemoJpaRepo.javajpa를 사용하기 위해 jparepository를 상속 받습니다. 12345678package io.github.goodsaem.api.repo;import io.github.goodsaem.api.entity.Memo;import org.springframework.data.jpa.repository.JpaRepository;public interface MemoJpaRepo extends JpaRepository&lt;Memo, Long&gt; &#123;&#125; 9. IMemoService.java서비스 인터페이스 입니다. 1234567891011package io.github.goodsaem.api.service;import io.github.goodsaem.api.entity.Memo;import java.util.List;public interface IMemoService &#123; List&lt;Memo&gt; readMemos(); Memo readMemo(long id); Memo createMemo(String title,String contents); Memo updateMemo(long id,String title,String contents); void deleteMemo(long id); void deleteMemos();&#125; 10. MemoService.javajpaRepo로 실제 crud 작업을 수행합니다. 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657package io.github.goodsaem.api.service;import io.github.goodsaem.api.entity.Memo;import io.github.goodsaem.api.repo.MemoJpaRepo;import lombok.RequiredArgsConstructor;import lombok.extern.slf4j.Slf4j;import org.springframework.stereotype.Service;import java.util.List;@Slf4j@Service@RequiredArgsConstructorpublic class MemoService implements IMemoService &#123; private final MemoJpaRepo memoJpaRepo; @Override public List&lt;Memo&gt; readMemos() &#123; return memoJpaRepo.findAll(); &#125; @Override public Memo readMemo(long id) &#123; return memoJpaRepo.findById(id).orElse(null); &#125; @Override public Memo createMemo(String title, String contents) &#123; Memo memo = Memo.builder() .title(title) .contents(contents) .build(); return memoJpaRepo.save(memo); &#125; @Override public Memo updateMemo(long id, String title, String contents) &#123; Memo memo = Memo.builder() .id(id) .title(title) .contents(contents) .build(); return memoJpaRepo.save(memo); &#125; @Override public void deleteMemo(long id) &#123; memoJpaRepo.deleteById(id); &#125; @Override public void deleteMemos() &#123; memoJpaRepo.deleteAll(); &#125;&#125; 11. application.ymlappplication 설정 내용으로 mariadb 연결정보와 서비스 포트 context path 설정정보를 가지고 있습니다. 12345678910111213141516171819server: port: 9090 servlet: context-path: /spring session: timeout: 60 tomcat: uri-encoding: UTF-8spring: datasource: driver-class-name: org.mariadb.jdbc.Driver url: jdbc:mariadb://localhost:3306/goodsaem?useSSL=false&amp;serverTimezone=KST username: goodsaem password: xxxxxxxxxx jpa: database-platform: org.hibernate.dialect.MariaDBDialect properties.hibernate.hbm2ddl.auto: none showSql: true 12. banner.txtspring boot 시작시 사용할 배너 입니다. 1234567 ██████╗ ██████╗ ██████╗ ██████╗ ███████╗ █████╗ ███████╗███╗ ███╗██╔════╝ ██╔═══██╗██╔═══██╗██╔══██╗██╔════╝██╔══██╗██╔════╝████╗ ████║██║ ███╗██║ ██║██║ ██║██║ ██║███████╗███████║█████╗ ██╔████╔██║██║ ██║██║ ██║██║ ██║██║ ██║╚════██║██╔══██║██╔══╝ ██║╚██╔╝██║╚██████╔╝╚██████╔╝╚██████╔╝██████╔╝███████║██║ ██║███████╗██║ ╚═╝ ██║ ╚═════╝ ╚═════╝ ╚═════╝ ╚═════╝ ╚══════╝╚═╝ ╚═╝╚══════╝╚═╝ ╚═╝:: Spring Boot :: ver : $&#123;spring-boot.version&#125; 13. api-1.1.war 파일 만들기프로젝트 시작 home 디렉토리에서 아래 명령어를 입력하여 war 파일을 만듭니다. 1sh gradlew build 14. war file 업로드aws 서버에 api-1.1.war 파일을 업로드 합니다. 15. springboot 재시작aws 서버에 접속한후 아래 명령어를 입력합니다. 서비스 중지 12ubuntu@goodsaem:~$ ./stop.sh=====spring is running at 5808 Shutdown spring now 서비스 시작 1ubuntu@goodsaem:~$ ./start.sh;./log.sh 시작 로그 12345678910111213141516171819202122232425262728 ██████╗ ██████╗ ██████╗ ██████╗ ███████╗ █████╗ ███████╗███╗ ███╗██╔════╝ ██╔═══██╗██╔═══██╗██╔══██╗██╔════╝██╔══██╗██╔════╝████╗ ████║██║ ███╗██║ ██║██║ ██║██║ ██║███████╗███████║█████╗ ██╔████╔██║██║ ██║██║ ██║██║ ██║██║ ██║╚════██║██╔══██║██╔══╝ ██║╚██╔╝██║╚██████╔╝╚██████╔╝╚██████╔╝██████╔╝███████║██║ ██║███████╗██║ ╚═╝ ██║ ╚═════╝ ╚═════╝ ╚═════╝ ╚═════╝ ╚══════╝╚═╝ ╚═╝╚══════╝╚═╝ ╚═╝:: Spring Boot :: ver : 2.4.42021-03-27 17:10:46.869 INFO 7734 --- [ main] io.github.goodsaem.api.ApiApplication : Starting ApiApplication using Java 1.8.0_282 on goodsaem with PID 7734 (/home/ubuntu/api-1.1.war started by ubuntu in /home/ubuntu)2021-03-27 17:10:46.874 INFO 7734 --- [ main] io.github.goodsaem.api.ApiApplication : No active profile set, falling back to default profiles: default2021-03-27 17:10:48.714 INFO 7734 --- [ main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.2021-03-27 17:10:48.852 INFO 7734 --- [ main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 121 ms. Found 1 JPA repository interfaces.2021-03-27 17:10:50.415 INFO 7734 --- [ main] o.s.b.w.embedded.tomcat.TomcatWebServer : Tomcat initialized with port(s): 9090 (http)2021-03-27 17:10:50.442 INFO 7734 --- [ main] o.apache.catalina.core.StandardService : Starting service [Tomcat]2021-03-27 17:10:50.446 INFO 7734 --- [ main] org.apache.catalina.core.StandardEngine : Starting Servlet engine: [Apache Tomcat/9.0.44]2021-03-27 17:10:51.931 INFO 7734 --- [ main] o.a.c.c.C.[.[localhost].[/spring] : Initializing Spring embedded WebApplicationContext2021-03-27 17:10:51.932 INFO 7734 --- [ main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 4908 ms2021-03-27 17:10:52.874 INFO 7734 --- [ main] o.hibernate.jpa.internal.util.LogHelper : HHH000204: Processing PersistenceUnitInfo [name: default]2021-03-27 17:10:52.986 INFO 7734 --- [ main] org.hibernate.Version : HHH000412: Hibernate ORM core version 5.4.29.Final2021-03-27 17:10:53.296 INFO 7734 --- [ main] o.hibernate.annotations.common.Version : HCANN000001: Hibernate Commons Annotations &#123;5.1.2.Final&#125;2021-03-27 17:10:53.661 INFO 7734 --- [ main] com.zaxxer.hikari.HikariDataSource : HikariPool-1 - Starting...2021-03-27 17:10:53.804 INFO 7734 --- [ main] com.zaxxer.hikari.HikariDataSource : HikariPool-1 - Start completed.2021-03-27 17:10:53.848 INFO 7734 --- [ main] org.hibernate.dialect.Dialect : HHH000400: Using dialect: org.hibernate.dialect.MariaDBDialect2021-03-27 17:10:54.767 INFO 7734 --- [ main] o.h.e.t.j.p.i.JtaPlatformInitiator : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]2021-03-27 17:10:54.779 INFO 7734 --- [ main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit &#x27;default&#x27;2021-03-27 17:10:55.548 WARN 7734 --- [ main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning2021-03-27 17:10:55.822 INFO 7734 --- [ main] o.s.s.concurrent.ThreadPoolTaskExecutor : Initializing ExecutorService &#x27;applicationTaskExecutor&#x27;2021-03-27 17:10:56.395 INFO 7734 --- [ main] o.s.b.w.embedded.tomcat.TomcatWebServer : Tomcat started on port(s): 9090 (http) with context path &#x27;/spring&#x27;2021-03-27 17:10:56.413 INFO 7734 --- [ main] io.github.goodsaem.api.ApiApplication : Started ApiApplication in 10.795 seconds (JVM running for 11.987) 16. 웹브라우저에서 확인https://goodsaem.ml/spring/v1/memos url 접근했을때 아래와같은 문자열이 출력되면 정상입니다. 1234567891011121314151617[ &#123; &quot;id&quot;: 1, &quot;title&quot;: &quot;제목1&quot;, &quot;contents&quot;: &quot;내용1&quot; &#125;, &#123; &quot;id&quot;: 2, &quot;title&quot;: &quot;제목2&quot;, &quot;contents&quot;: &quot;내용2&quot; &#125;, &#123; &quot;id&quot;: 3, &quot;title&quot;: &quot;제목3&quot;, &quot;contents&quot;: &quot;내용3&quot; &#125;] 17. 전체소스 다운로드지금까지 만든 소스는 아래 링크를 통해서 다운로드 가능합니다. 소스 다운 로드","categories":[{"name":"설치","slug":"설치","permalink":"http://goodsaem.github.io/categories/%EC%84%A4%EC%B9%98/"},{"name":"SPRINGBOOT","slug":"설치/SPRINGBOOT","permalink":"http://goodsaem.github.io/categories/%EC%84%A4%EC%B9%98/SPRINGBOOT/"}],"tags":[{"name":"AWS","slug":"AWS","permalink":"http://goodsaem.github.io/tags/AWS/"},{"name":"SPRINGBOOT","slug":"SPRINGBOOT","permalink":"http://goodsaem.github.io/tags/SPRINGBOOT/"}]},{"title":"11/13 무료 aws + springboot 서버 구축","slug":"setup/aws-springboot-11","date":"2023-03-25T11:11:00.000Z","updated":"2025-06-29T07:42:01.053Z","comments":true,"path":"setup/aws-springboot-11/","link":"","permalink":"http://goodsaem.github.io/setup/aws-springboot-11/","excerpt":"","text":"11. SSL 인증Let’s Encrypt 와 Certbot을 이용한 ssl 무료 인증서를 발급 받는 방법에 대해서 알아 보겠습니다. 1. Diffie-Hellman 키 생성https 인증서를 받기 위해서는 키가 필요합니다. 이 키 생성은 디피와 헬만이 1976년도에 발표한 비밀키 교환 방식의 알고리즘을이용하여 생성합니다.이 알고리즘을 이용하여 4096 bit의 키를 생성하겠습니다. 아래 명령어로 키를 생성하는데 대략 10분정도 소요 되었습니다.이키를 이용해서 https에서 비밀키를 교환하여 안정한 https 통신을 할수 있으므로 반드시 진행해야 되는 사항입니다. 1ubuntu@goodsaem:~$ sudo openssl dhparam -out /etc/nginx/conf.d/ssl-dhparams.pem 4096 123enerating DH parameters, 4096 bit long safe prime, generator 2This is going to take a long time............................................................... 2. Let’s Encrypt + Certbot 무료인증Let’s Encrypt 는 사용자에게 무료로 SSL&#x2F;TLS 인증서를 발급해 주는 기관 입니다. 한번 발급 받으면 90일간 사용이 가능하며만료 30일전에 메일로 내용을 통보하면 그때 다시 갱신이 가능합니다. 인증서 발급은 certbot certbot-auto 를 이용하여발급 및 갱신합니다. certbot 등록을 위해 repository 등록을 진행합니다. 12345ubuntu@goodsaem:~$ sudo apt-get updateubuntu@goodsaem:~$ sudo apt-get install software-properties-commonubuntu@goodsaem:~$ sudo add-apt-repository universeubuntu@goodsaem:~$ sudo add-apt-repository ppa:certbot/certbotubuntu@goodsaem:~$ sudo apt-get update certbot을 설치합니다. 1ubuntu@goodsaem:~$ sudo apt-get install certbot certbot nginx 플러그인을 설치 합니다. 1ubuntu@goodsaem:~$ sudo apt-get install python-certbot-nginx nginx에 서버 이름을 변경하기 위해 아래와 같이 입력합니다. 1ubuntu@goodsaem:~$ sudo vi /etc/nginx/conf.d/default.conf 서버 네임을 freenom에서 발급받은 도메인으로 지정해 줍니다. 3 line 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051server &#123; listen 80; server_name goodsaem.ml; #charset koi8-r; #access_log /var/log/nginx/host.access.log main; location / &#123; root /usr/share/nginx/html; index index.html index.htm; &#125; location /spring &#123; proxy_pass http://localhost:9090/spring; proxy_set_header X-Real-IP $remote_addr; proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; proxy_set_header Host $http_host; &#125; #error_page 404 /404.html; # redirect server error pages to the static page /50x.html # error_page 500 502 503 504 /50x.html; location = /50x.html &#123; root /usr/share/nginx/html; &#125; # proxy the PHP scripts to Apache listening on 127.0.0.1:80 # #location ~ \\.php$ &#123; # proxy_pass http://127.0.0.1; #&#125; # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000 # #location ~ \\.php$ &#123; # root html; # fastcgi_pass 127.0.0.1:9000; # fastcgi_index index.php; # fastcgi_param SCRIPT_FILENAME /scripts$fastcgi_script_name; # include fastcgi_params; #&#125; # deny access to .htaccess files, if Apache&#x27;s document root # concurs with nginx&#x27;s one # #location ~ /\\.ht &#123; # deny all; #&#125;&#125; 이제 아래 certbot 명령어를 통해서 ssl 인증서를 발급받습니다. 인증서 발급시사용할 admin email 주소와 이용약관 동의 옵션을 지정하여 인증서 발급을 받겠습니다. 1ubuntu@goodsaem:~$ sudo certbot --nginx --email goodsaem@protonmail.com --agree-tos 위에 명령어를 입력하면 아래와 같은 형태로 진행되는데요 중요한 부분만 설명하겠습니다. 6 라인에 추가할 https 도메인이 보입니다. 9 라인에서 엔터를 입력합니다. 24 라인에서 2을 입력합니다. (http로 요청이 들어오면 https 로 redirect 하겠다는 의미 입니다.) 123456789101112131415161718192021222324252627282930313233343536373839404142434445Saving debug log to /var/log/letsencrypt/letsencrypt.logPlugins selected: Authenticator nginx, Installer nginxWhich names would you like to activate HTTPS for?- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -1: goodsaem.ml- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -Select the appropriate numbers separated by commas and/or spaces, or leave inputblank to select all options shown (Enter &#x27;c&#x27; to cancel):Obtaining a new certificatePerforming the following challenges:http-01 challenge for goodsaem.mlWaiting for verification...Cleaning up challengesDeploying Certificate to VirtualHost /etc/nginx/conf.d/default.confPlease choose whether or not to redirect HTTP traffic to HTTPS, removing HTTP access.- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -1: No redirect - Make no further changes to the webserver configuration.2: Redirect - Make all requests redirect to secure HTTPS access. Choose this fornew sites, or if you&#x27;re confident your site works on HTTPS. You can undo thischange by editing your web server&#x27;s configuration.- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -Select the appropriate number [1-2] then [enter] (press &#x27;c&#x27; to cancel): 1- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -Congratulations! You have successfully enabled https://goodsaem.mlYou should test your configuration at:https://www.ssllabs.com/ssltest/analyze.html?d=goodsaem.ml- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -IMPORTANT NOTES: - Congratulations! Your certificate and chain have been saved at: /etc/letsencrypt/live/goodsaem.ml/fullchain.pem Your key file has been saved at: /etc/letsencrypt/live/goodsaem.ml/privkey.pem Your cert will expire on 2021-06-23. To obtain a new or tweaked version of this certificate in the future, simply run certbot again with the &quot;certonly&quot; option. To non-interactively renew *all* of your certificates, run &quot;certbot renew&quot; - If you like Certbot, please consider supporting our work by: Donating to ISRG / Let&#x27;s Encrypt: https://letsencrypt.org/donate Donating to EFF: https://eff.org/donate-le 제되로 인증서 발급이 되었는지 확인해 보겠습니다.domain에 보시면 goodsaem.ml 도메인이 등록되어 있습니다. 또한 9,10 라인에fullchain.pem 키와 privkey.pem 파일이 정상 생성되었음을 확인할수 있습니다. 1,7,9-10 line 1234567891011ubuntu@goodsaem:~$ sudo certbot certificatesSaving debug log to /var/log/letsencrypt/letsencrypt.log- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -Found the following certs: Certificate Name: goodsaem.ml Domains: goodsaem.ml Expiry Date: 2021-06-24 14:32:16+00:00 (VALID: 89 days) Certificate Path: /etc/letsencrypt/live/goodsaem.ml/fullchain.pem Private Key Path: /etc/letsencrypt/live/goodsaem.ml/privkey.pem- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - nginx에 ssl 관련 설정이 등록되었는지 default.conf 내용을 확인해 보겠습니다.51번라인부터 67번 라인까지 ssl 관련 설정이 자동으로 추가되었습니다. 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970server &#123; server_name goodsaem.ml; #charset koi8-r; #access_log /var/log/nginx/host.access.log main; location / &#123; root /usr/share/nginx/html; index index.html index.htm; &#125; location /spring &#123; proxy_pass http://localhost:9090/spring; proxy_set_header X-Real-IP $remote_addr; proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; proxy_set_header Host $http_host; &#125; #error_page 404 /404.html; # redirect server error pages to the static page /50x.html # error_page 500 502 503 504 /50x.html; location = /50x.html &#123; root /usr/share/nginx/html; &#125; # proxy the PHP scripts to Apache listening on 127.0.0.1:80 # #location ~ \\.php$ &#123; # proxy_pass http://127.0.0.1; #&#125; # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000 # #location ~ \\.php$ &#123; # root html; # fastcgi_pass 127.0.0.1:9000; # fastcgi_index index.php; # fastcgi_param SCRIPT_FILENAME /scripts$fastcgi_script_name; # include fastcgi_params; #&#125; # deny access to .htaccess files, if Apache&#x27;s document root # concurs with nginx&#x27;s one # #location ~ /\\.ht &#123; # deny all; #&#125; listen 443 ssl; # managed by Certbot ssl_certificate /etc/letsencrypt/live/goodsaem.ml/fullchain.pem; # managed by Certbot ssl_certificate_key /etc/letsencrypt/live/goodsaem.ml/privkey.pem; # managed by Certbot include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot&#125;server &#123; if ($host = goodsaem.ml) &#123; return 301 https://$host$request_uri; &#125; # managed by Certbot listen 80; server_name goodsaem.ml; return 404; # managed by Certbot&#125; letsencrypt 에 있는 Diffie-Hellman Key 를 아래와 같은 이름으로 백업합니다. 12ubuntu@goodsaem:~$ cd /etc/letsencrypt/ubuntu@goodsaem:~$ sudo mv ssl-dhparams.pem ssl-dhparams.pem.backup 생성한 키 파일을 &#x2F;etc&#x2F;letsencrypt 로 복사합니다. 1ubuntu@goodsaem:~$ sudo cp -rp /etc/nginx/conf.d/ssl-dhparams.pem /etc/letsencrypt/ nginx 를 재시작 합니다. 1ubuntu@goodsaem:~$ sudo systemctl restart nginx 3. http 요청 https 로 자동포워딩http://goodsaem.ml/ 로 접속하면 https://goodsaem.ml/ 자동 포워딩되는지확인합니다. 정상적으로 setup 되었다면 아래와 같은 화면을 확인할수 있습니다. 4. SSL 점검SSL이 제되로 생성되었는지 https://www.ssllabs.com/ssltest/analyze.html 사이트에 접속하여아래와 같이 도메인을 입력하고 점검을 수행합니다. A 라고 연두색으로 나오는것 보니 제되로 설정이 된것 같습니다. 5. Springboot 백그라운드에서 실행아래 명령어로 샘플 프로젝트를 실행하면 foreground 로 명령어가 실행됩니다. ctrl + c 키를 눌러서 종료하면 프로세스가 종료됩니다.명령어를 실행하고 나서 로그아웃을 하더라도 명령어가 계속 실행된 상태로 있을려면 background 로 명령어가 실행되어야 합니다. 1java -jar hello-0.0.1-SNAPSHOT.war background로 실행하는 프로세스를 만들기 위해 아래와 같이 start.sh 파일을 생성합니다. 1ubuntu@goodsaem:~$ vi start.sh nohup을 사용하여 출력을 nohup.out으로 보내고 명령어를 실행한다음 &amp; 같이 입력하여 백그라운드에서 실행 되게 만듭니다. 1nohup java -jar hello*.war &amp; 그리고 나서 start.sh 실행 권한을 부여 합니다. 1ubuntu@goodsaem:~$ chmod +x start.sh stop 스크립트를 작성합니다. 1ubuntu@goodsaem:~$ vi stop.sh 아래와 같이 입력합니다. 12345678910#!/bin/shPID=`ps -ef | grep java | grep war | awk &#x27;&#123;print $2&#125;&#x27;`if [ -n &quot;$PID&quot; ]then echo &quot;=====spring is running at&quot; $PID &quot;Shutdown spring now&quot; kill -9 $PIDelse echo &quot;=====spring isn&#x27;t running=====&quot;fi 저장하고 종료합니다. log 출력 스크립트를 작성합니다. 1ubuntu@goodsaem:~$ vi log.sh 아래와 같이 입력합니다. 1tail -f nohup.out stop.sh 와 log.sh 각각 실행권한을 부여합니다. 12ubuntu@goodsaem:~$ chmod +X start.shubuntu@goodsaem:~$ chmod +X log.sh 서비스를 시작합니다. 1ubuntu@goodsaem:~$ ./start.sh;./log.sh 아래와 같은 로그 확인이 가능합니다. 123456789101112131415161718 . ____ _ __ _ _ /\\\\ / ___&#x27;_ __ _ _(_)_ __ __ _ \\ \\ \\ \\( ( )\\___ | &#x27;_ | &#x27;_| | &#x27;_ \\/ _` | \\ \\ \\ \\ \\\\/ ___)| |_)| | | | | || (_| | ) ) ) ) &#x27; |____| .__|_| |_|_| |_\\__, | / / / / =========|_|==============|___/=/_/_/_/ :: Spring Boot :: (v2.4.4)2021-03-27 02:23:27.115 INFO 3532 --- [ main] g.github.io.hello.HelloApplication : Starting HelloApplication using Java 1.8.0_282 on goodsaem with PID 3532 (/home/ubuntu/hello-0.0.1-SNAPSHOT.war started by ubuntu in /home/ubuntu)2021-03-27 02:23:27.124 INFO 3532 --- [ main] g.github.io.hello.HelloApplication : No active profile set, falling back to default profiles: default2021-03-27 02:23:29.570 INFO 3532 --- [ main] o.s.b.w.embedded.tomcat.TomcatWebServer : Tomcat initialized with port(s): 9090 (http)2021-03-27 02:23:29.600 INFO 3532 --- [ main] o.apache.catalina.core.StandardService : Starting service [Tomcat]2021-03-27 02:23:29.606 INFO 3532 --- [ main] org.apache.catalina.core.StandardEngine : Starting Servlet engine: [Apache Tomcat/9.0.44]2021-03-27 02:23:30.416 INFO 3532 --- [ main] o.a.c.c.C.[.[localhost].[/spring] : Initializing Spring embedded WebApplicationContext2021-03-27 02:23:30.416 INFO 3532 --- [ main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 3156 ms2021-03-27 02:23:31.421 INFO 3532 --- [ main] o.s.s.concurrent.ThreadPoolTaskExecutor : Initializing ExecutorService &#x27;applicationTaskExecutor&#x27;2021-03-27 02:23:31.886 INFO 3532 --- [ main] o.s.b.w.embedded.tomcat.TomcatWebServer : Tomcat started on port(s): 9090 (http) with context path &#x27;/spring&#x27;2021-03-27 02:23:31.908 INFO 3532 --- [ main] g.github.io.hello.HelloApplication : Started HelloApplication in 6.02 seconds (JVM running for 6.993) 이제 ctrl + c 를 해도 프로세스가 종료되지 않습니다. ::: tip 서비스 종료아래 명령어로 서비스를 종료 합니다. 12ubuntu@goodsaem:~$ ./stop.sh;./log.sh=====spring is running at 3532 Shutdown spring now ::: 다시 서비스를 시작합니다. 1ubuntu@goodsaem:~$ ./start.sh;./log.sh 6. 테스트이제 실제로 https 로 접속을 시도해 보겠습니다. http://goodsaem.ml/spring/goodsaem/string https 프로토콜을 이용하여설정한 도메인으로 접속하니 아래 그림과 같이 정상적으로 화면이 나왔습니다.","categories":[{"name":"설치","slug":"설치","permalink":"http://goodsaem.github.io/categories/%EC%84%A4%EC%B9%98/"},{"name":"SPRINGBOOT","slug":"설치/SPRINGBOOT","permalink":"http://goodsaem.github.io/categories/%EC%84%A4%EC%B9%98/SPRINGBOOT/"}],"tags":[{"name":"AWS","slug":"AWS","permalink":"http://goodsaem.github.io/tags/AWS/"},{"name":"SPRINGBOOT","slug":"SPRINGBOOT","permalink":"http://goodsaem.github.io/tags/SPRINGBOOT/"}]},{"title":"10/13 무료 aws + springboot 서버 구축","slug":"setup/aws-springboot-10","date":"2023-03-25T11:10:00.000Z","updated":"2025-06-29T07:42:01.053Z","comments":true,"path":"setup/aws-springboot-10/","link":"","permalink":"http://goodsaem.github.io/setup/aws-springboot-10/","excerpt":"","text":"10. Nginx Springboot 설정http://goodsaem.ml/spring 로 접속하면 springboot가 응답하도록nginx 설정을 변경하겠습니다. 1. nginx 설정파일 수정아래 명령어로 nginx 설정 파일을 수정 합니다. 1ubuntu@goodsaem:~$ sudo vi /etc/nginx/conf.d/default.conf 아래와 같이 &#x2F;spring 요청이 오면 13~18 라인 설정에 따라 springboot로 보내는 설정입니다.그외 전체 nginx 설정이 있으니 참고 하시기 바랍니다 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051server &#123;listen 80;server_name localhost; #charset koi8-r; #access_log /var/log/nginx/host.access.log main; location / &#123; root /usr/share/nginx/html; index index.html index.htm; &#125; location /spring &#123; proxy_pass http://localhost:9090/spring; proxy_set_header X-Real-IP $remote_addr; proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; proxy_set_header Host $http_host; &#125; #error_page 404 /404.html; # redirect server error pages to the static page /50x.html # error_page 500 502 503 504 /50x.html; location = /50x.html &#123; root /usr/share/nginx/html; &#125; # proxy the PHP scripts to Apache listening on 127.0.0.1:80 # #location ~ \\.php$ &#123; # proxy_pass http://127.0.0.1; #&#125; # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000 # #location ~ \\.php$ &#123; # root html; # fastcgi_pass 127.0.0.1:9000; # fastcgi_index index.php; # fastcgi_param SCRIPT_FILENAME /scripts$fastcgi_script_name; # include fastcgi_params; #&#125; # deny access to .htaccess files, if Apache&#x27;s document root # concurs with nginx&#x27;s one # #location ~ /\\.ht &#123; # deny all; #&#125;&#125; 2. nginx 서비스 재시작1ubuntu@goodsaem:~$ sudo service nginx restart 3. springboot 시작업로드한 hello*.war 파일을 아래 명령어로 시작합니다. 1234567891011121314151617181920ubuntu@goodsaem:~$ java -jar hello-0.0.1-SNAPSHOT.war. ____ _ __ _ _/\\\\ / ___&#x27;_ __ _ _(_)_ __ __ _ \\ \\ \\ \\( ( )\\___ | &#x27;_ | &#x27;_| | &#x27;_ \\/ _` | \\ \\ \\ \\\\\\/ ___)| |_)| | | | | || (_| | ) ) ) )&#x27; |____| .__|_| |_|_| |_\\__, | / / / /=========|_|==============|___/=/_/_/_/:: Spring Boot :: (v2.4.4)2021-03-26 23:47:09.084 INFO 819 --- [ main] g.github.io.hello.HelloApplication : Starting HelloApplication using Java 1.8.0_282 on goodsaem with PID 819 (/home/ubuntu/hello-0.0.1-SNAPSHOT.war started by ubuntu in /home/ubuntu)2021-03-26 23:47:09.095 INFO 819 --- [ main] g.github.io.hello.HelloApplication : No active profile set, falling back to default profiles: default2021-03-26 23:47:11.586 INFO 819 --- [ main] o.s.b.w.embedded.tomcat.TomcatWebServer : Tomcat initialized with port(s): 9090 (http)2021-03-26 23:47:11.617 INFO 819 --- [ main] o.apache.catalina.core.StandardService : Starting service [Tomcat]2021-03-26 23:47:11.617 INFO 819 --- [ main] org.apache.catalina.core.StandardEngine : Starting Servlet engine: [Apache Tomcat/9.0.44]2021-03-26 23:47:12.505 INFO 819 --- [ main] o.a.c.c.C.[.[localhost].[/spring] : Initializing Spring embedded WebApplicationContext2021-03-26 23:47:12.505 INFO 819 --- [ main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 3273 ms2021-03-26 23:47:13.495 INFO 819 --- [ main] o.s.s.concurrent.ThreadPoolTaskExecutor : Initializing ExecutorService &#x27;applicationTaskExecutor&#x27;2021-03-26 23:47:13.927 INFO 819 --- [ main] o.s.b.w.embedded.tomcat.TomcatWebServer : Tomcat started on port(s): 9090 (http) with context path &#x27;/spring&#x27;2021-03-26 23:47:13.955 INFO 819 --- [ main] g.github.io.hello.HelloApplication : Started HelloApplication in 6.085 seconds (JVM running for 7.154) 4. springboot 테스트http://goodsaem.ml/spring/goodsaem/string url 로 접속하여아래와 같은 화면이 출력되면 nginx + springboot 연동 성공입니다. 1안녕하세요 좋은 선생님 goodsaem! 입니다.","categories":[{"name":"설치","slug":"설치","permalink":"http://goodsaem.github.io/categories/%EC%84%A4%EC%B9%98/"},{"name":"SPRINGBOOT","slug":"설치/SPRINGBOOT","permalink":"http://goodsaem.github.io/categories/%EC%84%A4%EC%B9%98/SPRINGBOOT/"}],"tags":[{"name":"AWS","slug":"AWS","permalink":"http://goodsaem.github.io/tags/AWS/"},{"name":"SPRINGBOOT","slug":"SPRINGBOOT","permalink":"http://goodsaem.github.io/tags/SPRINGBOOT/"}]},{"title":"9/13 무료 aws + springboot 서버 구축","slug":"setup/aws-springboot-09","date":"2023-03-25T11:09:00.000Z","updated":"2025-06-29T07:42:01.049Z","comments":true,"path":"setup/aws-springboot-09/","link":"","permalink":"http://goodsaem.github.io/setup/aws-springboot-09/","excerpt":"","text":"9. Springboot 프로젝트aws freetier 리눅스 서버 구축 목적은 restapi 서버 역할입니다. 간단한 springboot 프로젝트를생성 build 하여 war 파일을 만든다음 war 파일을 ec2 서버에 업로드 하는 부분까지 진행하겠습니다. 1. 프로젝트 파일생성https://start.spring.io/ 사이트에 접속하여 아래와 같이 입력합니다. project 는 Gradle Project Language 는 Java Spring Boot 는 2.4.4 Group 은 goodsaem.github.io Artifact 는 hello Name 은 hello Packaging 은 War 선택 Java 는 8 버전을 선택합니다. 그리고 나서 Generate 버튼을 클릭합니다. 파일을 다운로드 받고 적당한 위치에 압축을 푼후 해당 디렉토리로 이동합니다. 2. 디렉토리 구압축을 풀고 나서 해당 디렉토리 구조를 확인하면 아래와 같습니다.아래 강조된 부분의 파일을 우선 작성합니다. 11,14 라인 1234567891011121314151617181920212223.├── build.gradle└── src ├── main │ ├── java │ │ └── goodsaem │ │ └── github │ │ └── io │ │ └── hello │ │ ├── HelloApplication.java │ │ ├── HelloController.java │ │ └── ServletInitializer.java │ └── resources │ ├── application.yml │ ├── static │ └── templates └── test └── java └── goodsaem └── github └── io └── hello └── HelloApplicationTests.java 3. HelloController.javagoodsaem&#x2F;string url로 접속하면 “안녕하세요 좋은 선생님 goodsaem! 입니다.” 라고 출력하는간단한 컨트롤러 입니다. 1234567891011121314151617package goodsaem.github.io.hello;import org.springframework.stereotype.Controller;import org.springframework.web.bind.annotation.GetMapping;import org.springframework.web.bind.annotation.ResponseBody;@Controllerpublic class HelloController &#123; private final String MSG=&quot;안녕하세요 좋은 선생님 goodsaem! 입니다.&quot;; @GetMapping(value = &quot;/goodsaem/string&quot;) @ResponseBody public String getString() &#123; return MSG; &#125;&#125; 4. application.yml서비스 포트를 9090 로 변경했고 context-path를 spring으로 지정하여 &#x2F;spring으로 오는 요청은 모두springboot에서 처리하게 만듭니다. 12345678server: port: 9090 servlet: context-path: /spring session: timeout: 60 tomcat: uri-encoding: UTF-8 5. war파일 만들기프로젝트 root 디렉토리에서 아래 명령어를 입력하면 war파일이 생성됩니다. 1sh gradlew build 위 명령어를 실행하면 아래 위치에 hello-0.0.1-SNAPSHOT.war 파일이 생성됩니다. 1234.└── build └── libs └── hello-0.0.1-SNAPSHOT.war 6. aws 에 파일업로드파일 업로드는 파일 질라를 이용하서 진행하겠습니다. 호스트는 goodsaem.ml 이라고 입력합니다. 사용자는 ubuntu라고 입력합니다. 키파일은 aws ec2 서버 생성할때 만든 goodsaem.pem 파일을 선택합니다. 연결하기 버튼을 클릭하면 ec2 서버에 접속이 이루어 집니다. libs 디렉토리에 hello-0.0.1-SNAPSHOT.war 파일을 사용자 home 디렉토리로 업로드 합니다.","categories":[{"name":"설치","slug":"설치","permalink":"http://goodsaem.github.io/categories/%EC%84%A4%EC%B9%98/"},{"name":"SPRINGBOOT","slug":"설치/SPRINGBOOT","permalink":"http://goodsaem.github.io/categories/%EC%84%A4%EC%B9%98/SPRINGBOOT/"}],"tags":[{"name":"AWS","slug":"AWS","permalink":"http://goodsaem.github.io/tags/AWS/"},{"name":"SPRINGBOOT","slug":"SPRINGBOOT","permalink":"http://goodsaem.github.io/tags/SPRINGBOOT/"}]},{"title":"8/13 무료 aws + springboot 서버 구축","slug":"setup/aws-springboot-08","date":"2023-03-25T11:08:00.000Z","updated":"2025-06-29T07:42:01.048Z","comments":true,"path":"setup/aws-springboot-08/","link":"","permalink":"http://goodsaem.github.io/setup/aws-springboot-08/","excerpt":"","text":"8. Openjdk 1.8 설치aws + ubuntu 18 linux 서버에 open jdk 설치 하는 방법입니다. 1. 설치백엔드 서비스는 springboot에서 모두 처리할 예정입니다. springboot을 기동하기 위해 open jdk를 설치합니다. 1ubuntu@goodsaem:~$ sudo apt install openjdk-8-jdk 2. jdk 버전확인설치가 완료되었다면 jdk 버전을 확인합니다. 1234ubuntu@goodsaem:~$ java -versionopenjdk version &quot;1.8.0_282&quot;OpenJDK Runtime Environment (build 1.8.0_282-8u282-b08-0ubuntu1~18.04-b08)OpenJDK 64-Bit Server VM (build 25.282-b08, mixed mode)","categories":[{"name":"설치","slug":"설치","permalink":"http://goodsaem.github.io/categories/%EC%84%A4%EC%B9%98/"},{"name":"SPRINGBOOT","slug":"설치/SPRINGBOOT","permalink":"http://goodsaem.github.io/categories/%EC%84%A4%EC%B9%98/SPRINGBOOT/"}],"tags":[{"name":"AWS","slug":"AWS","permalink":"http://goodsaem.github.io/tags/AWS/"},{"name":"SPRINGBOOT","slug":"SPRINGBOOT","permalink":"http://goodsaem.github.io/tags/SPRINGBOOT/"}]},{"title":"7/13 무료 aws + springboot 서버 구축","slug":"setup/aws-springboot-07","date":"2023-03-25T11:07:00.000Z","updated":"2025-06-29T07:42:01.046Z","comments":true,"path":"setup/aws-springboot-07/","link":"","permalink":"http://goodsaem.github.io/setup/aws-springboot-07/","excerpt":"","text":"7.MariaDB 설치aws freeiter linux 서버에 mariadb 설치를 진행하겠습니다. 1. 설치우선 repository 부터 아래와 같이 설정합니다. 123ubuntu@goodsaem:~$ sudo apt-get install software-properties-commonubuntu@goodsaem:~$ sudo apt-key adv --fetch-keys &#x27;https://mariadb.org/mariadb_release_signing_key.asc&#x27;ubuntu@goodsaem:~$ sudo add-apt-repository &#x27;deb [arch=amd64,arm64,ppc64el] https://mirror.yongbok.net/mariadb/repo/10.5/ubuntu bionic main&#x27; 패키지를 업데이트한후 mariadb 설치를 진행합니다. 12ubuntu@goodsaem:~$ sudo apt updateubuntu@goodsaem:~$ sudo apt install mariadb-server -y 마리아 디비 버전을 확인합니다. 설치 시점의 최신 버전 10.5.9-MariaDB 으로 설치 되었습니다. 12ubuntu@goodsaem:~$ mariadb -Vmariadb Ver 15.1 Distrib 10.5.9-MariaDB, for debian-linux-gnu (x86_64) using readline 5.2 2. 보안설정마리아 디비 보안 관련 설정을 진행 합니다. 1ubuntu@goodsaem:~$ sudo mysql_secure_installation 상세 설정 내용은 아래와 같습니다. 8 라인 root 유저가 사용할 패스워드를 입력합니다. 16 라인 unix socket 인증방식 사용여부는 n 으로 지정해 주세요(root 쉘인증이 기본 사용됩니다.) 21-23 라인 root passwor를 변경합니다. 35 라인 익명 사용자를 삭제 합니다. 41 라인 root의 원격접속을 막습니다. root 는 항상 로컬에서만 접속 가능합니다. 48 라인 test 데이터 베이스를 삭제 합니다. 57 라인 권한에 대한 리로드를 진행합니다. y를 입력해주세요 8,16,21-23,35,41,48,57 line1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465NOTE: RUNNING ALL PARTS OF THIS SCRIPT IS RECOMMENDED FOR ALL MariaDB SERVERS IN PRODUCTION USE! PLEASE READ EACH STEP CAREFULLY!In order to log into MariaDB to secure it, we&#x27;ll need the currentpassword for the root user. If you&#x27;ve just installed MariaDB, andhaven&#x27;t set the root password yet, you should just press enter here.Enter current password for root (enter for none):OK, successfully used password, moving on...Setting the root password or using the unix_socket ensures that nobodycan log into the MariaDB root user without the proper authorisation.You already have your root account protected, so you can safely answer &#x27;n&#x27;.Switch to unix_socket authentication [Y/n] n ... skipping.You already have your root account protected, so you can safely answer &#x27;n&#x27;.Change the root password? [Y/n] yNew password:Re-enter new password:Password updated successfully!Reloading privilege tables.. ... Success!By default, a MariaDB installation has an anonymous user, allowing anyoneto log into MariaDB without having to have a user account created forthem. This is intended only for testing, and to make the installationgo a bit smoother. You should remove them before moving into aproduction environment.Remove anonymous users? [Y/n] y ... Success!Normally, root should only be allowed to connect from &#x27;localhost&#x27;. Thisensures that someone cannot guess at the root password from the network.Disallow root login remotely? [Y/n] y ... Success!By default, MariaDB comes with a database named &#x27;test&#x27; that anyone canaccess. This is also intended only for testing, and should be removedbefore moving into a production environment.Remove test database and access to it? [Y/n] y - Dropping test database... ... Success! - Removing privileges on test database... ... Success!Reloading the privilege tables will ensure that all changes made so farwill take effect immediately.Reload privilege tables now? [Y/n] y ... Success!Cleaning up...All done! If you&#x27;ve completed all of the above steps, your MariaDBinstallation should now be secure.Thanks for using MariaDB! 3. 디비연결아래 명령어를 입력하여 mariadb 에 접속합니다. 성공적으로 접속되었습니다. 1ubuntu@goodsaem:~$ sudo mariadb 123456789Welcome to the MariaDB monitor. Commands end with ; or \\g.Your MariaDB connection id is 53Server version: 10.5.9-MariaDB-1:10.5.9+maria~bionic mariadb.org binary distributionCopyright (c) 2000, 2018, Oracle, MariaDB Corporation Ab and others.Type &#x27;help;&#x27; or &#x27;\\h&#x27; for help. Type &#x27;\\c&#x27; to clear the current input statement.MariaDB [(none)]&gt; 4. 마리아 디비 설정마리아 db 설정을 진행하겠습니다. 아래 명령어를 입력하여 설정파일을 수정합니다. 1ubuntu@goodsaem:~$ sudo vi /etc/mysql/mariadb.conf.d/50-server.cnf 가장 마지막 줄에 아래 설정을 추가합니다. (119-130 라인) 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130## These groups are read by MariaDB server.# Use it for options that only the server (but not clients) should see# this is read by the standalone daemon and embedded servers[server]# this is only for the mysqld standalone daemon[mysqld]## * Basic Settings#user = mysqlpid-file = /run/mysqld/mysqld.pidbasedir = /usrdatadir = /var/lib/mysqltmpdir = /tmplc-messages-dir = /usr/share/mysqllc-messages = en_USskip-external-locking# Broken reverse DNS slows down connections considerably and name resolve is# safe to skip if there are no &quot;host by domain name&quot; access grants#skip-name-resolve# Instead of skip-networking the default is now to listen only on# localhost which is more compatible and is not less secure.bind-address = 127.0.0.1## * Fine Tuning##key_buffer_size = 128M#max_allowed_packet = 1G#thread_stack = 192K#thread_cache_size = 8# This replaces the startup script and checks MyISAM tables if needed# the first time they are touched#myisam_recover_options = BACKUP#max_connections = 100#table_cache = 64## * Logging and Replication## Both location gets rotated by the cronjob.# Be aware that this log type is a performance killer.# Recommend only changing this at runtime for short testing periods if needed!#general_log_file = /var/log/mysql/mysql.log#general_log = 1# When running under systemd, error logging goes via stdout/stderr to journald# and when running legacy init error logging goes to syslog due to# /etc/mysql/conf.d/mariadb.conf.d/50-mysqld_safe.cnf# Enable this if you want to have error logging into a separate file#log_error = /var/log/mysql/error.log# Enable the slow query log to see queries with especially long duration#slow_query_log_file = /var/log/mysql/mariadb-slow.log#long_query_time = 10#log_slow_verbosity = query_plan,explain#log-queries-not-using-indexes#min_examined_row_limit = 1000# The following can be used as easy to replay backup logs or for replication.# note: if you are setting up a replication slave, see README.Debian about# other settings you may need to change.#server-id = 1#log_bin = /var/log/mysql/mysql-bin.logexpire_logs_days = 10#max_binlog_size = 100M## * SSL/TLS## For documentation, please read# https://mariadb.com/kb/en/securing-connections-for-client-and-server/#ssl-ca = /etc/mysql/cacert.pem#ssl-cert = /etc/mysql/server-cert.pem#ssl-key = /etc/mysql/server-key.pem#require-secure-transport = on## * Character sets## MySQL/MariaDB default is Latin1, but in Debian we rather default to the full# utf8 4-byte character set. See also client.cnfcharacter-set-server = utf8mb4collation-server = utf8mb4_general_ci## * InnoDB## InnoDB is enabled by default with a 10MB datafile in /var/lib/mysql/.# Read the manual for more InnoDB related options. There are many!# Most important is to give InnoDB 80 % of the system RAM for buffer use:# https://mariadb.com/kb/en/innodb-system-variables/#innodb_buffer_pool_size#innodb_buffer_pool_size = 8G# this is only for embedded server[embedded]# This group is only read by MariaDB servers, not by MySQL.# If you use the same .cnf file for MySQL and MariaDB,# you can put MariaDB-only options here[mariadb]# This group is only read by MariaDB-10.5 servers.# If you use the same .cnf file for MariaDB of different versions,# use this group for options that older servers don&#x27;t understand[mariadb-10.5]server-id=1log_bin = binlogexpire_logs_days=10innodb_buffer_pool_size = 384Minnodb_file_per_table=TRUEcharacter-set-client-handshake=OFFskip-character-set-client-handshakemax_allowed_packet=500Minit_connect=SET collation_connection = utf8mb4_general_ciinit_connect=SET NAMES utf8mb4character-set-server = utf8mb4collation-server = utf8mb4_general_ci 설정된 값이 적용되도록 마리아 디비를 재시작 합니다. 1ubuntu@goodsaem:~$ sudo systemctl restart mariadb 5. 데이터 베이스 생성mariadb 에 접속합니다. 1ubuntu@goodsaem:~$ sudo mariadb 아래 명령어로 데이터 베이스를 생성합니다. 12MariaDB [(none)]&gt; create database goodsaem;Query OK, 1 row affected (0.001 sec) 생성된 데이터 베이스를 확인합니다. 12345678910MariaDB [(none)]&gt; show databases;+--------------------+| Database |+--------------------+| goodsaem || information_schema || mysql || performance_schema |+--------------------+4 rows in set (0.001 sec) 6. 유저 생성 및 권한 부여mariadb 유저 생성 및 권한 주는 방법입니다. 생성한 데이터베이스를 사용할 유저를 생성합니다. 12MariaDB [(none)]&gt; CREATE USER goodsaem@localhost identified by &#x27;xxxxxxxxxx&#x27;;Query OK, 0 rows affected (0.009 sec) 생성한 유저에게 신규 데이터베이스의 모든 권한을 부여 합니다. 12MariaDB [(none)]&gt; grant all privileges on goodsaem.* to &#x27;goodsaem&#x27;@&#x27;localhost&#x27;;Query OK, 0 rows affected (0.012 sec) 변경된 내용을 적용합니다. 12MariaDB [none]&gt; flush privileges;Query OK, 0 rows affected (0.000 sec)","categories":[{"name":"설치","slug":"설치","permalink":"http://goodsaem.github.io/categories/%EC%84%A4%EC%B9%98/"},{"name":"SPRINGBOOT","slug":"설치/SPRINGBOOT","permalink":"http://goodsaem.github.io/categories/%EC%84%A4%EC%B9%98/SPRINGBOOT/"}],"tags":[{"name":"AWS","slug":"AWS","permalink":"http://goodsaem.github.io/tags/AWS/"},{"name":"SPRINGBOOT","slug":"SPRINGBOOT","permalink":"http://goodsaem.github.io/tags/SPRINGBOOT/"}]},{"title":"6/13 무료 aws + springboot 서버 구축","slug":"setup/aws-springboot-06","date":"2023-03-25T11:06:00.000Z","updated":"2025-06-29T07:42:01.035Z","comments":true,"path":"setup/aws-springboot-06/","link":"","permalink":"http://goodsaem.github.io/setup/aws-springboot-06/","excerpt":"","text":"6. Nginx 설치aws freetier linux + Nginx + MariaDB + SpringBoot 조합으로 설치를 진행하겠습니다.그 첫번째로 Nginx 설치를 진행하겠습니다. 1. 개요https://news.netcraft.com/archives/category/web-server-survey/netcrat의 21년 웹서버 점유율을 보면 아래와 같습니다. 비동기로 동작하는 nginx 는 apache 보다 가볍고 속도도 더 빠르다고 합니다.아래 데이터를 보더라도 nginx 가 apache 를 앞지르고 있는것으로 보입니다. 그래서 저도 nginx 로 설정하겠습니다. Developer December 2020 Percent January 2021 Percent Change nginx 411,191,213 33.48% 399,330,927 33.33% -0.15 Apache 332,420,092 27.07% 316,046,149 26.38% -0.69 Microsoft 97,532,495 7.94% 89,781,136 7.49% -0.45 Google 46,924,883 3.82% 46,190,660 3.86% 0 2. Nginx 버전Nginx는 MainLine 버전과 stable 버전 2가지가 존재 합니다. 메인라이는 새로운 기능 및 업데이트 및 버그 패치가 동시에 진행되고 stable 은메인라인에서 버그패치만 진행하는 버전입니다. 메이저 버전을 올리고 싶지 않고 사용하고 싶다면 stable 버전이 좋겠지만 전 최신 기능과 update및 버그 픽스가 동시에 이루어지는 mainline으로 설치를 진행하겠습니다. 3. Nginx 설치Nginx 설치를 위해 의존성 있는 패키지 설치를 진행합니다. 1ubuntu@goodsaem:~$ sudo apt install curl gnupg2 ca-certificates lsb-release -y 메인라인 패키지 리스트를 추가 합니다. 12ubuntu@goodsaem:~$ sudo echo &quot;deb http://nginx.org/packages/mainline/ubuntu `lsb_release -cs` nginx&quot; | sudo tee /etc/apt/sources.list.d/nginx.listdeb http://nginx.org/packages/mainline/ubuntu bionic nginx 패키지를 업데이트 합니다. 1ubuntu@goodsaem:~$ sudo apt update 업데이트시 아래와 같이 NO_PUBKEY ABF5BD827BD9BF62 에러가 발생한다면 키를 업데이트 합니다. &lt;&lt;&lt; @&#x2F;freetier&#x2F;z106&#x2F;1.sh{1,5} 1번 라인과 같이 키를 업데이트 합니다. &lt;&lt;&lt; @&#x2F;freetier&#x2F;z106&#x2F;2.sh{1} 패키지 업데이트를 재시도 합니다. 1ubuntu@goodsaem:~$ sudo apt update nginx 를 설치합니다. 1ubuntu@goodsaem:~$ sudo apt install nginx 설치된 버전을 확인 합니다. 1.19.8 최신 버전으로 설치 되었습니다. 123456ubuntu@goodsaem:~$ nginx -Vnginx version: nginx/1.19.8built by gcc 7.5.0 (Ubuntu 7.5.0-3ubuntu1~18.04) built with OpenSSL 1.1.1 11 Sep 2018TLS SNI support enabledconfigure arguments: --prefix=/etc/nginx --sbin-path=/usr/sbin/nginx --modules-path=/usr/lib/nginx/modules --conf-path=/etc/nginx/nginx.conf --error-log-path=/var/log/nginx/error.log --http-log-path=/var/log/nginx/access.log --pid-path=/var/run/nginx.pid --lock-path=/var/run/nginx.lock --http-client-body-temp-path=/var/cache/nginx/client_temp --http-proxy-temp-path=/var/cache/nginx/proxy_temp --http-fastcgi-temp-path=/var/cache/nginx/fastcgi_temp --http-uwsgi-temp-path=/var/cache/nginx/uwsgi_temp --http-scgi-temp-path=/var/cache/nginx/scgi_temp --user=nginx --group=nginx --with-compat --with-file-aio --with-threads --with-http_addition_module --with-http_auth_request_module --with-http_dav_module --with-http_flv_module --with-http_gunzip_module --with-http_gzip_static_module --with-http_mp4_module --with-http_random_index_module --with-http_realip_module --with-http_secure_link_module --with-http_slice_module --with-http_ssl_module --with-http_stub_status_module --with-http_sub_module --with-http_v2_module --with-mail --with-mail_ssl_module --with-stream --with-stream_realip_module --with-stream_ssl_module --with-stream_ssl_preread_module --with-cc-opt=&#x27;-g -O2 -fdebug-prefix-map=/data/builder/debuild/nginx-1.19.8/debian/debuild-base/nginx-1.19.8=. -fstack-protector-strong -Wformat -Werror=format-security -Wp,-D_FORTIFY_SOURCE=2 -fPIC&#x27; --with-ld-opt=&#x27;-Wl,-Bsymbolic-functions -Wl,-z,relro -Wl,-z,now -Wl,--as-needed -pie&#x27; 4. AWS 보안설정 변경http 및 https 로 접속하기 위해서는 aws에 인바운드 (들어오는쪽)에 방화벽 설정을 해주셔야 됩니다.아래와 같이 aws 콘솔에서 EC2 &gt; 인스턴스 &gt; 인스터스 명을 클릭하시고 보안 탭에서 보안그룹의 보안그룹번호를 클릭합니다. 인바운드 규칙 변경을 통해 아래와 같이 http , https 에대한 규칙을 추가합니다. 규칙 추가는 인바운드 규칙 편집 버튼을 클릭하여 아래와 같이 http,https 위치무관이라고 선택하고 저장하시면 됩니다. 5. Nginx 시작아래 명령어를 입력하여 nginx 를 시작합니다. 1ubuntu@goodsaem:~$ sudo systemctl start nginx 웹브라우저에서 http://goodsaem.ml 접속해서 아래와 같은 화면이 나오면 설정 완료 입니다.","categories":[{"name":"설치","slug":"설치","permalink":"http://goodsaem.github.io/categories/%EC%84%A4%EC%B9%98/"},{"name":"SPRINGBOOT","slug":"설치/SPRINGBOOT","permalink":"http://goodsaem.github.io/categories/%EC%84%A4%EC%B9%98/SPRINGBOOT/"}],"tags":[{"name":"AWS","slug":"AWS","permalink":"http://goodsaem.github.io/tags/AWS/"},{"name":"SPRINGBOOT","slug":"SPRINGBOOT","permalink":"http://goodsaem.github.io/tags/SPRINGBOOT/"}]},{"title":"5/13 무료 aws + springboot 서버 구축","slug":"setup/aws-springboot-05","date":"2023-03-25T11:05:00.000Z","updated":"2025-06-29T07:42:01.025Z","comments":true,"path":"setup/aws-springboot-05/","link":"","permalink":"http://goodsaem.github.io/setup/aws-springboot-05/","excerpt":"","text":"5. 리눅스 초기설정구축한 aws + ubuntu 18.0.4 서버 초기 설정을 진행 하겠습니다. 필요없다고 생각하는 부분은 skip 하셔도 상관 없습니다. 1. 버전정보 확인버전 정보를 확인 합니다. 설치 잘 되어 있네요 ^^ 123456ubuntu@ip-172-31-47-167:~$ lsb_release -aNo LSB modules are available.Distributor ID: UbuntuDescription: Ubuntu 18.04.5 LTSRelease: 18.04Codename: bionic 2. nopasswd 설정nopasswd 설정을 진행하겠습니다. sudo 해서 root 하는 일을 많이 진행할 예정입니다. 그때 마다 패스워드를 입력하지 않기 위해 &#x2F;etc&#x2F;sudoers 파일을 수정합니다 1ubuntu@ip-172-31-47-167:~$ sudo vi /etc/sudoers %sudo ALL&#x3D;(ALL:ALL) ALL 이라고 된부분을 아래와 같이 %sudo ALL&#x3D;(ALL:ALL) NOPASSWD:ALL 로 수정 합니다. 26 line123456789101112131415161718192021222324252627282930## This file MUST be edited with the &#x27;visudo&#x27; command as root.## Please consider adding local content in /etc/sudoers.d/ instead of# directly modifying this file.## See the man page for details on how to write a sudoers file.#Defaults env_resetDefaults mail_badpassDefaults secure_path=&quot;/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/snap/bin&quot;# Host alias specification# User alias specification# Cmnd alias specification# User privilege specificationroot ALL=(ALL:ALL) ALL# Members of the admin group may gain root privileges%admin ALL=(ALL) ALL# Allow members of group sudo to execute any command%sudo ALL=(ALL:ALL) NOPASSWD:ALL# See sudoers(5) for more information on &quot;#include&quot; directives:#includedir /etc/sudoers.d 3. 패키지 업데이트최신 패키지로 변경하기 위해 아래와 같이 update upgrade 를 진행합니다. 1ubuntu@ip-172-31-47-167:~$ sudo apt update 1ubuntu@ip-172-31-47-167:~$ sudo apt upgrade -y 4. 타임존 변경타임존을 변경합니다. 기본 설치하고 나면 timezone이 utc로 설정 되어 있습니다. timezone을 KST로 변경합니다. 1ubuntu@ip-172-31-47-167:~$ sudo timedatectl set-timezone &#x27;Asia/Seoul&#x27; date 명령을 입력하여 정상적으로 변경되었는지 확인 합니다. 12ubuntu@ip-172-31-47-167:~$ dateWed Mar 3 23:52:20 KST 2021 5. 호스트명 변경homename을 변경합니다. 아직 호스트 이름을 바꾸지 않아 아래와 ip-172-31-47-167 나옵니다 아래 명령어를 입력하여 호스트 이름을 goodsaem으로 변경합니다. 1ubuntu@ip-172-31-47-167:~$ sudo hostnamectl set-hostname goodsaem 정상적으로 변경되었는지 확인 합니다. 12ubuntu@ip-172-31-47-167:~$ cat /etc/hostnamegoodsaem 서버를 재시작 하면 호스트 이름이 변경되므로 변경되지 않도록 설정을 수정합니다. 1ubuntu@ip-172-31-47-167:~$ sudo vi /etc/cloud/cloud.cfg 아래 내용중 preserve_hostname: false 되어 있는 부분을 true로 변경합니다. 15 line123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133# The top level settings are used as module# and system configuration.# A set of users which may be applied and/or used by various modules# when a &#x27;default&#x27; entry is found it will reference the &#x27;default_user&#x27;# from the distro configuration specified belowusers: - default# If this is set, &#x27;root&#x27; will not be able to ssh in and they# will get a message to login instead as the default $userdisable_root: true# This will cause the set+update hostname module to not operate (if true)preserve_hostname: true# Example datasource config# datasource:# Ec2:# metadata_urls: [ &#x27;blah.com&#x27; ]# timeout: 5 # (defaults to 50 seconds)# max_wait: 10 # (defaults to 120 seconds)# The modules that run in the &#x27;init&#x27; stagecloud_init_modules: - migrator - seed_random - bootcmd - write-files - growpart - resizefs - disk_setup - mounts - set_hostname - update_hostname - update_etc_hosts - ca-certs - rsyslog - users-groups - ssh# The modules that run in the &#x27;config&#x27; stagecloud_config_modules:# Emit the cloud config ready event# this can be used by upstart jobs for &#x27;start on cloud-config&#x27;. - emit_upstart - snap - ssh-import-id - locale - set-passwords - grub-dpkg - apt-pipelining - apt-configure - ubuntu-advantage - ntp - timezone - disable-ec2-metadata - runcmd - byobu# The modules that run in the &#x27;final&#x27; stagecloud_final_modules: - package-update-upgrade-install - fan - landscape - lxd - ubuntu-drivers - puppet - chef - mcollective - salt-minion - reset_rmc - refresh_rmc_and_interface - rightscale_userdata - scripts-vendor - scripts-per-once - scripts-per-boot - scripts-per-instance - scripts-user - ssh-authkey-fingerprints - keys-to-console - phone-home - final-message - power-state-change# System and/or distro specific settings# (not accessible to handlers/transforms)system_info: # This will affect which distro class gets used distro: ubuntu # Default user name + that default users groups (if added/used) default_user: name: ubuntu lock_passwd: True gecos: Ubuntu groups: [adm, audio, cdrom, dialout, dip, floppy, lxd, netdev, plugdev, sudo, video] sudo: [&quot;ALL=(ALL) NOPASSWD:ALL&quot;] shell: /bin/bash # Automatically discover the best ntp_client ntp_client: auto # Other config here will be given to the distro class and/or path classes paths: cloud_dir: /var/lib/cloud/ templates_dir: /etc/cloud/templates/ upstart_dir: /etc/init/ package_mirrors: - arches: [i386, amd64] failsafe: primary: http://archive.ubuntu.com/ubuntu security: http://security.ubuntu.com/ubuntu search: primary: - http://%(ec2_region)s.ec2.archive.ubuntu.com/ubuntu/ - http://%(availability_zone)s.clouds.archive.ubuntu.com/ubuntu/ - http://%(region)s.clouds.archive.ubuntu.com/ubuntu/ security: [] - arches: [arm64, armel, armhf] failsafe: primary: http://ports.ubuntu.com/ubuntu-ports security: http://ports.ubuntu.com/ubuntu-ports search: primary: - http://%(ec2_region)s.ec2.ports.ubuntu.com/ubuntu-ports/ - http://%(availability_zone)s.clouds.ports.ubuntu.com/ubuntu-ports/ - http://%(region)s.clouds.ports.ubuntu.com/ubuntu-ports/ security: [] - arches: [default] failsafe: primary: http://ports.ubuntu.com/ubuntu-ports security: http://ports.ubuntu.com/ubuntu-ports ssh_svcname: ssh 다시 로그아웃 하고 로그인 했을때 hostname 이 변경되었는지 확인 합니다. goodsaem으로 정상 변경되었습니다. 1,3,36 line123456789101112131415161718192021222324252627282930313233343536ubuntu@ip-172-31-47-167:~$ logoutConnection to ec2-13-209-42-88.ap-northeast-2.compute.amazonaws.com closed.goodsaem@goodsaemui-iMac goodsaem % ssh -i &quot;goodsaem.pem&quot; ubuntu@ec2-13-209-42-88.ap-northeast-2.compute.amazonaws.comWelcome to Ubuntu 18.04.5 LTS (GNU/Linux 5.4.0-1037-aws x86_64) * Documentation: https://help.ubuntu.com * Management: https://landscape.canonical.com * Support: https://ubuntu.com/advantage System information as of Thu Mar 4 00:00:55 KST 2021 System load: 0.0 Processes: 121 Usage of /: 8.3% of 29.02GB Users logged in: 1 Memory usage: 39% IP address for eth0: 172.31.47.167 Swap usage: 0% * Introducing self-healing high availability clusters in MicroK8s. Simple, hardened, Kubernetes for production, from RaspberryPi to DC. https://microk8s.io/high-availability * Canonical Livepatch is available for installation. - Reduce system reboots and improve kernel security. Activate at: https://ubuntu.com/livepatch18 packages can be updated.0 of these updates are security updates.To see these additional updates run: apt list --upgradableNew release &#x27;20.04.2 LTS&#x27; available.Run &#x27;do-release-upgrade&#x27; to upgrade to it.*** System restart required ***Last login: Wed Mar 3 23:13:55 2021 from 1.247.71.18ubuntu@goodsaem:~$ 6. &#x2F;etc&#x2F;hosts 아이피 변경&#x2F;etc&#x2F;hosts 에 있는 아이피를 변경합니다. 아이피와 호스트 정보를 입력해 주세요 전 127.0.0.1 과 aws 부여해준 공인 아이피(이아이피는 서버를 재시작 하면 다른 아이피로 변경됩니다.)를 입력했습니다.전 가급적이면 서버를 재시작 하지 않을 계획이므로 그대로 사용하겠습니다. 1ubuntu@goodsaem:~$ sudo vi /etc/hosts 2~4 line123456789101112127.0.0.1 localhost127.0.0.1 goodsaem13.124.172.200 goodsaem.ml13.124.172.200 www.goodsaem.ml# The following lines are desirable for IPv6 capable hosts::1 ip6-localhost ip6-loopbackfe00::0 ip6-localnetff00::0 ip6-mcastprefixff02::1 ip6-allnodesff02::2 ip6-allroutersff02::3 ip6-allhosts 7. 무료도메인내 ip 변경freenom 무료 도메인을 발급 받은곳의 아이피를 aws ec2 서버 아이피로 변경합니다. 로그인후 service &gt; my domains 를 클릭합니다. Manage domain 버튼을 클릭합니다. Manage Freenom DNS 를 클릭합니다. ec2 서버의 아이피를 입력하고 save change 버튼을 클릭하여 변경사항을 적용 합니다.","categories":[{"name":"설치","slug":"설치","permalink":"http://goodsaem.github.io/categories/%EC%84%A4%EC%B9%98/"},{"name":"SPRINGBOOT","slug":"설치/SPRINGBOOT","permalink":"http://goodsaem.github.io/categories/%EC%84%A4%EC%B9%98/SPRINGBOOT/"}],"tags":[{"name":"AWS","slug":"AWS","permalink":"http://goodsaem.github.io/tags/AWS/"},{"name":"SPRINGBOOT","slug":"SPRINGBOOT","permalink":"http://goodsaem.github.io/tags/SPRINGBOOT/"}]},{"title":"4/13 무료 aws + springboot 서버 구축","slug":"setup/aws-springboot-04","date":"2023-03-25T11:04:00.000Z","updated":"2025-06-29T07:42:01.009Z","comments":true,"path":"setup/aws-springboot-04/","link":"","permalink":"http://goodsaem.github.io/setup/aws-springboot-04/","excerpt":"","text":"4.AWS 서버접속mac , windows pc에서 생성한 프리티어 서버에 접속하는 방법입니다. 1. 연결정보 확인연결할 서버 접속 정보를 확인합니다. 인스턴스 아이디 아래 부분의 인스턴스를 클릭합니다. 연결 버튼을 클릭합니다. SSH 클라이언트 탭을 클릭합니다. SSH 클라이언트 아래의 텍스트를 복사합니다. ssh -i “goodsaem.pem” &#117;&#98;&#x75;&#x6e;&#x74;&#x75;&#x40;&#x65;&#x63;&#x32;&#45;&#49;&#51;&#45;&#50;&#48;&#57;&#x2d;&#x34;&#50;&#x2d;&#x38;&#56;&#46;&#97;&#112;&#x2d;&#110;&#111;&#114;&#x74;&#104;&#101;&#97;&#x73;&#116;&#45;&#50;&#x2e;&#x63;&#x6f;&#109;&#x70;&#x75;&#x74;&#101;&#x2e;&#97;&#109;&#97;&#122;&#x6f;&#110;&#x61;&#119;&#x73;&#x2e;&#x63;&#x6f;&#109; 프리티어 서버생성할때 키를 생성했었습니다. 키 생성한 곳으로 이동하여 붙여 넣기 하고 엔터를 입력하면 아래와 같이 서버에 접속합니다.제 pc 가 mac 이라 이런 방법으로 접속 했구요 putty로도 접속 가능합니다. 2. 맥에서 연결하기Mac 에서 aws 서버 접속하는 방법입니다. 위에 복사한 문자열을 터미널에서 입력하고 엔터를 입력하면 아래와 같이 프리티어 서버로 접속됩니다. &lt;&lt;&lt; @&#x2F;freetier&#x2F;z104&#x2F;1.sh{1} 3. 윈도우에서 연결하기윈도우에서는 putty 로 접속하며 해당 sw 설치하는 방법 과 ec2 서버에 접속하는 방법에 대해서 알아보겠습니다. https://www.chiark.greenend.org.uk/~sgtatham&#x2F;putty&#x2F;latest.html 설치파일을다운로드 받고 설치를 진행합니다. default 로 다음 다음 하셔서 설치를 완료해 주세요.. putty gen 을 실행 합니다. load 버튼을 클릭합니다. 모든 파일을 . 선택하고 goodsaem.pem 파일을 불러 옵니다. Save private key 버튼을 클릭합니다. goodsaem.ppk 파일로 적당한 위치에 저장합니다. putty 를 실행하고 위에서 ubuntu@ 뒤쪽에 있는 문자를 복사해서 호스트에 붙여 넣기 합니다. ec2-13-209-42-88.ap-northeast-2.compute.amazonaws.com ssh 메뉴 아래 Auth를 클릭합니다. Browse 버튼을 클릭하여 goodsaem.ppk 파일을 불러 옵니다. 파일을 불러 왔으면 Open 버튼을 클릭 합니다. login 부분에 ubuntu 라고 입력하고 엔터를 클릭하면 아래와 같이 서버에 접속이 정상 완료됩니다.","categories":[{"name":"설치","slug":"설치","permalink":"http://goodsaem.github.io/categories/%EC%84%A4%EC%B9%98/"},{"name":"SPRINGBOOT","slug":"설치/SPRINGBOOT","permalink":"http://goodsaem.github.io/categories/%EC%84%A4%EC%B9%98/SPRINGBOOT/"}],"tags":[{"name":"AWS","slug":"AWS","permalink":"http://goodsaem.github.io/tags/AWS/"},{"name":"SPRINGBOOT","slug":"SPRINGBOOT","permalink":"http://goodsaem.github.io/tags/SPRINGBOOT/"}]},{"title":"3/13 무료 aws + springboot 서버 구축","slug":"setup/aws-springboot-03","date":"2023-03-25T11:03:00.000Z","updated":"2025-06-29T07:42:00.993Z","comments":true,"path":"setup/aws-springboot-03/","link":"","permalink":"http://goodsaem.github.io/setup/aws-springboot-03/","excerpt":"","text":"3. EC2 인스턴스 추가무료로 사용할수 있는 freetier 서버를 추가하겠습니다. Free Tier 서버를 구축을 위해 가입하신 정보로 로그인한후 aws console 버튼을 클릭하신후 서비스 &gt; 모든 서비스 &gt; 컴퓨팅 &gt; EC2 서버를 선택합니다. EC2 좌측메뉴중 인스턴스를 클릭하고 다시 인스턴스 시작 버튼을 클릭합니다. 프리티어 사용 가능이라고 된 서버가 무료 서버입니다. Ubuntu Server 18.04 LTS(HVM) SSD Volumn type을 선택 합니다. 다음 : 인스턴스 세부정보 구성 버튼을 클릭합니다. 변경없이 다음 : 스토리지 추가를 클릭합니다. 기본값 8 이라고 입력하고 다음 : 태그 추가 버튼을 클릭합니다.::: tip 무료는 30G 가능30G 까지 가능하지만 해당 크기만큼 사용하지 않을 계획 이므로 8G 로 설정을 진행합니다.::: 태그 추가 버튼을 클릭하여 키와 값에 식별할수 있는 이름을 입력합니다. 그리고 나서 다음 : 보안 그룹 구성 버튼을 클릭합니다. 새 보안 그룹 생성을 선택하고 검토 및 시작 버튼을 클릭합니다. 인스턴스 시작 검토 화면에서 선택한 내용들을 확인합니다. 그리고 나서 시작 하기 버튼을 클릭합니다. 이렇게 시작하고 나면 키페이 생성 화면이 팝업이 되는데 새 키 페어 생성을 선택하고 키페어 이름을 입력하고 키 페이 다운로드 버튼을 클릭하여 로컬 pc에 저장합니다.그리고 나서 인서턴스 시작 버튼을 클릭합니다. 여기까지 완료하셨으면 프리티어 서버가 정상 생성되었습니다.","categories":[{"name":"설치","slug":"설치","permalink":"http://goodsaem.github.io/categories/%EC%84%A4%EC%B9%98/"},{"name":"SPRINGBOOT","slug":"설치/SPRINGBOOT","permalink":"http://goodsaem.github.io/categories/%EC%84%A4%EC%B9%98/SPRINGBOOT/"}],"tags":[{"name":"AWS","slug":"AWS","permalink":"http://goodsaem.github.io/tags/AWS/"},{"name":"SPRINGBOOT","slug":"SPRINGBOOT","permalink":"http://goodsaem.github.io/tags/SPRINGBOOT/"}]},{"title":"2/13 무료 aws + springboot 서버 구축","slug":"setup/aws-springboot-02","date":"2023-03-25T11:02:00.000Z","updated":"2025-06-29T07:42:00.984Z","comments":true,"path":"setup/aws-springboot-02/","link":"","permalink":"http://goodsaem.github.io/setup/aws-springboot-02/","excerpt":"","text":"2. 계정생성1년간 사용할 Aws 계정을 생성합니다. 1.계정생성https://aws.amazon.com/ko/ (opens new window)여기에 접속하여 우측상단의 AWS 계정생성 버튼을 클릭합니다. 이메일 주소 암호 계정 이름을 입력합니다. 연락처 정보는 개인,전체이름 및 전화번호 주소 우편 번호를 입력합니다. 주소는 비용이 발생할경우 청구하는 주소가 되므로 정확히 기재해 주시고영문으로 작성하셔야 됩니다. 영문주소 변환은 https://www.jusoen.com 여기에서 가능합니다. 신용카드 정보와 만료날짜 및 신용카드에 적혀있는 카드 소유자 이름을 정확하게 입력하시고 청구지 주소를 선택합니다. 휴대폰 전화를 입력하여 문자로 확인코드를 받습니다. 보안검사 부분의 보안문자를 보안문자 입력하는 칸에 정확히 입력합니다. 휴대폰으로 온 문자를 확인하고 코드확인 란에 숫자를 입력하여 다음단계로 진행합니다. 마지막 단계로 기본지원 - 무료를 선택한후 가입을 완료합니다.","categories":[{"name":"설치","slug":"설치","permalink":"http://goodsaem.github.io/categories/%EC%84%A4%EC%B9%98/"},{"name":"SPRINGBOOT","slug":"설치/SPRINGBOOT","permalink":"http://goodsaem.github.io/categories/%EC%84%A4%EC%B9%98/SPRINGBOOT/"}],"tags":[{"name":"AWS","slug":"AWS","permalink":"http://goodsaem.github.io/tags/AWS/"},{"name":"SPRINGBOOT","slug":"SPRINGBOOT","permalink":"http://goodsaem.github.io/tags/SPRINGBOOT/"}]},{"title":"1/13 무료 aws + springboot 서버 구축","slug":"setup/aws-springboot-01","date":"2023-03-25T11:01:00.000Z","updated":"2025-06-29T07:42:00.983Z","comments":true,"path":"setup/aws-springboot-01/","link":"","permalink":"http://goodsaem.github.io/setup/aws-springboot-01/","excerpt":"","text":"1. 사전준비aws + ubuntu 18 + mariadb + springboot 백엔드 서버 구축에 관련된 내용입니다. 1. 구축 조건서버를 구축할때 아래의 조건에 맞게 구축되어야 된다는 원칙을 정하고 방법을 찾았습니다. 비용이 발생하면 안됩니다. 완벽하게 https 를 지원해 주어야 됩니다. springboot 지원가능해야 됩니다. 구축해야 되는 서버는 오로지 https://goodsaem.github.io 사이트에서 요청한 데이터만 응답해야 됩니다. mariadb 도 사용할수 있어야 됩니다. 이런 조건을 맞추기 위해서는 aws 서버 구축이 정답이였습니다. 1년간 프리티어로 무료로 사용할수 있기에 회원가입을 하고 신용카드를등록하여 프리티어 서버를 구축했습니다. 2. 아키텍처 사용자가 브라우저를 통해서 https://goodsaem.github.io 를 접속합니다. 데이터를 저장하거나 데이터를 db 조회가 필요한경우 https://goodsaem.ml 로 rest api를 호출합니다. https://goodsaem.ml aws 프리티어 서버에 구축되어 있습니다. https://goodsaem.github.io 에서 오는 요청 및 localhost에서 실행한 요청에 대해서만 허용하고 나머지는 거부합니다. nginx 웹서버는 https://goodsaem.github.io 에서 호출한 요청에 대해서만 응답하고 나머지 요청은 전부 거부하도록 설정합니다. https://goodsaem.ml/spring/ 으로 오는 요청은 spring boot가 응답하도록 설정합니다. db는 mariadb를 사용하며 spring에서 데이터 crud가 필요한 경우 동작하도록 설계합니다. 3. 목표서버 셋업이 완료되고 나서 ssl 수준이 얼마나 되는지 체크하는 사이트https://www.ssllabs.com/ssltest/analyze.html에 점검한 결과 입니다.A를 받았으니 잘 설정한것 같네요 ^^ 4. 무료 도메인 발급무료 도메인 발급 받는 방법에 대해서 알아 보겠습니다. 요즘 대부분의 웹서버는 https 통신을 합니다. 이제는 선택이 아닌 필수 인것 같네요 제가 서버를 구축하게 된 직접적인 원인도 https 설정을 하기 위함입니다.nginx 에 https 서비스를 구성하기 위해서는 도메인이 필요합니다. 도메인이 준비되면 certbot을 통해서 무료 ssl 인증서 적용 및 http&#x2F;2 적용이 가능한데요무료 도메인 가입하는 부분에 대해서 아래오 같이 정리했습니다. 서버셋업전 도메인 발급 받으시기 바랍니다. 5. FreenomFreenom 에서 무료 도메인 발급 받는 방법입니다. https://www.freenom.com/en/index.html?lang=en freenom 이란사이트에서 무료 도메인을 발급 받을수 있습니다. 회원가입을 후 도메인 등록을 진행합니다. 로그인 후 원하는 도메인을 입력하고 엔터키를 클릭한후 사용하고자 하는 도메인에서 Get it now! 버튼을 클릭하여 선택합니다.그리고 나서 Checkout 버튼을 클릭합니다. Use DNS 버튼을 클릭하고 Use Freenom DNS Service를 선택한후 aws free tier의 퍼블릭 ipv4 주소를 입력하고 Continue 버튼을 클릭합니다. 도메인 주문이 완료되었습니다. My Domain 에서 주문한 도메인 확인이 가능합니다.::: tip goodsaem.ml무료 도메인을 2개 신청했는데 2번째꺼는 어떤이유인지 mydomain에 추가 되지 않아 goodsaem.ml로 셋팅 진행하겠습니다.:::","categories":[{"name":"설치","slug":"설치","permalink":"http://goodsaem.github.io/categories/%EC%84%A4%EC%B9%98/"},{"name":"SPRINGBOOT","slug":"설치/SPRINGBOOT","permalink":"http://goodsaem.github.io/categories/%EC%84%A4%EC%B9%98/SPRINGBOOT/"}],"tags":[{"name":"AWS","slug":"AWS","permalink":"http://goodsaem.github.io/tags/AWS/"},{"name":"SPRINGBOOT","slug":"SPRINGBOOT","permalink":"http://goodsaem.github.io/tags/SPRINGBOOT/"}]},{"title":"13/13 무료로 aws + php 서버 구축","slug":"setup/aws-php-13","date":"2023-03-25T07:20:00.000Z","updated":"2025-06-29T07:42:00.981Z","comments":true,"path":"setup/aws-php-13/","link":"","permalink":"http://goodsaem.github.io/setup/aws-php-13/","excerpt":"","text":"13. 테스트Vue 로 간단하게 title 과 status , priority 를 입력 받아 저장하고 조회하는 화면을 만들어 보았습니다. 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103&lt;template&gt; &lt;div&gt; &lt;ul&gt; &lt;li&gt; &lt;el-input placeholder=&quot;please input title&quot; v-model=&quot;model.title&quot;&gt;&lt;/el-input&gt; &lt;/li&gt; &lt;li&gt; &lt;el-input placeholder=&quot;please input status&quot; v-model=&quot;model.status&quot;&gt;&lt;/el-input&gt; &lt;/li&gt; &lt;li&gt; &lt;el-input placeholder=&quot;please input priority&quot; v-model=&quot;model.priority&quot;&gt;&lt;/el-input&gt; &lt;/li&gt; &lt;li&gt; &lt;el-input placeholder=&quot;please input description&quot; v-model=&quot;model.description&quot;&gt;&lt;/el-input&gt; &lt;/li&gt; &lt;li&gt; &lt;el-button type=&quot;primary&quot; @click=&quot;create&quot;&gt;db에 값 저장 하기&lt;/el-button&gt; &lt;el-button type=&quot;primary&quot; @click=&quot;search&quot;&gt;db에 값 조회 하기&lt;/el-button&gt; &lt;/li&gt; &lt;/ul&gt; &lt;el-table :data=&quot;tasks&quot; border style=&quot;width: 100%&quot;&gt; &lt;el-table-column prop=&quot;task_id&quot; label=&quot;Task ID&quot; width=&quot;180&quot;&gt; &lt;/el-table-column&gt; &lt;el-table-column prop=&quot;title&quot; label=&quot;Title&quot; width=&quot;180&quot;&gt; &lt;/el-table-column&gt; &lt;el-table-column prop=&quot;start_date&quot; label=&quot;Start Date&quot;&gt; &lt;/el-table-column&gt; &lt;el-table-column prop=&quot;due_date&quot; label=&quot;Due Date&quot;&gt; &lt;/el-table-column&gt; &lt;el-table-column prop=&quot;status&quot; label=&quot;Status&quot;&gt; &lt;/el-table-column&gt; &lt;el-table-column prop=&quot;priority&quot; label=&quot;Priority&quot;&gt; &lt;/el-table-column&gt; &lt;el-table-column prop=&quot;description&quot; label=&quot;Description&quot;&gt; &lt;/el-table-column&gt; &lt;el-table-column prop=&quot;created_at&quot; label=&quot;Create Date&quot;&gt; &lt;/el-table-column&gt; &lt;/el-table&gt; &lt;/div&gt;&lt;/template&gt;&lt;script&gt;export default &#123; name: &quot;GetJson&quot;, created() &#123; &#125;, data() &#123; return &#123; model : &#123; title : &#x27;제목&#x27;, status : &#x27;1&#x27;, priority : &#x27;1&#x27;, description: &#x27;내용&#x27;, &#125;, tasks : [], &#125; &#125;, methods: &#123; create() &#123; if(this.model.title != &#x27;&#x27; &amp;&amp; this.model.status != &#x27;&#x27; &amp;&amp; this.model.priority != &#x27;&#x27; &amp;&amp; this.model.description != &#x27;&#x27;) &#123; this.$http.post(&#x27;https://goodsaem.ml/tasks&#x27;,[this.model]).then((response) =&gt; &#123; this.$message(&#x27;정상적으로 저장되었습니다.&#x27;); &#125;).catch((err) =&gt;&#123; this.$message(err); &#125;); &#125; &#125;, search() &#123; this.$http.get(&#x27;https://goodsaem.ml/tasks&#x27;).then((response) =&gt; &#123; this.tasks = response.data; &#125;) &#125; &#125;&#125;&lt;/script&gt;&lt;style scoped&gt;&lt;/style&gt; local에서 테스트 하면 아래와 같이 cors 오류가 발생합니다. https://goodsaem.github.io에서 테스트 하면 정상 동작 합니다. cors 설정도 정상적으로 이루어 졌네요.nginx 에는 cors 설정읋 하지 않았고 php쪽에만 cors 설정을 했습니다. 아래 코드를 참고하세요php slime frame work요&#x2F;php&#x2F;restfull&#x2F;setup.html 사용하는 부분도 참고하세요 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475&lt;?phpdeclare(strict_types=1);use App\\Application\\Actions\\User\\ListUsersAction;use App\\Application\\Actions\\User\\ViewUserAction;use Psr\\Http\\Message\\ResponseInterface as Response;use Psr\\Http\\Message\\ServerRequestInterface as Request;use Slim\\App;use Slim\\Interfaces\\RouteCollectorProxyInterface as Group;return function (App $app) &#123; $app-&gt;add(new Tuupola\\Middleware\\CorsMiddleware([ &quot;origin&quot; =&gt; [&quot;https://goodsaem.github.io&quot;,&quot;goodsaem.ml&quot;,&quot;goodsaem.ml&quot;,&quot;localhost&quot;], &quot;methods&quot; =&gt; [&quot;GET&quot;, &quot;POST&quot;, &quot;PUT&quot;, &quot;PATCH&quot;, &quot;DELETE&quot;,&quot;OPTIONS&quot;], &quot;headers.allow&quot; =&gt; [], &quot;headers.expose&quot; =&gt; [], &quot;credentials&quot; =&gt; true, &quot;cache&quot; =&gt; 0, ])); $app-&gt;get(&#x27;/&#x27;, function (Request $request, Response $response) &#123; $response-&gt;getBody()-&gt;write(&#x27;Hello world!&#x27;); return $response; &#125;); $app-&gt;group(&#x27;/users&#x27;, function (Group $group) &#123; $group-&gt;get(&#x27;&#x27;, ListUsersAction::class); $group-&gt;get(&#x27;/&#123;id&#125;&#x27;, ViewUserAction::class); &#125;); $app-&gt;get(&#x27;/api/customers&#x27; , function(Request $request , Response $response)&#123; $response-&gt;getBody()-&gt;write(&#x27;CUSTOMERS!&#x27;); return $response; &#125;); $app-&gt;get(&#x27;/tasks&#x27;, function (Request $request, Response $response) &#123; $db = $this-&gt;get(PDO::class); $sth = $db-&gt;prepare(&quot;SELECT * FROM tasks ORDER BY task_id&quot;); $sth-&gt;execute(); $data = $sth-&gt;fetchAll(PDO::FETCH_ASSOC); $payload = json_encode($data); $response-&gt;getBody()-&gt;write($payload); return $response-&gt;withHeader(&#x27;Content-Type&#x27;, &#x27;application/json&#x27;); &#125;); $app-&gt;post(&#x27;/tasks&#x27;, function (Request $request, Response $response) &#123; $db = $this-&gt;get(PDO::class); $contents = json_decode(file_get_contents(&#x27;php://input&#x27;), true); foreach ($contents as $item) &#123; $sth = $db-&gt;prepare(&quot; INSERT INTO `tasks` ( `title`, `start_date`, `due_date`, `status`, `priority`, `description`, `created_at` ) VALUES ( :title, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, :status, :priority, :description, CURRENT_TIMESTAMP )&quot;); $sth-&gt;bindParam(&#x27;:title&#x27;, $item[&#x27;title&#x27;]); $sth-&gt;bindParam(&#x27;:status&#x27;, $item[&#x27;status&#x27;]); $sth-&gt;bindParam(&#x27;:priority&#x27;, $item[&#x27;priority&#x27;]); $sth-&gt;bindParam(&#x27;:description&#x27;, $item[&#x27;description&#x27;]); $sth-&gt;execute(); &#125; $response-&gt;getBody()-&gt;write( json_encode($contents)); return $response-&gt;withHeader(&#x27;Content-Type&#x27;, &#x27;application/json&#x27;); &#125;);&#125;; 마무리무료로 프리티어 서버로 ssl 서버를 구축하는 방법에 대해서 알아보았습니다. 긴글 읽어주셔서 감사합니다.","categories":[{"name":"설치","slug":"설치","permalink":"http://goodsaem.github.io/categories/%EC%84%A4%EC%B9%98/"},{"name":"PHP","slug":"설치/PHP","permalink":"http://goodsaem.github.io/categories/%EC%84%A4%EC%B9%98/PHP/"}],"tags":[{"name":"PHP","slug":"PHP","permalink":"http://goodsaem.github.io/tags/PHP/"},{"name":"AWS","slug":"AWS","permalink":"http://goodsaem.github.io/tags/AWS/"}]},{"title":"12/13 무료로 aws + php 서버 구축","slug":"setup/aws-php-12","date":"2023-03-25T07:10:00.000Z","updated":"2025-06-29T07:42:00.981Z","comments":true,"path":"setup/aws-php-12/","link":"","permalink":"http://goodsaem.github.io/setup/aws-php-12/","excerpt":"","text":"12. SSL 점검SSL이 제되로 생성되었는지 https://www.ssllabs.com/ssltest/analyze.html 사이트에 접속하여아래와 같이 도메인을 입력하고 점검을 수행합니다. A 라고 연두색으로 나오는것 보니 제되로 설정이 된것 같습니다. 이제 실제로 https 로 접속을 시도해 보겠습니다. https://goodsaem.ml/info.php https 프로토콜을 이용하여설정한 도메인으로 접속하니 아래 그림과 같이 정상적으로 화면이 나왔습니다. 보안 오류 같은거 없이 ^^ 대 성공입니다. 자물쇠 모양을 더블클릭하세요 아래와 같이 보안 연결이 사용되었다는 내용이 확인되며 인증서도 유효 하다고 하네요.","categories":[{"name":"설치","slug":"설치","permalink":"http://goodsaem.github.io/categories/%EC%84%A4%EC%B9%98/"},{"name":"PHP","slug":"설치/PHP","permalink":"http://goodsaem.github.io/categories/%EC%84%A4%EC%B9%98/PHP/"}],"tags":[{"name":"PHP","slug":"PHP","permalink":"http://goodsaem.github.io/tags/PHP/"},{"name":"AWS","slug":"AWS","permalink":"http://goodsaem.github.io/tags/AWS/"}]},{"title":"11/13 무료로 aws + php 서버 구축","slug":"setup/aws-php-11","date":"2023-03-25T07:00:00.000Z","updated":"2025-06-29T07:42:00.978Z","comments":true,"path":"setup/aws-php-11/","link":"","permalink":"http://goodsaem.github.io/setup/aws-php-11/","excerpt":"","text":"11. 무료 도메인 발급nginx 에 https 서비스를 구성하기 위해서는 도메인이 필요합니다. 도메인이 준비되면 certbot을 통해서 무료 ssl 인증서 적용 및 http&#x2F;2 적용이가능한데요 무료 도메인 가입부터 nginx 에 셋팅하는 부분까지 진행해 보겠습니다. 도메인 등록https://www.freenom.com/en/index.html?lang=en freenom 이란사이트에 회원가입을 한후 도메인 등록을 진행합니다. 로그인 후 원하는 도메인을 입력하고 엔터키를 클릭한후 사용하고자 하는 도메인에서 Get it now! 버튼을 클릭하여 선택합니다.그리고 나서 Checkout 버튼을 클릭합니다. Use DNS 버튼을 클릭하고 Use Freenom DNS Service를 선택한후 aws free tier의 퍼블릭 ipv4 주소를 입력하고 Continue 버튼을 클릭합니다. 도메인 주문이 완료되었습니다. My Domain 에서 주문한 도메인 확인이 가능합니다.::: tip goodsaem.ml무료 도메인을 2개 신청했는데 2번째꺼는 어떤이유인지 mydomain에 추가 되지 않아 goodsaem.ml로 셋팅 진행하겠습니다.::: Diffie-Hellman 키생성디피와 헬만이 1976년도에 발표한 비밀키 교환 방식의 알고리즘 입니다. 이를 이용하여 4096 bit의 키를 생성하겠습니다.아래 명령어로 키를 생성하는데 대략 10분정도 소요 되었습니다. 이키를 이용해서 https에서 비밀키를 교환하여 안정한https 통신을 할수 있으므로 반드시 진행해야 되는 사항입니다. 1ubuntu@goodsaem:~$ sudo openssl dhparam -out /etc/nginx/conf.d/ssl-dhparams.pem 4096 Let’s Encrypt &amp;&amp; Certbot 으로 인증서 발급Let’s Encrypt 는 사용자에게 무료로 SSL&#x2F;TLS 인증서를 발급해 주는 기관 입니다. 한번 발급 받으면 90일간 사용이 가능하며만료 30일전에 메일로 내용을 통보하면 그때 다시 갱신이 가능합니다. 인증서 발급은 certbot certbot-auto 를 이용하여발급 및 갱신합니다. certbot 등록을 위해 repository 등록을 진행합니다. 12345ubuntu@goodsaem:~$ sudo apt-get updateubuntu@goodsaem:~$ sudo apt-get install software-properties-commonubuntu@goodsaem:~$ sudo add-apt-repository universeubuntu@goodsaem:~$ sudo add-apt-repository ppa:certbot/certbotubuntu@goodsaem:~$ sudo apt-get update certbot을 설치합니다. 1ubuntu@goodsaem:~$ sudo apt-get install certbot certbot nginx 플러그인을 설치 합니다. 1ubuntu@goodsaem:~$ sudo apt-get install python-certbot-nginx nginx에 서버 이름을 변경하기 위해 아래와 같이 입력합니다. 1ubuntu@goodsaem:~$ sudo vi /etc/nginx/conf.d/default.conf 서버 네임을 freenom에서 발급받은 도메인으로 지정해 줍니다. 1server_name goodsaem.ml; 이제 아래 certbot 명령어를 통해서 ssl 인증서를 발급받습니다. 인증서 발급시사용할 admin email 주소와 이용약관 동의 옵션을 지정하여 인증서 발급을 받겠습니다. 1ubuntu@goodsaem:~$ sudo certbot --nginx --email goodsaem@protonmail.com --agree-tos 위에 명령어를 입력하면 아래와 같은 형태로 진행되는데요 중요한 부분만 설명하겠습니다. 7 라인에 추가할 https 도메인이 보입니다. 10 라인에서 엔터를 입력합니다. 24 라인에서 e를 입력합니다.(제가 기존에 등록한 도메인이 있어 추가할거라고 물어보는데 추가한다고 하고 진행합니다.) 37,41 라인 보시면 http로 요청이 오면 https로 리다이렉트 할것인지 물어보는데 전 2번을 선택하여 리다이렉트를 진행합니다.123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869Saving debug log to /var/log/letsencrypt/letsencrypt.logPlugins selected: Authenticator nginx, Installer nginxWhich names would you like to activate HTTPS for?- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -1: goodsaem.ml2: goodsaem.ml- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -Select the appropriate numbers separated by commas and/or spaces, or leave inputblank to select all options shown (Enter &#x27;c&#x27; to cancel): - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -You have an existing certificate that contains a portion of the domains yourequested (ref: /etc/letsencrypt/renewal/goodsaem.ml.conf)It contains these names: goodsaem.mlYou requested these names for the new certificate: goodsaem.ml,goodsaem.ml.Do you want to expand and replace this existing certificate with the newcertificate?- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -(E)xpand/(C)ancel:e Renewing an existing certificatePerforming the following challenges:http-01 challenge for goodsaem.mlUsing default address 80 for authentication.Waiting for verification...Cleaning up challengesDeploying Certificate to VirtualHost /etc/nginx/conf.d/default.confDeploying Certificate to VirtualHost /etc/nginx/conf.d/default.confPlease choose whether or not to redirect HTTP traffic to HTTPS, removing HTTP access.- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -1: No redirect - Make no further changes to the webserver configuration.2: Redirect - Make all requests redirect to secure HTTPS access. Choose this fornew sites, or if you&#x27;re confident your site works on HTTPS. You can undo thischange by editing your web server&#x27;s configuration.- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -Select the appropriate number [1-2] then [enter] (press &#x27;c&#x27; to cancel): 2Redirecting all traffic on port 80 to ssl in /etc/nginx/conf.d/default.confNo matching insecure server blocks listening on port 80 found.- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -Your existing certificate has been successfully renewed, and the new certificatehas been installed.The new certificate covers the following domains: https://goodsaem.mland https://goodsaem.mlYou should test your configuration at:https://www.ssllabs.com/ssltest/analyze.html?d=goodsaem.mlhttps://www.ssllabs.com/ssltest/analyze.html?d=goodsaem.ml- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -IMPORTANT NOTES: - Congratulations! Your certificate and chain have been saved at: /etc/letsencrypt/live/goodsaem.ml/fullchain.pem Your key file has been saved at: /etc/letsencrypt/live/goodsaem.ml/privkey.pem Your cert will expire on 2021-06-03. To obtain a new or tweaked version of this certificate in the future, simply run certbot again with the &quot;certonly&quot; option. To non-interactively renew *all* of your certificates, run &quot;certbot renew&quot; - If you like Certbot, please consider supporting our work by: Donating to ISRG / Let&#x27;s Encrypt: https://letsencrypt.org/donate Donating to EFF: https://eff.org/donate-le 제되로 인증서 발급이 되었는지 확인해 보겠습니다.domain에 보시면 goodsaem.ml와 goodsaem.ml 도메인이 등록되어 있습니다. 또한 9,10 라인에fullchain.pem 키와 privkey.pem 파일이 정상 생성되었음을 확인할수 있습니다. 1234567891011ubuntu@goodsaem:~$ sudo certbot certificatesSaving debug log to /var/log/letsencrypt/letsencrypt.log- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -Found the following certs: Certificate Name: goodsaem.ml Domains: goodsaem.ml goodsaem.ml Expiry Date: 2021-06-03 13:54:40+00:00 (VALID: 89 days) Certificate Path: /etc/letsencrypt/live/goodsaem.ml/fullchain.pem Private Key Path: /etc/letsencrypt/live/goodsaem.ml/privkey.pem- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - nginx에 ssl 관련 설정이 등록되었는지 default.conf 내용을 확인해 보겠습니다.74번라인부터 114번 라인까지 ssl 관련 설정이 추가되었습니다. 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114ubuntu@goodsaem:~$ cat /etc/nginx/conf.d/default.confserver &#123; server_name goodsaem.ml; charset utf-8; access_log /var/log/nginx/localhost.access.log main; error_log /var/log/nginx/localhost.error.log; #root /usr/share/nginx/html; root /home/ubuntu/phprest/public; location / &#123; #root /usr/share/nginx/html; #index index index.php index.html index.htm; try_files $uri $uri/ /index.php?$args; #error_page 405 =200 $uri; &#125; error_page 405 =200 $uri; error_page 500 502 503 504 /50x.html; location = /50x.html &#123; root /usr/share/nginx/html; &#125; #error_page 404 /404.html; # redirect server error pages to the static page /50x.html # #error_page 500 502 503 504 /50x.html; #location = /50x.html &#123; # root /usr/share/nginx/html; #&#125; # proxy the PHP scripts to Apache listening on 127.0.0.1:80 # location ~ \\.php$ &#123; #fastcgi_pass unix:/run/php/php-fpm.sock; proxy_pass http://127.0.0.1; fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name; include fastcgi_params; fastcgi_pass 127.0.0.1:9000; proxy_redirect off; fastcgi_intercept_errors on; fastcgi_read_timeout 300; fastcgi_send_timeout 300; &#125; # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000 # #location ~ \\.php$ &#123; # root html; # fastcgi_pass 127.0.0.1:9000; # fastcgi_index index.php; # fastcgi_param SCRIPT_FILENAME /scripts$fastcgi_script_name; # include fastcgi_params; #&#125; # deny access to .htaccess files, if Apache&#x27;s document root # concurs with nginx&#x27;s one # location ~ /\\.ht &#123; deny all; &#125; location = /xmlrpc.php &#123; deny all; error_page 403 = /403.html; &#125; listen 443 ssl; # managed by Certbot ssl_certificate /etc/letsencrypt/live/goodsaem.ml/fullchain.pem; # managed by Certbot ssl_certificate_key /etc/letsencrypt/live/goodsaem.ml/privkey.pem; # managed by Certbot include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot&#125;server &#123; if ($host = goodsaem.ml) &#123; return 301 https://$host$request_uri; &#125; # managed by Certbot server_name goodsaem.ml; return 404; # managed by Certbot listen 443 ssl; # managed by Certbot ssl_certificate /etc/letsencrypt/live/goodsaem.ml/fullchain.pem; # managed by Certbot ssl_certificate_key /etc/letsencrypt/live/goodsaem.ml/privkey.pem; # managed by Certbot include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot&#125;server &#123; if ($host = goodsaem.ml) &#123; return 301 https://$host$request_uri; &#125; # managed by Certbot listen 80; server_name goodsaem.ml; return 404; # managed by Certbot&#125; letsencrypt 에 있는 Diffie-Hellman Key 를 아래와 같은 이름으로 백업합니다. 12ubuntu@goodsaem:~$ cd /etc/letsencrypt/ubuntu@goodsaem:~$ sudo mv ssl-dhparams.pem ssl-dhparams.pem.backup 생성한 키 파일을 &#x2F;etc&#x2F;letsencrypt 로 복사합니다. 1ubuntu@goodsaem:~$ sudo cp -rp /etc/nginx/conf.d/ssl-dhparams.pem /etc/letsencrypt/ nginx 를 재시작 합니다. 1ubuntu@goodsaem:~$ sudo systemctl restart nginx","categories":[{"name":"설치","slug":"설치","permalink":"http://goodsaem.github.io/categories/%EC%84%A4%EC%B9%98/"},{"name":"PHP","slug":"설치/PHP","permalink":"http://goodsaem.github.io/categories/%EC%84%A4%EC%B9%98/PHP/"}],"tags":[{"name":"PHP","slug":"PHP","permalink":"http://goodsaem.github.io/tags/PHP/"},{"name":"AWS","slug":"AWS","permalink":"http://goodsaem.github.io/tags/AWS/"}]},{"title":"10/13 무료로 aws + php 서버 구축","slug":"setup/aws-php-10","date":"2023-03-25T06:50:00.000Z","updated":"2025-06-29T07:42:00.978Z","comments":true,"path":"setup/aws-php-10/","link":"","permalink":"http://goodsaem.github.io/setup/aws-php-10/","excerpt":"","text":"10. AWS 보안설정http 및 https 로 접속하기 위해서는 aws에 인바운드 (들어오는쪽)에 방화벽 설정을 해주셔야 됩니다.아래와 같이 aws 콘솔에서 EC2 &gt; 인스턴스 &gt; 인스터스 명을 클릭하시고 보안 탭에서 보안그룹의 보안그룹번호를 클릭합니다. 인바운드 규칙 변경을 통해 아래와 같이 http , https 에대한 규칙을 추가합니다. 규칙 추가는 인바운드 규칙 편집 버튼을 클릭하여 아래와 같이 http,https 위치무관이라고 선택하고 저장하시면 됩니다. 여기까지 설정하셨다면 ec2 서버의 IP주소&#x2F;phpinfo.php 로 접속해서 php정보가 아래와 같이 정상적으로 로딩 되는지를 확인 합니다이렇게 나온다면 nginx + php 설정이 완료 되었습니다.","categories":[{"name":"설치","slug":"설치","permalink":"http://goodsaem.github.io/categories/%EC%84%A4%EC%B9%98/"},{"name":"PHP","slug":"설치/PHP","permalink":"http://goodsaem.github.io/categories/%EC%84%A4%EC%B9%98/PHP/"}],"tags":[{"name":"PHP","slug":"PHP","permalink":"http://goodsaem.github.io/tags/PHP/"},{"name":"AWS","slug":"AWS","permalink":"http://goodsaem.github.io/tags/AWS/"}]},{"title":"9/13 무료로 aws + php 서버 구축","slug":"setup/aws-php-9","date":"2023-03-25T06:40:00.000Z","updated":"2025-06-29T07:42:00.983Z","comments":true,"path":"setup/aws-php-9/","link":"","permalink":"http://goodsaem.github.io/setup/aws-php-9/","excerpt":"","text":"9. Nginx 설정아래 명령어로 nginx 설정을 진행합니다. 1ubuntu@goodsaem:~$ sudo vi /etc/nginx/nginx.conf 주요한 부분에 대해서 라인번호 별로 설명을 진행하겠습니다. 1 : nginx 에서 사용할 os 유저 입니다. nginx 로 지정해 줍니다. 2 : 접속을 받고 처리하는 worker process 수를 뜻하며 해당 프로세스 만큼 프로세스가 생성됩니다. 5 : nginx 기동시 로그를 받을수 있도록 notice 로 설정합니다. 11 : worker_connections 은 워커당 접속수를 나타내며 위에서 프로세스를 4개로 지정했으므로 최대 4096개의 접속이 가능합니다. 19 : 로그 포멧을 지정합니다. 51 : 19라인에서 지정한 main 포멧되로 로그를 남깁니다. access_log &#x2F;var&#x2F;log&#x2F;nginx&#x2F;access.log main; 24 : 디렉토리 인덱스 파일에 php를 추가합니다. 26 : gzip을 사용하겠다는 의미 입니다. 27 : gzip을 지원하지 않는 ie6 에서는 동작하지 않겠다는 의미 입니다. 28 : 압축의 정도를 나타내는 수치로 이 수치가 높으면 cpu 사용율이 높아집니다. cpu 사용율을 보면서 적절히 조정합니다. 33 : gzip을 수행할 파일종류를 지정합니다.::: tip gzipgzip on 이 설정되어 있으면 웹서버가 응답할때 gzip으로 압축해서 내용을 전달하고 http 헤더 쪽에 압축된 gzip 파일이라는 정보를 같이전달합니다. 그럼 웹브라우저는 이 내용이 압축이 되었다고 판단하고 자동으로 압축을 풀어서 화면을 랜더링 합니다. 이렇게 압축된 gzip파일을받으면 시스템 속도가 빠르다는 장점이 있습니다. 하지만 너무 과도하게 사용하면 cpu 사용율 상승문제가 발생할수 있습니다. 그래서 프로그래밍으로 js 나 json 파일을 압축시켜 놓고 특정 디렉토리의 js나 json은 압축된 파일이라는 헤더정보를 전달해서웹서버가 cpu를 과도하게 사용하지 않도록 설정합니다.::: 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162user nginx;worker_processes 4;worker_rlimit_nofile 30000;error_log /var/log/nginx/error.log notice;pid /var/run/nginx.pid;events &#123; use epoll; worker_connections 1024;&#125;http &#123; include /etc/nginx/mime.types; default_type application/octet-stream; log_format main &#x27;$remote_addr - $remote_user [$time_local] &quot;$request&quot; &#x27; &#x27;$status $body_bytes_sent &quot;$http_referer&quot; &#x27; &#x27;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;&#x27;; log_not_found off; index index.php index.htm index.html; gzip on; gzip_disable &quot;msie6&quot;; gzip_comp_level 6; gzip_min_length 500; gzip_buffers 16 8k; gzip_proxied any; gzip_vary on; gzip_types text/plain text/css text/js text/xml text/javascript application/javascript application/x-javascript application/json application/xml application/rss+xml image/svg+xml image/png; keepalive_timeout 65; sendfile on; tcp_nopush on; tcp_nodelay on; aio on; sendfile_max_chunk 512k; directio 4m; server_tokens off; client_max_body_size 50M; proxy_buffer_size 128k; proxy_buffers 4 256k; proxy_busy_buffers_size 256k; fastcgi_buffer_size 128k; fastcgi_buffers 256 16k; http2_max_concurrent_streams 512; access_log /var/log/nginx/access.log main; error_log /var/log/nginx/error.log notice; #sendfile on; #tcp_nopush on; #keepalive_timeout 65; #gzip on; include /etc/nginx/conf.d/*.conf;&#125; 서버 설정파일을 수정하겠습니다. 먼저 수정하기 전에 아래 명령어를 실행하여 설정파일을 백업해 둡니다. 1ubuntu@goodsaem:~$ sudo cp -rp /etc/nginx/conf.d/default.conf /etc/nginx/conf.d/default.conf.bak 설정 파일을 수정합니다. 1ubuntu@goodsaem:~$ sudo vi /etc/nginx/conf.d/default.conf 2 : 리스턴 포트를 지정합니다. 3~7 : 서버이름 및 인코딩 로그 파일명 root 디렉토리를 지정합니다. 9-11 : location 절을 수정합니다. 13 : error_page 405 &#x3D;200 $uri; 이설정이 없으면 nginx 에서 php rest api post 호출시 오류가 발생합니다. post 방식으로 요청이 올때 오류가발생하지 않게 하기 위해 추가한 설정입니다. 관련내용은 https://stackoverflow.com/questions/51613180/nginx-post-method-does-not-work참고 하시기 바랍니다. 15 : 50x 오류 발생시 사용하 페이지를 지정합니다. 20~31 : nginx 에서 php-fpm 이 동작하기 위해서 아래와 같이 수정하셔야 됩니다. 유의깊게 볼 라인은 26라인 fastcgi_pass 127.0.0.1:9000; 이부분입니다.php 설정시에 추가한 listen과 동일한값 127.0.0.1:9000 로 설정해 줍니다. *33-40 : 그외 설정입니다.12345678910111213141516171819202122232425262728293031323334353637383940414243...server &#123; listen 80; server_name localhost; charset utf-8; access_log /var/log/nginx/localhost.access.log main; error_log /var/log/nginx/localhost.error.log; root /usr/share/nginx/html; location / &#123; try_files $uri $uri/ /index.php?$args; &#125; error_page 405 =200 $uri; error_page 500 502 503 504 /50x.html; location = /50x.html &#123; root /usr/share/nginx/html; &#125; location ~ \\.php$ &#123; #fastcgi_pass unix:/run/php/php-fpm.sock; proxy_pass http://127.0.0.1; fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name; include fastcgi_params; fastcgi_pass 127.0.0.1:9000; proxy_redirect off; fastcgi_intercept_errors on; fastcgi_read_timeout 300; fastcgi_send_timeout 300; &#125; location ~ /\\.ht &#123; deny all; &#125; location = /xmlrpc.php &#123; deny all; error_page 403 = /403.html; &#125; ... php가 정상동작하는지 확인하기 위한 코드를 작성하겠습니다. 1ubuntu@goodsaem:~$ sudo vi /usr/share/nginx/html/phpinfo.php 아래와 php 코드를 작성합니다. 123&lt;?phpphpinfo();?&gt; nginx가 실행할수 있도록 소유권을 변경합니다. 1ubuntu@goodsaem:~$ sudo chown nginx:nginx /usr/share/nginx/html/phpinfo.php 여기까지 설정했다면 nginx와 php-fprm을 재시작 합니다. 12ubuntu@goodsaem:~$ sudo systemctl restart php7.4-fpmubuntu@goodsaem:~$ sudo systemctl restart nginx","categories":[{"name":"설치","slug":"설치","permalink":"http://goodsaem.github.io/categories/%EC%84%A4%EC%B9%98/"},{"name":"PHP","slug":"설치/PHP","permalink":"http://goodsaem.github.io/categories/%EC%84%A4%EC%B9%98/PHP/"}],"tags":[{"name":"PHP","slug":"PHP","permalink":"http://goodsaem.github.io/tags/PHP/"},{"name":"AWS","slug":"AWS","permalink":"http://goodsaem.github.io/tags/AWS/"}]},{"title":"8/13 무료로 aws + php 서버 구축","slug":"setup/aws-php-8","date":"2023-03-25T06:30:00.000Z","updated":"2025-06-29T07:42:00.982Z","comments":true,"path":"setup/aws-php-8/","link":"","permalink":"http://goodsaem.github.io/setup/aws-php-8/","excerpt":"","text":"8. PHP 설치최신 버전의 php를 설치하기 위해 저장소를 등록합니다. 1ubuntu@goodsaem:~$ sudo apt -y install software-properties-common 아래 명령어를 입력하고 중간에 엔터를 입력하는 부분에서 엔터를 입력합니다. 1234567891011121314151617181920212223242526272829303132333435363738ubuntu@goodsaem:~$ sudo add-apt-repository ppa:ondrej/phpCo-installable PHP versions: PHP 5.6, PHP 7.x and most requested extensions are included. Only Supported Versions of PHP (http://php.net/supported-versions.php) for Supported Ubuntu Releases (https://wiki.ubuntu.com/Releases) are provided. Don&#x27;t ask for end-of-life PHP versions or Ubuntu release, they won&#x27;t be provided.Debian oldstable and stable packages are provided as well: https://deb.sury.org/#debian-dpaYou can get more information about the packages at https://deb.sury.orgIMPORTANT: The &lt;foo&gt;-backports is now required on older Ubuntu releases.BUGS&amp;FEATURES: This PPA now has a issue tracker:https://deb.sury.org/#bug-reportingCAVEATS:1. If you are using php-gearman, you need to add ppa:ondrej/pkg-gearman2. If you are using apache2, you are advised to add ppa:ondrej/apache23. If you are using nginx, you are advised to add ppa:ondrej/nginx-mainline or ppa:ondrej/nginxPLEASE READ: If you like my work and want to give me a little motivation, please consider donating regularly: https://donate.sury.org/WARNING: add-apt-repository is broken with non-UTF-8 locales, seehttps://github.com/oerdnj/deb.sury.org/issues/56 for workaround:# LC_ALL=C.UTF-8 add-apt-repository ppa:ondrej/phpMore info: https://launchpad.net/~ondrej/+archive/ubuntu/phpPress [ENTER] to continue or Ctrl-c to cancel adding it.Hit:1 http://ap-northeast-2.ec2.archive.ubuntu.com/ubuntu bionic InReleaseGet:2 http://ap-northeast-2.ec2.archive.ubuntu.com/ubuntu bionic-updates InRelease [88.7 kB] Get:3 http://ap-northeast-2.ec2.archive.ubuntu.com/ubuntu bionic-backports InRelease [74.6 kB] Hit:4 https://mirror.yongbok.net/mariadb/repo/10.5/ubuntu bionic InRelease Get:5 http://ap-northeast-2.ec2.archive.ubuntu.com/ubuntu bionic-updates/main amd64 Packages [1912 kB] Hit:6 http://ppa.launchpad.net/certbot/certbot/ubuntu bionic InRelease Get:7 http://security.ubuntu.com/ubuntu bionic-security InRelease [88.7 kB] Hit:8 http://nginx.org/packages/mainline/ubuntu bionic InRelease Hit:9 http://ppa.launchpad.net/ondrej/php/ubuntu bionic InRelease Fetched 2164 kB in 1s (1891 kB/s) Reading package lists... Done php 7.4 버전을 설치합니다. 123456ubuntu@goodsaem:~$ sudo apt install php7.4 php7.4-cli php7.4-fpm \\php7.4-bcmath php7.4-bz2 php7.4-common php7.4-curl \\php7.4-dba php7.4-gd php7.4-json php7.4-mbstring php7.4-opcache \\php7.4-readline php7.4-soap php7.4-xml php7.4-xmlrpc php7.4-zip \\php7.4-ctype php7.4-pdo php7.4-redis php7.4-mysql php7.4-imagick \\php7.4-intl php7.4-mysqlnd php7.4-gmp php7.4-geoip php7.4-dev -y 설치후 php 버전을 확인합니다. 정상 설치되었네요 12345ubuntu@goodsaem:~$ php -vPHP 7.4.15 (cli) (built: Feb 23 2021 15:12:05) ( NTS )Copyright (c) The PHP GroupZend Engine v3.4.0, Copyright (c) Zend Technologies with Zend OPcache v7.4.15, Copyright (c), by Zend Technologies php 기본설정을 진행합니다. 1ubuntu@goodsaem:~$ sudo vi /etc/php/7.4/fpm/php.ini 아래 부분을 찾아서 하나씩 변경합니다. 업로드 최대 크기와 최대 파일 사이즈 메모리 제한은 구축하고자 하는 어플리케이션 환경에 맞게 설정 바랍니다. 123456...date.timezone = Asia/Seoulexpose_php = Offpost_max_size = 30Mupload_max_filesize = 30Mmemory_limit = 128M php-fpm 설정apahce php 조합일때는 mod_php란 모듈을 이용해서 연결을 시켰는데 Nginx와 연동을 위해서는 PHP-FPM 이라는 Fast-Cgi 기능을 설정해야 됩니다. :::tip PHP-FPMFastCGI Process Manager::: 설정 파일을 수정합니다. error_log 위치만 아래와 같이 변경하겠습니다. 1234ubuntu@goodsaem:~$ sudo vi /etc/php/7.4/fpm/php-fpm.conf...error_log = /var/log/php7.4-fpm.log... php pool 설정php www 관련 설정을 진행하겠습니다. 먼저 설정파일을 백업 합니다. 1ubuntu$ sudo cp -rp /etc/php/7.4/fpm/pool.d/www.conf /etc/php/7.4/fpm/pool.d/www.conf.back 설정 파일을 수정합니다. 1ubuntu@goodsaem:~$ sudo vi /etc/php/7.4/fpm/pool.d/www.conf 아래와 같은 설정 내용등을 찾아서 변경해 주세요. listen : Nginx 와 php 연동을 위해 리스턴 하는 아이피 포트를 127.0.0.1:9000 으로 지정했습니다. 웹에서 php에 대한 요청이 들어오면 해당포트로 보내서 php가 처리를 하도록 리스턴 아이피 포트를 지정합니다.:::tip listen &#x3D; &#x2F;run&#x2F;php&#x2F;php7.4-fpm.sock (소켓연결)소켓으로 연결 할수 있습니다. 하지만 무슨 이유인지 연결이 되지 않아 아이피 포트로 지정했습니다.::: pm.max_children : PHP Pool(www) 내에서 가동할 수 있는 최대 자식 프로세스 수를 의미 합니다 pm.start_servers : php-fpm 을 실행할 때 초기에 생성하는 자식 프로세스의 개수입니다 pm.min_spare_servers :idle 상태의 자식 프로세스 개수가 이 개수보다 작으면 자식 프로세스를 생성합니다 pm.max_spare_servers: idle 상태의 자식 프로세스의 최대 개수를 의미 합니다. pm.max_requests : 최대 request를 처리 수 입니다. 500 으로 설정되어 있다면 500번 request 후 프로세스를 다시 생성 하며프로세스가 점진적인 메모리 증가에 대한부분을 방지 할 수 있습니다. 123456789101112131415161718user = nginxgroup = nginxlisten.owner = nginxlisten.group = nginxlisten.mode = 0660listen = 127.0.0.1:9000pm = dynamicpm.max_children = 50pm.start_servers = 5pm.min_spare_servers = 5pm.max_spare_servers = 40pm.max_requests = 500access.log = /var/log/php-fpm-$pool.access.logaccess.format = &quot;%R - %u %t \\&quot;%m %r%Q%q\\&quot; %s %f %&#123;mili&#125;d %&#123;kilo&#125;M %C%%&quot;slowlog = /var/log/php-fpm-$pool.log.slowrequest_slowlog_timeout = 5php_admin_value[error_log] = /var/log/fpm-php.$pool.error.logphp_admin_flag[log_errors] = on","categories":[{"name":"설치","slug":"설치","permalink":"http://goodsaem.github.io/categories/%EC%84%A4%EC%B9%98/"},{"name":"PHP","slug":"설치/PHP","permalink":"http://goodsaem.github.io/categories/%EC%84%A4%EC%B9%98/PHP/"}],"tags":[{"name":"PHP","slug":"PHP","permalink":"http://goodsaem.github.io/tags/PHP/"},{"name":"AWS","slug":"AWS","permalink":"http://goodsaem.github.io/tags/AWS/"}]},{"title":"7/13 무료로 aws + php 서버 구축","slug":"setup/aws-php-7","date":"2023-03-25T06:20:00.000Z","updated":"2025-06-29T07:42:00.982Z","comments":true,"path":"setup/aws-php-7/","link":"","permalink":"http://goodsaem.github.io/setup/aws-php-7/","excerpt":"","text":"7. MariaDB 설치mariadb 설치를 진행하겠습니다. 우선 repository 부터 아래와 같이 설정합니다. 123ubuntu@goodsaem:~$ sudo apt-get install software-properties-commonubuntu@goodsaem:~$ sudo apt-key adv --fetch-keys &#x27;https://mariadb.org/mariadb_release_signing_key.asc&#x27;ubuntu@goodsaem:~$ sudo add-apt-repository &#x27;deb [arch=amd64,arm64,ppc64el] https://mirror.yongbok.net/mariadb/repo/10.5/ubuntu bionic main&#x27; 패키지를 업데이트한후 mariadb 설치를 진행합니다. 12ubuntu@goodsaem:~$ sudo apt updateubuntu@goodsaem:~$ sudo apt install mariadb-server -y mariadb 보안설정마리아 db를 설치하고 나면 디비 보안 관련 설정을 진행해야 합니다. 1ubuntu@goodsaem:~$ sudo mysql_secure_installation 중간에 불필요한 부분은 삭제 했습니다. 1 라인 root 유저가 사용할 패스워드를 입력합니다. 4 라인 unix socket 인증방식 사용여부는 n 으로 지정해 주세요(root 쉘인증이 기본 사용됩니다.) 8,9,10 라인 root passwor를 변경합니다. 15 라인 익명 사용자를 삭제 합니다. 17 라인 root의 원격접속을 막습니다. root 는 항상 로컬에서만 접속 가능합니다. 19 라인 test 데이터 베이스를 삭제 합니다. 25 라인 권한에 대한 리로드를 진행합니다. y를 입력해주세요1234567891011121314151617181920212223242526Enter current password for root (enter for none):OK, successfully used password, moving on…...You already have your root account protected, so you can safely answer &#x27;n&#x27;....Switch to unix_socket authentication [Y/n] n...Change the root password? [Y/n] yNew password:Re-enter new password:Password updated successfully!Reloading privilege tables..… Success!...Remove anonymous users? [Y/n] y...Disallow root login remotely? [Y/n] y...Remove test database and access to it? [Y/n] y- Dropping test database… … Success!- Removing privileges on test database… … Success!... Reload privilege tables now? [Y/n] y… Success! mariadb 접속아래 명령어를 입력하여 mariadb 에 접속합니다. 성공적으로 접속되었습니다. 1ubuntu@goodsaem:~$ sudo mysql 123456789Welcome to the MariaDB monitor. Commands end with ; or \\g.Your MariaDB connection id is 156Server version: 10.5.9-MariaDB-1:10.5.9+maria~bionic-log mariadb.org binary distributionCopyright (c) 2000, 2018, Oracle, MariaDB Corporation Ab and others.Type &#x27;help;&#x27; or &#x27;\\h&#x27; for help. Type &#x27;\\c&#x27; to clear the current input statement.MariaDB [(none)]&gt; mariadb 설정마리아 db 설정을 진행하겠습니다. 마리아 디비 설정 파일이 있는곳으로 이동하여 설정 파일을 수정합니다. 12ubuntu@goodsaem:~$ cd /etc/mysql/mariadb.conf.dubuntu@goodsaem:~$ sudo vi 50-server.cnf 아래 설정을 추가합니다. 1234567891011121314...server-id=1log_bin = binlogexpire_logs_days=10innodb_buffer_pool_size = 384Minnodb_file_per_table=TRUEcharacter-set-client-handshake=OFFskip-character-set-client-handshakemax_allowed_packet=500Minit_connect=SET collation_connection = utf8mb4_general_ciinit_connect=SET NAMES utf8mb4character-set-server = utf8mb4collation-server = utf8mb4_general_ci... 설정된 값이 적용되도록 마리아 디비를 재시작 합니다. 1ubuntu@goodsaem:/etc/mysql/mariadb.conf.d$ sudo systemctl restart mysql","categories":[{"name":"설치","slug":"설치","permalink":"http://goodsaem.github.io/categories/%EC%84%A4%EC%B9%98/"},{"name":"PHP","slug":"설치/PHP","permalink":"http://goodsaem.github.io/categories/%EC%84%A4%EC%B9%98/PHP/"}],"tags":[{"name":"PHP","slug":"PHP","permalink":"http://goodsaem.github.io/tags/PHP/"},{"name":"AWS","slug":"AWS","permalink":"http://goodsaem.github.io/tags/AWS/"}]},{"title":"6/13 무료로 aws + php 서버 구축","slug":"setup/aws-php-6","date":"2023-03-25T06:10:00.000Z","updated":"2025-06-29T07:42:00.982Z","comments":true,"path":"setup/aws-php-6/","link":"","permalink":"http://goodsaem.github.io/setup/aws-php-6/","excerpt":"","text":"6. Nginx 설치aws freetier linux + Nginx + MariaDB + SpringBoot 조합으로 설치를 진행하겠습니다.그 첫번째로 Nginx 설치를 진행하겠습니다. Nginx 설치Nginx는 MainLine 버전과 stable 버전 2가지가 존재 합니다. 메인라이는 새로운 기능 및 업데이트 및 버그 패치가 동시에 진행되고 stable 은 메인라인에서버그패치만 진행하는 버전입니다. 메이저 버전을 올리고 싶지 않고 사용하고 싶다면 stable 버전이 좋겠지만 전 최신 기능과 update 및 버그 픽스가 동시에이루어지는 mainline으로 설치를 진행하겠습니다. nginx 의존성 패키지 설치1ubuntu@goodsaem:~$ sudo apt install curl gnupg2 ca-certificates lsb-release -y nginx mainline 패키지 추가메인라인 패키지 리스트를 추가해 줍니다. 1ubuntu@goodsaem:~$ sudo echo &quot;deb http://nginx.org/packages/mainline/ubuntu `lsb_release -cs` nginx&quot; | sudo tee /etc/apt/sources.list.d/nginx.list 패키지를 업데이트 합니다. 1ubuntu@goodsaem:~$ sudo apt update nginx 를 설치합니다. 1ubuntu@goodsaem:~$ sudo apt install nginx 설치된 버전을 확인 합니다. 12345ubuntu@goodsaem:~$ nginx -Vnginx version: nginx/1.19.7built by gcc 7.5.0 (Ubuntu 7.5.0-3ubuntu1~18.04)built with OpenSSL 1.1.1 11 Sep 2018 (running with OpenSSL 1.1.1j 16 Feb 2021)TLS SNI support enabled","categories":[{"name":"설치","slug":"설치","permalink":"http://goodsaem.github.io/categories/%EC%84%A4%EC%B9%98/"},{"name":"PHP","slug":"설치/PHP","permalink":"http://goodsaem.github.io/categories/%EC%84%A4%EC%B9%98/PHP/"}],"tags":[{"name":"PHP","slug":"PHP","permalink":"http://goodsaem.github.io/tags/PHP/"},{"name":"AWS","slug":"AWS","permalink":"http://goodsaem.github.io/tags/AWS/"}]},{"title":"5/13 무료로 aws + php 서버 구축","slug":"setup/aws-php-5","date":"2023-03-25T06:00:00.000Z","updated":"2025-06-29T07:42:00.981Z","comments":true,"path":"setup/aws-php-5/","link":"","permalink":"http://goodsaem.github.io/setup/aws-php-5/","excerpt":"","text":"5. 초기설정구축한 ubuntu 18.0.4 서버에 초기 설정을 진행 하겠습니다. 필요없다고 생각하는 부분은 skip 하셔도 상관 없습니다. 버전버전 정보를 확인 합니다. 설치 잘 되어 있네요 ^^ 123456ubuntu@ip-172-31-47-167:~$ lsb_release -aNo LSB modules are available.Distributor ID: UbuntuDescription: Ubuntu 18.04.5 LTSRelease: 18.04Codename: bionic sudo 해서 root 하는 일을 많이 진행할 예정입니다. 그때 마다 패스워드를 입력하지 않기 위해 &#x2F;etc&#x2F;sudoers 파일을 수정합니다 nopasswd 설정1ubuntu@ip-172-31-47-167:~$ sudo vi /etc/sudoers %sudo ALL&#x3D;(ALL:ALL) ALL 이라고 된부분을 아래와 같이 %sudo ALL&#x3D;(ALL:ALL) NOPASSWD:ALL 로 수정 합니다. 123456789101112131415161718192021222324252627282930## This file MUST be edited with the &#x27;visudo&#x27; command as root.## Please consider adding local content in /etc/sudoers.d/ instead of# directly modifying this file.## See the man page for details on how to write a sudoers file.#Defaults env_resetDefaults mail_badpassDefaults secure_path=&quot;/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/snap/bin&quot;# Host alias specification# User alias specification# Cmnd alias specification# User privilege specificationroot ALL=(ALL:ALL) ALL# Members of the admin group may gain root privileges%admin ALL=(ALL) ALL# Allow members of group sudo to execute any command%sudo ALL=(ALL:ALL) NOPASSWD:ALL# See sudoers(5) for more information on &quot;#include&quot; directives:#includedir /etc/sudoers.d 패키지 업데이트최신 패키지로 변경하기 위해 아래와 같이 update upgrade 를 진행합니다. 1ubuntu@ip-172-31-47-167:~$ sudo apt update 1ubuntu@ip-172-31-47-167:~$ sudo apt upgrade -y Timezone 바꾸기기본 설치하고 나면 timezone이 utc로 설정 되어 있습니다. 한국 리전에서 생성했으면 timezone을 서울로 해주면 좋을텐데 ㅎㅎ 타임존을 서울로 변경해 줍니다. 1ubuntu@ip-172-31-47-167:~$ udo timedatectl set-timezone &#x27;Asia/Seoul&#x27; date 명령을 입력하여 정상적으로 변경되었는지 확인 합니다. 12ubuntu@ip-172-31-47-167:~$ dateWed Mar 3 23:52:20 KST 2021 hostname 바꾸기아직 호스트 이름을 바꾸지 않아 아래와 ip-172-31-47-167 나옵니다 아래 명령어를 입력하여 호스트 이름을 goodsaem으로 변경합니다. 1ubuntu@ip-172-31-47-167:~$ sudo hostnamectl set-hostname goodsaem 정상적으로 변경되었는지 확인 합니다. 12ubuntu@ip-172-31-47-167:~$ cat /etc/hostnamegoodsaem 서버를 재시작 하면 호스트 이름이 변경되므로 변경되지 않도록 설정을 수정합니다. 1ubuntu@ip-172-31-47-167:~$ sudo vi /etc/cloud/cloud.cfg 아래 내용중 preserve_hostname: false 되어 있는 부분을 true로 변경합니다. 12345678910111213141516171819202122# The top level settings are used as module# and system configuration.# A set of users which may be applied and/or used by various modules# when a &#x27;default&#x27; entry is found it will reference the &#x27;default_user&#x27;# from the distro configuration specified belowusers:- default# If this is set, &#x27;root&#x27; will not be able to ssh in and they# will get a message to login instead as the default $userdisable_root: true# This will cause the set+update hostname module to not operate (if true)preserve_hostname: true# Example datasource config# datasource:# Ec2:# metadata_urls: [ &#x27;blah.com&#x27; ]# timeout: 5 # (defaults to 50 seconds)# max_wait: 10 # (defaults to 120 seconds) 다시 로그아웃 하고 로그인 했을때 hostname 이 변경되었는지 확인 합니다. goodsaem으로 정상 변경되었습니다. 123456789101112131415161718192021222324252627282930313233343536ubuntu@ip-172-31-47-167:~$ logoutConnection to ec2-13-209-42-88.ap-northeast-2.compute.amazonaws.com closed.goodsaem@goodsaemui-iMac goodsaem % ssh -i &quot;goodsaem.pem&quot; ubuntu@ec2-13-209-42-88.ap-northeast-2.compute.amazonaws.comWelcome to Ubuntu 18.04.5 LTS (GNU/Linux 5.4.0-1037-aws x86_64) * Documentation: https://help.ubuntu.com * Management: https://landscape.canonical.com * Support: https://ubuntu.com/advantage System information as of Thu Mar 4 00:00:55 KST 2021 System load: 0.0 Processes: 121 Usage of /: 8.3% of 29.02GB Users logged in: 1 Memory usage: 39% IP address for eth0: 172.31.47.167 Swap usage: 0% * Introducing self-healing high availability clusters in MicroK8s. Simple, hardened, Kubernetes for production, from RaspberryPi to DC. https://microk8s.io/high-availability * Canonical Livepatch is available for installation. - Reduce system reboots and improve kernel security. Activate at: https://ubuntu.com/livepatch18 packages can be updated.0 of these updates are security updates.To see these additional updates run: apt list --upgradableNew release &#x27;20.04.2 LTS&#x27; available.Run &#x27;do-release-upgrade&#x27; to upgrade to it.*** System restart required ***Last login: Wed Mar 3 23:13:55 2021 from 1.247.71.18ubuntu@goodsaem:~$ &#x2F;etc&#x2F;hosts 아이피 변경아이피와 호스트 정보를 입력해 주세요 전 127.0.0.1 과 aws 부여해준 공인 아이피(이아이피는 서버를 재시작 하면 다른 아이피로 변경됩니다.)를 입력했습니다.전 가급적이면 서버를 재시작 하지 않을 계획이므로 그대로 사용하겠습니다. 1ubuntu@goodsaem:~$ sudo vi /etc/hosts 1234567891011127.0.0.1 localhost127.0.0.1 goodsaem13.209.42.88 goodsaem.ml# The following lines are desirable for IPv6 capable hosts::1 ip6-localhost ip6-loopbackfe00::0 ip6-localnetff00::0 ip6-mcastprefixff02::1 ip6-allnodesff02::2 ip6-allroutersff02::3 ip6-allhosts","categories":[{"name":"설치","slug":"설치","permalink":"http://goodsaem.github.io/categories/%EC%84%A4%EC%B9%98/"},{"name":"PHP","slug":"설치/PHP","permalink":"http://goodsaem.github.io/categories/%EC%84%A4%EC%B9%98/PHP/"}],"tags":[{"name":"PHP","slug":"PHP","permalink":"http://goodsaem.github.io/tags/PHP/"},{"name":"AWS","slug":"AWS","permalink":"http://goodsaem.github.io/tags/AWS/"}]},{"title":"4/13 무료로 aws + php 서버 구축","slug":"setup/aws-php-4","date":"2023-03-25T05:50:00.000Z","updated":"2025-06-29T07:42:00.981Z","comments":true,"path":"setup/aws-php-4/","link":"","permalink":"http://goodsaem.github.io/setup/aws-php-4/","excerpt":"","text":"4.서버연결먼저 서버에 접속 하는 방법 부터 알려드릴께요.. 인스턴스 아이디 아래 부분의 인스턴스를 클릭합니다. 연결 버튼을 클릭합니다. SSH 클라이언트 탭을 클릭합니다. SSH 클라이언트 아래의 텍스트를 복사합니다. ssh -i “goodsaem.pem” &#x75;&#98;&#x75;&#110;&#116;&#x75;&#x40;&#x65;&#x63;&#50;&#x2d;&#x31;&#x33;&#x2d;&#x32;&#48;&#57;&#x2d;&#52;&#x32;&#45;&#x38;&#x38;&#46;&#x61;&#112;&#x2d;&#x6e;&#x6f;&#x72;&#116;&#104;&#101;&#97;&#115;&#x74;&#45;&#50;&#x2e;&#x63;&#x6f;&#109;&#112;&#x75;&#116;&#101;&#x2e;&#x61;&#109;&#x61;&#122;&#x6f;&#110;&#x61;&#x77;&#x73;&#x2e;&#x63;&#x6f;&#109; 프리티어 서버생성할때 키를 생성했었습니다. 키 생성한 곳으로 이동하여 붙여 넣기 하고 엔터를 입력하면 아래와 같이 서버에 접속합니다.제 pc 가 mac 이라 이런 방법으로 접속 했구요 putty 로 접속 가능합니다. 맥에서 연결1234567891011121314151617181920212223242526272829303132goodsaem@goodsaemui-iMac goodsaem % ssh -i &quot;goodsaem.pem&quot; ubuntu@ec2-13-209-42-88.ap-northeast-2.compute.amazonaws.comWelcome to Ubuntu 18.04.5 LTS (GNU/Linux 5.4.0-1037-aws x86_64) * Documentation: https://help.ubuntu.com * Management: https://landscape.canonical.com * Support: https://ubuntu.com/advantage System information as of Wed Mar 3 22:43:18 KST 2021 System load: 0.0 Processes: 120 Usage of /: 8.3% of 29.02GB Users logged in: 0 Memory usage: 39% IP address for eth0: 172.31.47.167 Swap usage: 0% * Introducing self-healing high availability clusters in MicroK8s. Simple, hardened, Kubernetes for production, from RaspberryPi to DC. https://microk8s.io/high-availability * Canonical Livepatch is available for installation. - Reduce system reboots and improve kernel security. Activate at: https://ubuntu.com/livepatch18 packages can be updated.0 of these updates are security updates.To see these additional updates run: apt list --upgradable*** System restart required ***Last login: Mon Mar 1 23:55:26 2021 from 1.247.71.18ubuntu@ip-172-31-47-167:~$ 윈도우에서 연결윈도우에서 putty 설치하는 방법 및 ec2 서버에 putty 를 통해서 접속하는 방법 입니다. https://www.chiark.greenend.org.uk/~sgtatham&#x2F;putty&#x2F;latest.html 설치파일을다운로드 받고 설치를 진행합니다. default 로 다음 다음 하셔서 설치를 완료해 주세요.. putty gen 을 실행 합니다. load 버튼을 클릭합니다. 모든 파일을 . 선택하고 goodsaem.pem 파일을 불러 옵니다. Save private key 버튼을 클릭합니다. goodsaem.ppk 파일로 적당한 위치에 저장합니다. putty 를 실행하고 위에서 ubuntu@ 뒤쪽에 있는 문자를 복사해서 호스트에 붙여 넣기 합니다. ec2-13-209-42-88.ap-northeast-2.compute.amazonaws.com ssh 메뉴 아래 Auth를 클릭합니다. Browse 버튼을 클릭하여 goodsaem.ppk 파일을 불러 옵니다. 파일을 불러 왔으면 Open 버튼을 클릭 합니다. login 부분에 ubuntu 라고 입력하고 엔터를 클릭하면 아래와 같이 서버에 접속이 정상 완료됩니다.","categories":[{"name":"설치","slug":"설치","permalink":"http://goodsaem.github.io/categories/%EC%84%A4%EC%B9%98/"},{"name":"PHP","slug":"설치/PHP","permalink":"http://goodsaem.github.io/categories/%EC%84%A4%EC%B9%98/PHP/"}],"tags":[{"name":"PHP","slug":"PHP","permalink":"http://goodsaem.github.io/tags/PHP/"},{"name":"AWS","slug":"AWS","permalink":"http://goodsaem.github.io/tags/AWS/"}]},{"title":"3/13 무료로 aws + php 서버 구축","slug":"setup/aws-php-3","date":"2023-03-25T05:40:00.000Z","updated":"2025-06-29T07:42:00.981Z","comments":true,"path":"setup/aws-php-3/","link":"","permalink":"http://goodsaem.github.io/setup/aws-php-3/","excerpt":"","text":"3.EC2 인스턴스 추가Free Tier 서버를 구축을 위해 가입하신 정보로 로그인한후 aws console 버튼을 클릭하신후 서비스 &gt; 모든 서비스 &gt; 컴퓨팅 &gt; EC2 서버를 선택합니다. EC2 좌측메뉴중 인스턴스를 클릭하고 다시 인스턴스 시작 버튼을 클릭합니다. 프리티어 사용 가능이라고 된 서버가 무료 서버입니다. Ubuntu Server 18.04 LTS(HVM) SSD Volumn type을 선택 합니다. 다음 : 인스턴스 세부정보 구성 버튼을 클릭합니다. 변경없이 다음 : 스토리지 추가를 클릭합니다. 스토리지 추가는 30G까지 무료 입니다. 30 이라고 입력하고 다음 : 태그 추가 버튼을 클릭합니다. 태그 추가 버튼을 클릭하여 키와 값에 식별할수 있는 이름을 입력합니다. 그리고 나서 다음 : 보안 그룹 구성 버튼을 클릭합니다. 새 보안 그룹 생성을 선택하고 검토 및 시작 버튼을 클릭합니다. 인스턴스 시작 검토 화면에서 선택한 내용들을 확인합니다. 그리고 나서 시작 하기 버튼을 클릭합니다. 이렇게 시작하고 나면 키페이 생성 화면이 팝업이 되는데 새 키 페어 생성을 선택하고 키페어 이름을 입력하고 키 페이 다운로드 버튼을 클릭하여 로컬 pc에 저장합니다.그리고 나서 인서턴스 시작 버튼을 클릭합니다. 여기까지 완료하셨으면 프리티어 서버가 정상 생성되었습니다.","categories":[{"name":"설치","slug":"설치","permalink":"http://goodsaem.github.io/categories/%EC%84%A4%EC%B9%98/"},{"name":"PHP","slug":"설치/PHP","permalink":"http://goodsaem.github.io/categories/%EC%84%A4%EC%B9%98/PHP/"}],"tags":[{"name":"PHP","slug":"PHP","permalink":"http://goodsaem.github.io/tags/PHP/"},{"name":"AWS","slug":"AWS","permalink":"http://goodsaem.github.io/tags/AWS/"}]},{"title":"2/13 무료로 aws + php 서버 구축","slug":"setup/aws-php-2","date":"2023-03-25T05:30:00.000Z","updated":"2025-06-29T07:42:00.981Z","comments":true,"path":"setup/aws-php-2/","link":"","permalink":"http://goodsaem.github.io/setup/aws-php-2/","excerpt":"","text":"2. aws 계정생성1년간 사용할 Aws 계정을 생성합니다. https://aws.amazon.com/ko/ 여기에 접속하여 우측상단의 AWS 계정생성 버튼을 클릭합니다. 이메일 주소 암호 계정 이름을 입력합니다. 연락처 정보는 개인,전체이름 및 전화번호 주소 우편 번호를 입력합니다. 주소는 비용이 발생할경우 청구하는 주소가 되므로 정확히 기재해 주시고영문으로 작성하셔야 됩니다. 영문주소 변환은 https://www.jusoen.com 여기에서 가능합니다. 신용카드 정보와 만료날짜 및 신용카드에 적혀있는 카드 소유자 이름을 정확하게 입력하시고 청구지 주소를 선택합니다. 휴대폰 전화를 입력하여 문자로 확인코드를 받습니다. 보안검사 부분의 보안문자를 보안문자 입력하는 칸에 정확히 입력합니다. 휴대폰으로 온 문자를 확인하고 코드확인 란에 숫자를 입력하여 다음단계로 진행합니다. 마지막 단계로 기본지원 - 무료를 선택한후 가입을 완료합니다.","categories":[{"name":"설치","slug":"설치","permalink":"http://goodsaem.github.io/categories/%EC%84%A4%EC%B9%98/"},{"name":"PHP","slug":"설치/PHP","permalink":"http://goodsaem.github.io/categories/%EC%84%A4%EC%B9%98/PHP/"}],"tags":[{"name":"PHP","slug":"PHP","permalink":"http://goodsaem.github.io/tags/PHP/"},{"name":"AWS","slug":"AWS","permalink":"http://goodsaem.github.io/tags/AWS/"}]},{"title":"1/13 무료로 aws + php 서버 구축","slug":"setup/aws-php-1","date":"2023-03-25T05:20:00.000Z","updated":"2025-06-29T07:42:00.978Z","comments":true,"path":"setup/aws-php-1/","link":"","permalink":"http://goodsaem.github.io/setup/aws-php-1/","excerpt":"","text":"1. 사전준비AWS 서버구축 내용과 동일하며 백엔드를 PHP를 사용하고 싶을때 참고하시면 됩니다. 1. 구축조건서버를 구축할때 아래의 조건에 맞게 구축되어야 된다는 원칙을 정하고 방법을 찾았습니다. 비용이 발생하면 안됩니다. 완벽하게 https 를 지원해 주어야 됩니다. php 도 실행가능하고 spring 도 지원가능해야 됩니다. 구축해야 되는 서버는 오로지 https://goodsaem.github.io 사이트에서 요청한 데이터만 응답해야 됩니다. db 도 사용할수 있어야 됩니다. 이런 조건을 맞추기 위해서는 aws 서버 구축이 정답이였습니다. 1년간 프리티어로 무료로 사용할수 있기에 회원가입을 하고 신용카드를등록하여 프리티어 서버를 구축했습니다. 2. 아키텍처 사용자가 브라우저를 통해서 https://goodsaem.github.io 를 접속합니다. 데이터를 저장하거나 데이터를 db 조회가 필요한경우 https://goodsaem.ml 로 rest api를 호출합니다. https://goodsaem.ml aws 프리티어 서버에 구축되어 있습니다. https://goodsaem.github.io 에서 오는 요청 및 localhost에서 실행한 요청에 대해서만 허용하고 나머지는 거부합니다. nginx 웹서버는 https://goodsaem.github.io 에서 호출한 요청에 대해서만 응답하고 나머지 요청은 전부 거부하도록 설정합니다. https://goodsaem.ml/php/ 아래의 하위 요청은 모두 php가 동작하도록 라우팅 하고https://goodsaem.ml/spring/ 으로 오는 요청은 spring boot가 응답하도록 설정합니다. db는 mariadb를 사용하며 php spring에서 데이터 crud가 필요한 경우 동작하도록 설계합니다. 우선 서버 셋업이 완료되고 나서 ssl 수준이 얼마나 되는지 체크하는 사이트https://www.ssllabs.com/ssltest/analyze.html에 점검한 결과 입니다.자세한 내용은 모르겠지만 A+ , A를 받았으니 잘 설정한것 같네요 ^^ https://goodsaem.github.io https://goodsaem.ml","categories":[{"name":"설치","slug":"설치","permalink":"http://goodsaem.github.io/categories/%EC%84%A4%EC%B9%98/"},{"name":"PHP","slug":"설치/PHP","permalink":"http://goodsaem.github.io/categories/%EC%84%A4%EC%B9%98/PHP/"}],"tags":[{"name":"PHP","slug":"PHP","permalink":"http://goodsaem.github.io/tags/PHP/"},{"name":"AWS","slug":"AWS","permalink":"http://goodsaem.github.io/tags/AWS/"}]},{"title":"8/8 mac+php+mariadb+nginx+ssl 설정","slug":"setup/mac-php-8","date":"2023-03-25T03:25:00.000Z","updated":"2025-06-29T07:42:01.120Z","comments":true,"path":"setup/mac-php-8/","link":"","permalink":"http://goodsaem.github.io/setup/mac-php-8/","excerpt":"","text":"8. ssl 테스트Vue 로 간단하게 title 과 status , priority 를 입력 받아 저장하고 조회하는 화면을 만들어 보았습니다. 1. 타스크 생성 및 조회2. source123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103&lt;template&gt; &lt;div&gt; &lt;ul&gt; &lt;li&gt; &lt;el-input placeholder=&quot;please input title&quot; v-model=&quot;model.title&quot;&gt;&lt;/el-input&gt; &lt;/li&gt; &lt;li&gt; &lt;el-input placeholder=&quot;please input status&quot; v-model=&quot;model.status&quot;&gt;&lt;/el-input&gt; &lt;/li&gt; &lt;li&gt; &lt;el-input placeholder=&quot;please input priority&quot; v-model=&quot;model.priority&quot;&gt;&lt;/el-input&gt; &lt;/li&gt; &lt;li&gt; &lt;el-input placeholder=&quot;please input description&quot; v-model=&quot;model.description&quot;&gt;&lt;/el-input&gt; &lt;/li&gt; &lt;li&gt; &lt;el-button type=&quot;primary&quot; @click=&quot;create&quot;&gt;db에 값 저장 하기&lt;/el-button&gt; &lt;el-button type=&quot;primary&quot; @click=&quot;search&quot;&gt;db에 값 조회 하기&lt;/el-button&gt; &lt;/li&gt; &lt;/ul&gt; &lt;el-table :data=&quot;tasks&quot; border style=&quot;width: 100%&quot;&gt; &lt;el-table-column prop=&quot;task_id&quot; label=&quot;Task ID&quot; width=&quot;180&quot;&gt; &lt;/el-table-column&gt; &lt;el-table-column prop=&quot;title&quot; label=&quot;Title&quot; width=&quot;180&quot;&gt; &lt;/el-table-column&gt; &lt;el-table-column prop=&quot;start_date&quot; label=&quot;Start Date&quot;&gt; &lt;/el-table-column&gt; &lt;el-table-column prop=&quot;due_date&quot; label=&quot;Due Date&quot;&gt; &lt;/el-table-column&gt; &lt;el-table-column prop=&quot;status&quot; label=&quot;Status&quot;&gt; &lt;/el-table-column&gt; &lt;el-table-column prop=&quot;priority&quot; label=&quot;Priority&quot;&gt; &lt;/el-table-column&gt; &lt;el-table-column prop=&quot;description&quot; label=&quot;Description&quot;&gt; &lt;/el-table-column&gt; &lt;el-table-column prop=&quot;created_at&quot; label=&quot;Create Date&quot;&gt; &lt;/el-table-column&gt; &lt;/el-table&gt; &lt;/div&gt;&lt;/template&gt;&lt;script&gt;export default &#123; name: &quot;GetJson&quot;, created() &#123; &#125;, data() &#123; return &#123; model : &#123; title : &#x27;제목&#x27;, status : &#x27;1&#x27;, priority : &#x27;1&#x27;, description: &#x27;내용&#x27;, &#125;, tasks : [], &#125; &#125;, methods: &#123; create() &#123; if(this.model.title != &#x27;&#x27; &amp;&amp; this.model.status != &#x27;&#x27; &amp;&amp; this.model.priority != &#x27;&#x27; &amp;&amp; this.model.description != &#x27;&#x27;) &#123; this.$http.post(&#x27;https://goodsaem.ml/tasks&#x27;,[this.model]).then((response) =&gt; &#123; this.$message(&#x27;정상적으로 저장되었습니다.&#x27;); &#125;).catch((err) =&gt;&#123; this.$message(err); &#125;); &#125; &#125;, search() &#123; this.$http.get(&#x27;https://goodsaem.ml/tasks&#x27;).then((response) =&gt; &#123; this.tasks = response.data; &#125;) &#125; &#125;&#125;&lt;/script&gt;&lt;style scoped&gt;&lt;/style&gt; 3. 로컬환경 테스트local에서 테스트 하면 아래와 같이 cors 오류가 발생합니다. https://goodsaem.github.io에서 테스트 하면 정상 동작 합니다. cors 설정도 정상적으로 이루어 졌네요.nginx 에는 cors 설정을 하지 않았고 php쪽에만 cors 설정을 했습니다. 아래 코드를 참고하세요php slime frame work요&#x2F;php&#x2F;restfull&#x2F;setup.html 사용하는 부분도 참고하세요 4. php source123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475&lt;?phpdeclare(strict_types=1);use App\\Application\\Actions\\User\\ListUsersAction;use App\\Application\\Actions\\User\\ViewUserAction;use Psr\\Http\\Message\\ResponseInterface as Response;use Psr\\Http\\Message\\ServerRequestInterface as Request;use Slim\\App;use Slim\\Interfaces\\RouteCollectorProxyInterface as Group;return function (App $app) &#123; $app-&gt;add(new Tuupola\\Middleware\\CorsMiddleware([ &quot;origin&quot; =&gt; [&quot;https://goodsaem.github.io&quot;,&quot;goodsaem.ml&quot;,&quot;goodsaem.ml&quot;,&quot;localhost&quot;], &quot;methods&quot; =&gt; [&quot;GET&quot;, &quot;POST&quot;, &quot;PUT&quot;, &quot;PATCH&quot;, &quot;DELETE&quot;,&quot;OPTIONS&quot;], &quot;headers.allow&quot; =&gt; [], &quot;headers.expose&quot; =&gt; [], &quot;credentials&quot; =&gt; true, &quot;cache&quot; =&gt; 0, ])); $app-&gt;get(&#x27;/&#x27;, function (Request $request, Response $response) &#123; $response-&gt;getBody()-&gt;write(&#x27;Hello world!&#x27;); return $response; &#125;); $app-&gt;group(&#x27;/users&#x27;, function (Group $group) &#123; $group-&gt;get(&#x27;&#x27;, ListUsersAction::class); $group-&gt;get(&#x27;/&#123;id&#125;&#x27;, ViewUserAction::class); &#125;); $app-&gt;get(&#x27;/api/customers&#x27; , function(Request $request , Response $response)&#123; $response-&gt;getBody()-&gt;write(&#x27;CUSTOMERS!&#x27;); return $response; &#125;); $app-&gt;get(&#x27;/tasks&#x27;, function (Request $request, Response $response) &#123; $db = $this-&gt;get(PDO::class); $sth = $db-&gt;prepare(&quot;SELECT * FROM tasks ORDER BY task_id&quot;); $sth-&gt;execute(); $data = $sth-&gt;fetchAll(PDO::FETCH_ASSOC); $payload = json_encode($data); $response-&gt;getBody()-&gt;write($payload); return $response-&gt;withHeader(&#x27;Content-Type&#x27;, &#x27;application/json&#x27;); &#125;); $app-&gt;post(&#x27;/tasks&#x27;, function (Request $request, Response $response) &#123; $db = $this-&gt;get(PDO::class); $contents = json_decode(file_get_contents(&#x27;php://input&#x27;), true); foreach ($contents as $item) &#123; $sth = $db-&gt;prepare(&quot; INSERT INTO `tasks` ( `title`, `start_date`, `due_date`, `status`, `priority`, `description`, `created_at` ) VALUES ( :title, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, :status, :priority, :description, CURRENT_TIMESTAMP )&quot;); $sth-&gt;bindParam(&#x27;:title&#x27;, $item[&#x27;title&#x27;]); $sth-&gt;bindParam(&#x27;:status&#x27;, $item[&#x27;status&#x27;]); $sth-&gt;bindParam(&#x27;:priority&#x27;, $item[&#x27;priority&#x27;]); $sth-&gt;bindParam(&#x27;:description&#x27;, $item[&#x27;description&#x27;]); $sth-&gt;execute(); &#125; $response-&gt;getBody()-&gt;write( json_encode($contents)); return $response-&gt;withHeader(&#x27;Content-Type&#x27;, &#x27;application/json&#x27;); &#125;);&#125;; 마무리리눅스 서버에 ssl 서버를 구축하는 방법에 대해서 알아보았습니다. 긴글 읽어주셔서 감사합니다.","categories":[{"name":"설치","slug":"설치","permalink":"http://goodsaem.github.io/categories/%EC%84%A4%EC%B9%98/"},{"name":"PHP","slug":"설치/PHP","permalink":"http://goodsaem.github.io/categories/%EC%84%A4%EC%B9%98/PHP/"}],"tags":[{"name":"PHP","slug":"PHP","permalink":"http://goodsaem.github.io/tags/PHP/"},{"name":"MAC","slug":"MAC","permalink":"http://goodsaem.github.io/tags/MAC/"}]},{"title":"7/8 mac+php+mariadb+nginx+ssl 설정","slug":"setup/mac-php-7","date":"2023-03-25T03:15:00.000Z","updated":"2025-06-29T07:42:01.109Z","comments":true,"path":"setup/mac-php-7/","link":"","permalink":"http://goodsaem.github.io/setup/mac-php-7/","excerpt":"","text":"7. 무료 도메인 발급요즘 대부분의 웹서버는 https 통신을 합니다. 이제는 선택이 아닌 필수 인것 같네요 제가 서버를 구축하게 된 직접적인 원인도 https설정을 하기 위함입니다. nginx 에 https 서비스를 구성하기 위해서는 도메인이 필요합니다. 도메인이 준비되면 certbot을 통해서무료 ssl 인증서 적용 및 http&#x2F;2 적용이 가능한데요 무료 도메인 가입부터 nginx 에 셋팅하는 부분까지 진행해 보겠습니다. 1. 무료 도메인https://www.freenom.com/en/index.html?lang=en freenom 이란사이트에서 무료 도메인을 발급 받을수 있습니다. 회원가입을 후 도메인 등록을 진행합니다. 로그인 후 원하는 도메인을 입력하고 엔터키를 클릭한후 사용하고자 하는 도메인에서 Get it now! 버튼을 클릭하여 선택합니다. 그리고 나서 Checkout 버튼을 클릭합니다. Use DNS 버튼을 클릭하고 Use Freenom DNS Service를 선택한후 aws free tier의 퍼블릭 ipv4 주소를 입력하고 Continue 버튼을 클릭합니다. 도메인 주문이 완료되었습니다. My Domain 에서 주문한 도메인 확인이 가능합니다. ::: tip goodsaem.ml 무료 도메인을 2개 신청했는데 2번째꺼는 어떤이유인지 mydomain에 추가 되지 않아 goodsaem.ml로 셋팅 진행하겠습니다. ::: 2. Diffie-Hellman 키생성https 인증서를 받기 위해서는 키가 필요합니다. 이 키 생성은 디피와 헬만이 1976년도에 발표한 비밀키 교환 방식의 알고리즘을이용하여 생성합니다.이 알고리즘을 이용하여 4096 bit의 키를 생성하겠습니다. 아래 명령어로 키를 생성하는데 대략 10분정도 소요 되었습니다.이키를 이용해서 https에서 비밀키를 교환하여 안정한 https 통신을 할수 있으므로 반드시 진행해야 되는 사항입니다. 1goodsaem@goodsaem:~$ sudo openssl dhparam -out /etc/nginx/conf.d/ssl-dhparams.pem 4096 123enerating DH parameters, 4096 bit long safe prime, generator 2This is going to take a long time............................................................... 3. 무료인증Let’s Encrypt 는 사용자에게 무료로 SSL&#x2F;TLS 인증서를 발급해 주는 기관 입니다. 한번 발급 받으면 90일간 사용이 가능하며만료 30일전에 메일로 내용을 통보하면 그때 다시 갱신이 가능합니다. 인증서 발급은 certbot certbot-auto 를 이용하여발급 및 갱신합니다. certbot 등록을 위해 repository 등록을 진행합니다. 12345goodsaem@goodsaem:~$ sudo apt-get updategoodsaem@goodsaem:~$ sudo apt-get install software-properties-commongoodsaem@goodsaem:~$ sudo add-apt-repository universegoodsaem@goodsaem:~$ sudo add-apt-repository ppa:certbot/certbotgoodsaem@goodsaem:~$ sudo apt-get update certbot을 설치합니다. 1goodsaem@goodsaem:~$ sudo apt-get install certbot certbot nginx 플러그인을 설치 합니다. 1goodsaem@goodsaem:~$ sudo apt-get install python-certbot-nginx nginx에 서버 이름을 변경하기 위해 아래와 같이 입력합니다. 1goodsaem@goodsaem:~$ sudo vi /etc/nginx/conf.d/default.conf 서버 네임을 freenom에서 발급받은 도메인으로 지정해 줍니다. 3번라인12345678910111213141516171819202122232425262728293031323334353637383940server &#123; listen 80; server_name goodsaem.ml; charset utf-8; access_log /var/log/nginx/localhost.access.log main; error_log /var/log/nginx/localhost.error.log; root /usr/share/nginx/html; location / &#123; try_files $uri $uri/ /index.php?$args; &#125; error_page 405 =200 $uri; error_page 500 502 503 504 /50x.html; location = /50x.html &#123; root /usr/share/nginx/html; &#125; location ~ \\.php$ &#123; proxy_pass http://127.0.0.1; fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name; include fastcgi_params; fastcgi_pass 127.0.0.1:9000; proxy_redirect off; fastcgi_intercept_errors on; fastcgi_read_timeout 300; fastcgi_send_timeout 300; &#125; location ~ /\\.ht &#123; deny all; &#125; location = /xmlrpc.php &#123; deny all; error_page 403 = /403.html; &#125;&#125; 이제 아래 certbot 명령어를 통해서 ssl 인증서를 발급받습니다. 인증서 발급시사용할 admin email 주소와 이용약관 동의 옵션을 지정하여 인증서 발급을 받겠습니다. 1goodsaem@goodsaem:~$ sudo certbot --nginx --email goodsaem@protonmail.com --agree-tos 위에 명령어를 입력하면 아래와 같은 형태로 진행되는데요 중요한 부분만 설명하겠습니다. 6 라인에 추가할 https 도메인이 보입니다. 9 라인에서 엔터를 입력합니다. 24 라인에서 2을 입력합니다. (http로 요청이 들어오면 https 로 redirect 하겠다는 의미 입니다.) 6,9,24 라인123456789101112131415161718192021222324252627282930313233343536373839404142434445Saving debug log to /var/log/letsencrypt/letsencrypt.logPlugins selected: Authenticator nginx, Installer nginxWhich names would you like to activate HTTPS for?- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -1: goodsaem.ml- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -Select the appropriate numbers separated by commas and/or spaces, or leave inputblank to select all options shown (Enter &#x27;c&#x27; to cancel):Obtaining a new certificatePerforming the following challenges:http-01 challenge for goodsaem.mlWaiting for verification...Cleaning up challengesDeploying Certificate to VirtualHost /etc/nginx/conf.d/default.confPlease choose whether or not to redirect HTTP traffic to HTTPS, removing HTTP access.- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -1: No redirect - Make no further changes to the webserver configuration.2: Redirect - Make all requests redirect to secure HTTPS access. Choose this fornew sites, or if you&#x27;re confident your site works on HTTPS. You can undo thischange by editing your web server&#x27;s configuration.- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -Select the appropriate number [1-2] then [enter] (press &#x27;c&#x27; to cancel): 1- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -Congratulations! You have successfully enabled https://goodsaem.mlYou should test your configuration at:https://www.ssllabs.com/ssltest/analyze.html?d=goodsaem.ml- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -IMPORTANT NOTES: - Congratulations! Your certificate and chain have been saved at: /etc/letsencrypt/live/goodsaem.ml/fullchain.pem Your key file has been saved at: /etc/letsencrypt/live/goodsaem.ml/privkey.pem Your cert will expire on 2021-06-23. To obtain a new or tweaked version of this certificate in the future, simply run certbot again with the &quot;certonly&quot; option. To non-interactively renew *all* of your certificates, run &quot;certbot renew&quot; - If you like Certbot, please consider supporting our work by: Donating to ISRG / Let&#x27;s Encrypt: https://letsencrypt.org/donate Donating to EFF: https://eff.org/donate-le 제되로 인증서 발급이 되었는지 확인해 보겠습니다.domain에 보시면 goodsaem.ml 도메인이 등록되어 있습니다. 또한 8,9 라인에fullchain.pem 키와 privkey.pem 파일이 정상 생성되었음을 확인할수 있습니다. 6,8,9 라인12345678910Saving debug log to /var/log/letsencrypt/letsencrypt.log- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -Found the following certs: Certificate Name: goodsaem.ml Domains: goodsaem.ml Expiry Date: 2021-06-23 13:15:17+00:00 (VALID: 89 days) Certificate Path: /etc/letsencrypt/live/goodsaem.ml/fullchain.pem Private Key Path: /etc/letsencrypt/live/goodsaem.ml/privkey.pem- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - nginx에 ssl 관련 설정이 등록되었는지 default.conf 내용을 확인해 보겠습니다.40번라인부터 57번 라인까지 ssl 관련 설정이 자동으로 추가되었습니다. 40-57 라인123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960server &#123; server_name goodsaem.ml; charset utf-8; access_log /var/log/nginx/localhost.access.log main; error_log /var/log/nginx/localhost.error.log; root /usr/share/nginx/html; location / &#123; try_files $uri $uri/ /index.php?$args; &#125; error_page 405 =200 $uri; error_page 500 502 503 504 /50x.html; location = /50x.html &#123; root /usr/share/nginx/html; &#125; location ~ \\.php$ &#123; proxy_pass http://127.0.0.1; fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name; include fastcgi_params; fastcgi_pass 127.0.0.1:9000; proxy_redirect off; fastcgi_intercept_errors on; fastcgi_read_timeout 300; fastcgi_send_timeout 300; &#125; location ~ /\\.ht &#123; deny all; &#125; location = /xmlrpc.php &#123; deny all; error_page 403 = /403.html; &#125; listen 443 ssl; # managed by Certbot ssl_certificate /etc/letsencrypt/live/goodsaem.ml/fullchain.pem; # managed by Certbot ssl_certificate_key /etc/letsencrypt/live/goodsaem.ml/privkey.pem; # managed by Certbot include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot&#125;server &#123; if ($host = goodsaem.ml) &#123; return 301 https://$host$request_uri; &#125; # managed by Certbot listen 80; server_name goodsaem.ml; return 404; # managed by Certbot&#125; letsencrypt 에 있는 Diffie-Hellman Key 를 아래와 같은 이름으로 백업합니다. 12goodsaem@goodsaem:~$ cd /etc/letsencrypt/goodsaem@goodsaem:~$ sudo mv ssl-dhparams.pem ssl-dhparams.pem.backup 생성한 키 파일을 &#x2F;etc&#x2F;letsencrypt 로 복사합니다. 1goodsaem@goodsaem:~$ sudo cp -rp /etc/nginx/conf.d/ssl-dhparams.pem /etc/letsencrypt/ nginx 를 재시작 합니다. 1goodsaem@goodsaem:~$ sudo systemctl restart nginx 4. SSL 점검SSL이 제되로 생성되었는지 https://www.ssllabs.com/ssltest/analyze.html 사이트에 접속하여아래와 같이 도메인을 입력하고 점검을 수행합니다. A 라고 연두색으로 나오는것 보니 제되로 설정이 된것 같습니다. 이제 실제로 https 로 접속을 시도해 보겠습니다. https://goodsaem.ml/info.php https 프로토콜을 이용하여설정한 도메인으로 접속하니 아래 그림과 같이 정상적으로 화면이 나왔습니다. 보안 오류 같은거 없이 ^^ 대 성공입니다. 자물쇠 모양을 더블클릭하세요 아래와 같이 보안 연결이 사용되었다는 내용이 확인되며 인증서도 유효 하다고 하네요.","categories":[{"name":"설치","slug":"설치","permalink":"http://goodsaem.github.io/categories/%EC%84%A4%EC%B9%98/"},{"name":"PHP","slug":"설치/PHP","permalink":"http://goodsaem.github.io/categories/%EC%84%A4%EC%B9%98/PHP/"}],"tags":[{"name":"PHP","slug":"PHP","permalink":"http://goodsaem.github.io/tags/PHP/"},{"name":"MAC","slug":"MAC","permalink":"http://goodsaem.github.io/tags/MAC/"}]},{"title":"6/8 mac+php+mariadb+nginx+ssl 설정","slug":"setup/mac-php-6","date":"2023-03-25T03:05:00.000Z","updated":"2025-06-29T07:42:01.103Z","comments":true,"path":"setup/mac-php-6/","link":"","permalink":"http://goodsaem.github.io/setup/mac-php-6/","excerpt":"","text":"6. Nginx 설정php 와 nginx 상세설정 내용입니다. 1. nginx.conf 변경아래 명령어로 nginx 의 전반적인 설정(로그나 worker 수등)을 진행합니다. 1sudo vi /etc/nginx/nginx.conf 전체 설정한 내용은 아래와 같습니다. 1,2,3,5,9,17-19,22,24,25,26,31,49 라인 수정1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253user nginx;worker_processes 4;worker_rlimit_nofile 30000;error_log /var/log/nginx/error.log notice;pid /var/run/nginx.pid;events &#123; worker_connections 1024;&#125;http &#123; include /etc/nginx/mime.types; default_type application/octet-stream; log_format main &#x27;$remote_addr - $remote_user [$time_local] &quot;$request&quot; &#x27; &#x27;$status $body_bytes_sent &quot;$http_referer&quot; &#x27; &#x27;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;&#x27;; log_not_found off; index index.php index.htm index.html; gzip on; gzip_disable &quot;msie6&quot;; gzip_comp_level 6; gzip_min_length 500; gzip_buffers 16 8k; gzip_proxied any; gzip_vary on; gzip_types text/plain text/css text/js text/xml text/javascript application/javascript application/x-javascript application/json application/xml application/rss+xml image/svg+xml image/png; keepalive_timeout 65; sendfile on; tcp_nopush on; tcp_nodelay on; aio on; sendfile_max_chunk 512k; directio 4m; server_tokens off; client_max_body_size 50M; proxy_buffer_size 128k; proxy_buffers 4 256k; proxy_busy_buffers_size 256k; fastcgi_buffer_size 128k; fastcgi_buffers 256 16k; http2_max_concurrent_streams 512; access_log /var/log/nginx/access.log main; error_log /var/log/nginx/error.log notice; include /etc/nginx/conf.d/*.conf;&#125; 주요한 부분에 대해서 라인번호 별로 설명을 진행하겠습니다. 1 : nginx 에서 사용할 os 유저 입니다. nginx 로 지정해 줍니다. 2 : 접속을 받고 처리하는 worker process 수를 뜻하며 해당 프로세스 만큼 프로세스가 생성됩니다. 3 : work process가 사용할수 있는 최대 파일수 입니다. 5 : nginx 기동시 로그를 받을수 있도록 notice 로 설정합니다. 9 : worker_connections 은 워커당 접속수를 나타내며 위에서 프로세스를 4개로 지정했으므로 최대 4096개의 접속이 가능합니다. 17-19 : 로그 포멧을 지정합니다. 22 : 디렉토리 인덱스 파일에 php를 추가합니다. 24 : gzip을 사용하겠다는 의미 입니다. 25 : gzip을 지원하지 않는 ie6 에서는 동작하지 않겠다는 의미 입니다. 26 : 압축의 정도를 나타내는 수치로 이 수치가 높으면 cpu 사용율이 높아집니다. cpu 사용율을 보면서 적절히 조정합니다. 31 : gzip을 수행할 파일종류를 지정합니다. 49 : 19라인에서 지정한 main 포멧되로 로그를 남깁니다. access_log &#x2F;var&#x2F;log&#x2F;nginx&#x2F;access.log main;::: tip gzipgzip on 이 설정되어 있으면 웹서버가 응답할때 gzip으로 압축해서 내용을 전달하고 http 헤더 쪽에 압축된 gzip 파일이라는 정보를 같이전달합니다. 그럼 웹브라우저는 이 내용이 압축이 되었다고 판단하고 자동으로 압축을 풀어서 화면을 랜더링 합니다. 이렇게 압축된 gzip파일을받으면 시스템 속도가 빠르다는 장점이 있습니다. 하지만 너무 과도하게 사용하면 cpu 사용율 상승문제가 발생할수 있습니다. 그래서 프로그래밍으로 js 나 json 파일을 압축시켜 놓고 특정 디렉토리의 js나 json은 압축된 파일이라는 헤더정보를 전달해서웹서버가 cpu를 과도하게 사용하지 않도록 설정합니다.::: 2. default.conf서버 설정파일을 수정하겠습니다. 먼저 수정하기 전에 아래 명령어를 실행하여 설정파일을 백업해 둡니다. 1goodsaem@goodsaem:~$ sudo cp -rp /etc/nginx/conf.d/default.conf /etc/nginx/conf.d/default.conf.bak 설정 파일을 수정합니다. 1goodsaem@goodsaem:~$ sudo vi /etc/nginx/conf.d/default.conf 아래 강조된 부분을 추가 또는 수정했습니다. 2,4-7,13,15,19-2912345678910111213141516171819202122232425262728293031323334353637383940server &#123; listen 80; server_name localhost; charset utf-8; access_log /var/log/nginx/localhost.access.log main; error_log /var/log/nginx/localhost.error.log; root /usr/share/nginx/html; location / &#123; try_files $uri $uri/ /index.php?$args; &#125; error_page 405 =200 $uri; error_page 500 502 503 504 /50x.html; location = /50x.html &#123; root /usr/share/nginx/html; &#125; location ~ \\.php$ &#123; proxy_pass http://127.0.0.1; fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name; include fastcgi_params; fastcgi_pass 127.0.0.1:9000; proxy_redirect off; fastcgi_intercept_errors on; fastcgi_read_timeout 300; fastcgi_send_timeout 300; &#125; location ~ /\\.ht &#123; deny all; &#125; location = /xmlrpc.php &#123; deny all; error_page 403 = /403.html; &#125;&#125; 2 : 리스턴 포트를 지정합니다. 4 : 서버이름 및 인코딩을 설정합니다. 5-6 : 로그 파일 정보 입니다. 7 : root 디렉토리를 지정합니다. 10 : try_files 를 설정합니다. 13 : error_page 405 &#x3D;200 $uri; 이설정이 없으면 nginx 에서 php rest api post 호출시 오류가 발생합니다. post 방식으로 요청이 올때 오류가발생하지 않게 하기 위해 추가한 설정입니다. 관련내용은 https://stackoverflow.com/questions/51613180/nginx-post-method-does-not-work참고 하시기 바랍니다. 15 : 50x 오류 발생시 사용하 페이지를 지정합니다. 19~29 : nginx 에서 php-fpm 이 동작하기 위해서 아래와 같이 수정하셔야 됩니다. fastcgi_pass 127.0.0.1:9000; 이부분은 소켓을 사용하지 않고 cgi 형태로 실행하겠다는 의미 입니다.php 설정시에 추가한 listen과 동일한값 127.0.0.1:9000 로 설정해 줍니다. php가 정상동작하는지 확인하기 위한 코드를 작성하겠습니다. 1goodsaem@goodsaem:~$ sudo vi /usr/share/nginx/html/phpinfo.php 3. 테스트아래와 php 코드를 작성합니다. 123&lt;?phpphpinfo();?&gt; nginx가 실행할수 있도록 소유권을 변경합니다. 1goodsaem@goodsaem:~$ sudo chown nginx:nginx /usr/share/nginx/html/phpinfo.php 여기까지 설정했다면 nginx와 php-fprm을 재시작 합니다. 12goodsaem@goodsaem:~$ sudo systemctl restart php7.4-fpmgoodsaem@goodsaem:~$ sudo systemctl restart nginx 웹브라우저에서 http://localhost/phpinfo.php 입력하고 아래와 같이 php info 페이지가 출력되면정상입니다.","categories":[{"name":"설치","slug":"설치","permalink":"http://goodsaem.github.io/categories/%EC%84%A4%EC%B9%98/"},{"name":"PHP","slug":"설치/PHP","permalink":"http://goodsaem.github.io/categories/%EC%84%A4%EC%B9%98/PHP/"}],"tags":[{"name":"PHP","slug":"PHP","permalink":"http://goodsaem.github.io/tags/PHP/"},{"name":"MAC","slug":"MAC","permalink":"http://goodsaem.github.io/tags/MAC/"}]},{"title":"5/8 mac+php+mariadb+nginx+ssl 설정","slug":"setup/mac-php-5","date":"2023-03-25T02:55:00.000Z","updated":"2025-06-29T07:42:01.094Z","comments":true,"path":"setup/mac-php-5/","link":"","permalink":"http://goodsaem.github.io/setup/mac-php-5/","excerpt":"","text":"5. PHP 7.4 설치 및 설정1. repository 추가최신 버전의 php를 설치하기 위해 저장소를 등록합니다. 1goodsaem@goodsaem:~$ sudo apt -y install software-properties-common 아래 명령어를 입력하고 중간에 엔터를 입력하는 부분에서 엔터를 입력합니다. 1234567891011121314151617181920212223242526272829303132333435363738 sudo add-apt-repository ppa:ondrej/phpCo-installable PHP versions: PHP 5.6, PHP 7.x and most requested extensions are included. Only Supported Versions of PHP (http://php.net/supported-versions.php) for Supported Ubuntu Releases (https://wiki.ubuntu.com/Releases) are provided. Don&#x27;t ask for end-of-life PHP versions or Ubuntu release, they won&#x27;t be provided.Debian oldstable and stable packages are provided as well: https://deb.sury.org/#debian-dpaYou can get more information about the packages at https://deb.sury.orgIMPORTANT: The &lt;foo&gt;-backports is now required on older Ubuntu releases.BUGS&amp;FEATURES: This PPA now has a issue tracker:https://deb.sury.org/#bug-reportingCAVEATS:1. If you are using php-gearman, you need to add ppa:ondrej/pkg-gearman2. If you are using apache2, you are advised to add ppa:ondrej/apache23. If you are using nginx, you are advised to add ppa:ondrej/nginx-mainline or ppa:ondrej/nginxPLEASE READ: If you like my work and want to give me a little motivation, please consider donating regularly: https://donate.sury.org/WARNING: add-apt-repository is broken with non-UTF-8 locales, seehttps://github.com/oerdnj/deb.sury.org/issues/56 for workaround:# LC_ALL=C.UTF-8 add-apt-repository ppa:ondrej/phpMore info: https://launchpad.net/~ondrej/+archive/ubuntu/phpPress [ENTER] to continue or Ctrl-c to cancel adding it.Hit:1 http://ap-northeast-2.ec2.archive.ubuntu.com/ubuntu bionic InReleaseGet:2 http://ap-northeast-2.ec2.archive.ubuntu.com/ubuntu bionic-updates InRelease [88.7 kB] Get:3 http://ap-northeast-2.ec2.archive.ubuntu.com/ubuntu bionic-backports InRelease [74.6 kB] Hit:4 https://mirror.yongbok.net/mariadb/repo/10.5/ubuntu bionic InRelease Get:5 http://ap-northeast-2.ec2.archive.ubuntu.com/ubuntu bionic-updates/main amd64 Packages [1912 kB] Hit:6 http://ppa.launchpad.net/certbot/certbot/ubuntu bionic InRelease Get:7 http://security.ubuntu.com/ubuntu bionic-security InRelease [88.7 kB] Hit:8 http://nginx.org/packages/mainline/ubuntu bionic InRelease Hit:9 http://ppa.launchpad.net/ondrej/php/ubuntu bionic InRelease Fetched 2164 kB in 1s (1891 kB/s) Reading package lists... Done 2. php 7.4 설치php 7.4 버전을 설치합니다. 123456goodsaem@goodsaem:~$ sudo apt install php7.4 php7.4-cli php7.4-fpm \\php7.4-bcmath php7.4-bz2 php7.4-common php7.4-curl \\php7.4-dba php7.4-gd php7.4-json php7.4-mbstring php7.4-opcache \\php7.4-readline php7.4-soap php7.4-xml php7.4-xmlrpc php7.4-zip \\php7.4-ctype php7.4-pdo php7.4-redis php7.4-mysql php7.4-imagick \\php7.4-intl php7.4-mysqlnd php7.4-gmp php7.4-geoip php7.4-dev -y 설치후 php 버전을 확인합니다. 정상 설치되었네요 123456goodsaem@goodsaem:~$ php -vPHP 7.4.16 (cli) (built: Mar 5 2021 07:54:20) ( NTS )Copyright (c) The PHP GroupZend Engine v3.4.0, Copyright (c) Zend Technologies with Zend OPcache v7.4.16, Copyright (c), by Zend Technologies 3. php 설정php 기본설정을 진행합니다. 1goodsaem@goodsaem:~$ sudo vi /etc/php/7.4/fpm/php.ini 아래 부분을 찾아서 하나씩 변경합니다. 업로드 최대 크기와 최대 파일 사이즈 메모리 제한은 구축하고자 하는 어플리케이션 환경에 맞게 설정 바랍니다. 123date.timezone = Asia/Seoulpost_max_size = 30Mupload_max_filesize = 30M php.ini 전체파일123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203204205206207208209210211212213214215216217218219220221222223224225226227228229230231232233234235236237238239240241242243244245246247248249250251252253254255256257258259260261262263264265266267268269270271272273274275276277278279280281282283284285286287288289290291292293294295296297298299300301302303304305306307308309310311312313314315316317318319320321322323324325326327328329330331332333334335336337338339340341342343344345346347348349350351352353354355356357358359360361362363364365366367368369370371372373374375376377378379380381382383384385386387388389390391392393394395396397398399400401402403404405406407408409410411412413414415416417418419420421422423424425426427428429430431432433434435436437438439440441442443444445446447448449450451452453454455456457458459460461462463464465466467468469470471472473474475476477478479480481482483484485486487488489490491492493494495496497498499500501502503504505506507508509510511512513514515516517518519520521522523524525526527528529530531532533534535536537538539540541542543544545546547548549550551552553554555556557558559560561562563564565566567568569570571572573574575576577578579580581582583584585586587588589590591592593594595596597598599600601602603604605606607608609610611612613614615616617618619620621622623624625626627628629630631632633634635636637638639640641642643644645646647648649650651652653654655656657658659660661662663664665666667668669670671672673674675676677678679680681682683684685686687688689690691692693694695696697698699700701702703704705706707708709710711712713714715716717718719720721722723724725726727728729730731732733734735736737738739740741742743744745746747748749750751752753754755756757758759760761762763764765766767768769770771772773774775776777778779780781782783784785786787788789790791792793794795796797798799800801802803804805806807808809810811812813814815816817818819820821822823824825826827828829830831832833834835836837838839840841842843844845846847848849850851852853854855856857858859860861862863864865866867868869870871872873874875876877878879880881882883884885886887888889890891892893894895896897898899900901902903904905906907908909910911912913914915916917918919920921922923924925926927928929930931932933934935936937938939940941942943944945946947948949950951952953954955956957958959960961962963964965966967968969970971972973974975976977978979980981982983984985986987988989990991992993994995996997998999100010011002100310041005100610071008100910101011101210131014101510161017101810191020102110221023102410251026102710281029103010311032103310341035103610371038103910401041104210431044104510461047104810491050105110521053105410551056105710581059106010611062106310641065106610671068106910701071107210731074107510761077107810791080108110821083108410851086108710881089109010911092109310941095109610971098109911001101110211031104110511061107110811091110111111121113111411151116111711181119112011211122112311241125112611271128112911301131113211331134113511361137113811391140114111421143114411451146114711481149115011511152115311541155115611571158115911601161116211631164116511661167116811691170117111721173117411751176117711781179118011811182118311841185118611871188118911901191119211931194119511961197119811991200120112021203120412051206120712081209121012111212121312141215121612171218121912201221122212231224122512261227122812291230123112321233123412351236123712381239124012411242124312441245124612471248124912501251125212531254125512561257125812591260126112621263126412651266126712681269127012711272127312741275127612771278127912801281128212831284128512861287128812891290129112921293129412951296129712981299130013011302130313041305130613071308130913101311131213131314131513161317131813191320132113221323132413251326132713281329133013311332133313341335133613371338133913401341134213431344134513461347134813491350135113521353135413551356135713581359136013611362136313641365136613671368136913701371137213731374137513761377137813791380138113821383138413851386138713881389139013911392139313941395139613971398139914001401140214031404140514061407140814091410141114121413141414151416141714181419142014211422142314241425142614271428142914301431143214331434143514361437143814391440144114421443144414451446144714481449145014511452145314541455145614571458145914601461146214631464146514661467146814691470147114721473147414751476147714781479148014811482148314841485148614871488148914901491149214931494149514961497149814991500150115021503150415051506150715081509151015111512151315141515151615171518151915201521152215231524152515261527152815291530153115321533153415351536153715381539154015411542154315441545154615471548154915501551155215531554155515561557155815591560156115621563156415651566156715681569157015711572157315741575157615771578157915801581158215831584158515861587158815891590159115921593159415951596159715981599160016011602160316041605160616071608160916101611161216131614161516161617161816191620162116221623162416251626162716281629163016311632163316341635163616371638163916401641164216431644164516461647164816491650165116521653165416551656165716581659166016611662166316641665166616671668166916701671167216731674167516761677167816791680168116821683168416851686168716881689169016911692169316941695169616971698169917001701170217031704170517061707170817091710171117121713171417151716171717181719172017211722172317241725172617271728172917301731173217331734173517361737173817391740174117421743174417451746174717481749175017511752175317541755175617571758175917601761176217631764176517661767176817691770177117721773177417751776177717781779178017811782178317841785178617871788178917901791179217931794179517961797179817991800180118021803180418051806180718081809181018111812181318141815181618171818181918201821182218231824182518261827182818291830183118321833183418351836183718381839184018411842184318441845184618471848184918501851185218531854185518561857185818591860186118621863186418651866186718681869187018711872187318741875187618771878187918801881188218831884188518861887188818891890189118921893189418951896189718981899190019011902190319041905190619071908190919101911191219131914191519161917191819191920192119221923192419251926192719281929193019311932193319341935193619371938193919401941194219431944194519461947[PHP];;;;;;;;;;;;;;;;;;;; About php.ini ;;;;;;;;;;;;;;;;;;;;; PHP&#x27;s initialization file, generally called php.ini, is responsible for; configuring many of the aspects of PHP&#x27;s behavior.; PHP attempts to find and load this configuration from a number of locations.; The following is a summary of its search order:; 1. SAPI module specific location.; 2. The PHPRC environment variable. (As of PHP 5.2.0); 3. A number of predefined registry keys on Windows (As of PHP 5.2.0); 4. Current working directory (except CLI); 5. The web server&#x27;s directory (for SAPI modules), or directory of PHP; (otherwise in Windows); 6. The directory from the --with-config-file-path compile time option, or the; Windows directory (usually C:\\windows); See the PHP docs for more specific information.; http://php.net/configuration.file; The syntax of the file is extremely simple. Whitespace and lines; beginning with a semicolon are silently ignored (as you probably guessed).; Section headers (e.g. [Foo]) are also silently ignored, even though; they might mean something in the future.; Directives following the section heading [PATH=/www/mysite] only; apply to PHP files in the /www/mysite directory. Directives; following the section heading [HOST=www.example.com] only apply to; PHP files served from www.example.com. Directives set in these; special sections cannot be overridden by user-defined INI files or; at runtime. Currently, [PATH=] and [HOST=] sections only work under; CGI/FastCGI.; http://php.net/ini.sections; Directives are specified using the following syntax:; directive = value; Directive names are *case sensitive* - foo=bar is different from FOO=bar.; Directives are variables used to configure PHP or PHP extensions.; There is no name validation. If PHP can&#x27;t find an expected; directive because it is not set or is mistyped, a default value will be used.; The value can be a string, a number, a PHP constant (e.g. E_ALL or M_PI), one; of the INI constants (On, Off, True, False, Yes, No and None) or an expression; (e.g. E_ALL &amp; ~E_NOTICE), a quoted string (&quot;bar&quot;), or a reference to a; previously set variable or directive (e.g. $&#123;foo&#125;); Expressions in the INI file are limited to bitwise operators and parentheses:; | bitwise OR; ^ bitwise XOR; &amp; bitwise AND; ~ bitwise NOT; ! boolean NOT; Boolean flags can be turned on using the values 1, On, True or Yes.; They can be turned off using the values 0, Off, False or No.; An empty string can be denoted by simply not writing anything after the equal; sign, or by using the None keyword:; foo = ; sets foo to an empty string; foo = None ; sets foo to an empty string; foo = &quot;None&quot; ; sets foo to the string &#x27;None&#x27;; If you use constants in your value, and these constants belong to a; dynamically loaded extension (either a PHP extension or a Zend extension),; you may only use these constants *after* the line that loads the extension.;;;;;;;;;;;;;;;;;;;; About this file ;;;;;;;;;;;;;;;;;;;;; PHP comes packaged with two INI files. One that is recommended to be used; in production environments and one that is recommended to be used in; development environments.; php.ini-production contains settings which hold security, performance and; best practices at its core. But please be aware, these settings may break; compatibility with older or less security conscience applications. We; recommending using the production ini in production and testing environments.; php.ini-development is very similar to its production variant, except it is; much more verbose when it comes to errors. We recommend using the; development version only in development environments, as errors shown to; application users can inadvertently leak otherwise secure information.; This is the php.ini-production INI file.;;;;;;;;;;;;;;;;;;;; Quick Reference ;;;;;;;;;;;;;;;;;;;;; The following are all the settings which are different in either the production; or development versions of the INIs with respect to PHP&#x27;s default behavior.; Please see the actual settings later in the document for more details as to why; we recommend these changes in PHP&#x27;s behavior.; display_errors; Default Value: On; Development Value: On; Production Value: Off; display_startup_errors; Default Value: Off; Development Value: On; Production Value: Off; error_reporting; Default Value: E_ALL &amp; ~E_NOTICE &amp; ~E_STRICT &amp; ~E_DEPRECATED; Development Value: E_ALL; Production Value: E_ALL &amp; ~E_DEPRECATED &amp; ~E_STRICT; log_errors; Default Value: Off; Development Value: On; Production Value: On; max_input_time; Default Value: -1 (Unlimited); Development Value: 60 (60 seconds); Production Value: 60 (60 seconds); output_buffering; Default Value: Off; Development Value: 4096; Production Value: 4096; register_argc_argv; Default Value: On; Development Value: Off; Production Value: Off; request_order; Default Value: None; Development Value: &quot;GP&quot;; Production Value: &quot;GP&quot;; session.gc_divisor; Default Value: 100; Development Value: 1000; Production Value: 1000; session.sid_bits_per_character; Default Value: 4; Development Value: 5; Production Value: 5; short_open_tag; Default Value: On; Development Value: Off; Production Value: Off; variables_order; Default Value: &quot;EGPCS&quot;; Development Value: &quot;GPCS&quot;; Production Value: &quot;GPCS&quot;;;;;;;;;;;;;;;;;;;;;; php.ini Options ;;;;;;;;;;;;;;;;;;;;;; Name for user-defined php.ini (.htaccess) files. Default is &quot;.user.ini&quot;;user_ini.filename = &quot;.user.ini&quot;; To disable this feature set this option to an empty value;user_ini.filename =; TTL for user-defined php.ini files (time-to-live) in seconds. Default is 300 seconds (5 minutes);user_ini.cache_ttl = 300;;;;;;;;;;;;;;;;;;;;; Language Options ;;;;;;;;;;;;;;;;;;;;;; Enable the PHP scripting language engine under Apache.; http://php.net/engineengine = On; This directive determines whether or not PHP will recognize code between; &lt;? and ?&gt; tags as PHP source which should be processed as such. It is; generally recommended that &lt;?php and ?&gt; should be used and that this feature; should be disabled, as enabling it may result in issues when generating XML; documents, however this remains supported for backward compatibility reasons.; Note that this directive does not control the &lt;?= shorthand tag, which can be; used regardless of this directive.; Default Value: On; Development Value: Off; Production Value: Off; http://php.net/short-open-tagshort_open_tag = Off; The number of significant digits displayed in floating point numbers.; http://php.net/precisionprecision = 14; Output buffering is a mechanism for controlling how much output data; (excluding headers and cookies) PHP should keep internally before pushing that; data to the client. If your application&#x27;s output exceeds this setting, PHP; will send that data in chunks of roughly the size you specify.; Turning on this setting and managing its maximum buffer size can yield some; interesting side-effects depending on your application and web server.; You may be able to send headers and cookies after you&#x27;ve already sent output; through print or echo. You also may see performance benefits if your server is; emitting less packets due to buffered output versus PHP streaming the output; as it gets it. On production servers, 4096 bytes is a good setting for performance; reasons.; Note: Output buffering can also be controlled via Output Buffering Control; functions.; Possible Values:; On = Enabled and buffer is unlimited. (Use with caution); Off = Disabled; Integer = Enables the buffer and sets its maximum size in bytes.; Note: This directive is hardcoded to Off for the CLI SAPI; Default Value: Off; Development Value: 4096; Production Value: 4096; http://php.net/output-bufferingoutput_buffering = 4096; You can redirect all of the output of your scripts to a function. For; example, if you set output_handler to &quot;mb_output_handler&quot;, character; encoding will be transparently converted to the specified encoding.; Setting any output handler automatically turns on output buffering.; Note: People who wrote portable scripts should not depend on this ini; directive. Instead, explicitly set the output handler using ob_start().; Using this ini directive may cause problems unless you know what script; is doing.; Note: You cannot use both &quot;mb_output_handler&quot; with &quot;ob_iconv_handler&quot;; and you cannot use both &quot;ob_gzhandler&quot; and &quot;zlib.output_compression&quot;.; Note: output_handler must be empty if this is set &#x27;On&#x27; !!!!; Instead you must use zlib.output_handler.; http://php.net/output-handler;output_handler =; URL rewriter function rewrites URL on the fly by using; output buffer. You can set target tags by this configuration.; &quot;form&quot; tag is special tag. It will add hidden input tag to pass values.; Refer to session.trans_sid_tags for usage.; Default Value: &quot;form=&quot;; Development Value: &quot;form=&quot;; Production Value: &quot;form=&quot;;url_rewriter.tags; URL rewriter will not rewrite absolute URL nor form by default. To enable; absolute URL rewrite, allowed hosts must be defined at RUNTIME.; Refer to session.trans_sid_hosts for more details.; Default Value: &quot;&quot;; Development Value: &quot;&quot;; Production Value: &quot;&quot;;url_rewriter.hosts; Transparent output compression using the zlib library; Valid values for this option are &#x27;off&#x27;, &#x27;on&#x27;, or a specific buffer size; to be used for compression (default is 4KB); Note: Resulting chunk size may vary due to nature of compression. PHP; outputs chunks that are few hundreds bytes each as a result of; compression. If you prefer a larger chunk size for better; performance, enable output_buffering in addition.; Note: You need to use zlib.output_handler instead of the standard; output_handler, or otherwise the output will be corrupted.; http://php.net/zlib.output-compressionzlib.output_compression = Off; http://php.net/zlib.output-compression-level;zlib.output_compression_level = -1; You cannot specify additional output handlers if zlib.output_compression; is activated here. This setting does the same as output_handler but in; a different order.; http://php.net/zlib.output-handler;zlib.output_handler =; Implicit flush tells PHP to tell the output layer to flush itself; automatically after every output block. This is equivalent to calling the; PHP function flush() after each and every call to print() or echo() and each; and every HTML block. Turning this option on has serious performance; implications and is generally recommended for debugging purposes only.; http://php.net/implicit-flush; Note: This directive is hardcoded to On for the CLI SAPIimplicit_flush = Off; The unserialize callback function will be called (with the undefined class&#x27;; name as parameter), if the unserializer finds an undefined class; which should be instantiated. A warning appears if the specified function is; not defined, or if the function doesn&#x27;t include/implement the missing class.; So only set this entry, if you really want to implement such a; callback-function.unserialize_callback_func =; The unserialize_max_depth specifies the default depth limit for unserialized; structures. Setting the depth limit too high may result in stack overflows; during unserialization. The unserialize_max_depth ini setting can be; overridden by the max_depth option on individual unserialize() calls.; A value of 0 disables the depth limit.;unserialize_max_depth = 4096; When floats &amp; doubles are serialized, store serialize_precision significant; digits after the floating point. The default value ensures that when floats; are decoded with unserialize, the data will remain the same.; The value is also used for json_encode when encoding double values.; If -1 is used, then dtoa mode 0 is used which automatically select the best; precision.serialize_precision = -1; open_basedir, if set, limits all file operations to the defined directory; and below. This directive makes most sense if used in a per-directory; or per-virtualhost web server configuration file.; Note: disables the realpath cache; http://php.net/open-basedir;open_basedir =; This directive allows you to disable certain functions.; It receives a comma-delimited list of function names.; http://php.net/disable-functionsdisable_functions = pcntl_alarm,pcntl_fork,pcntl_waitpid,pcntl_wait,pcntl_wifexited,pcntl_wifstopped,pcntl_wifsignaled,pcntl_wifcontinued,pcntl_wexitstatus,pcntl_wtermsig,pcntl_wstopsig,pcntl_signal,pcntl_signal_get_handler,pcntl_signal_dispatch,pcntl_get_last_error,pcntl_strerror,pcntl_sigprocmask,pcntl_sigwaitinfo,pcntl_sigtimedwait,pcntl_exec,pcntl_getpriority,pcntl_setpriority,pcntl_async_signals,pcntl_unshare,; This directive allows you to disable certain classes.; It receives a comma-delimited list of class names.; http://php.net/disable-classesdisable_classes =; Colors for Syntax Highlighting mode. Anything that&#x27;s acceptable in; &lt;span style=&quot;color: ???????&quot;&gt; would work.; http://php.net/syntax-highlighting;highlight.string = #DD0000;highlight.comment = #FF9900;highlight.keyword = #007700;highlight.default = #0000BB;highlight.html = #000000; If enabled, the request will be allowed to complete even if the user aborts; the request. Consider enabling it if executing long requests, which may end up; being interrupted by the user or a browser timing out. PHP&#x27;s default behavior; is to disable this feature.; http://php.net/ignore-user-abort;ignore_user_abort = On; Determines the size of the realpath cache to be used by PHP. This value should; be increased on systems where PHP opens many files to reflect the quantity of; the file operations performed.; Note: if open_basedir is set, the cache is disabled; http://php.net/realpath-cache-size;realpath_cache_size = 4096k; Duration of time, in seconds for which to cache realpath information for a given; file or directory. For systems with rarely changing files, consider increasing this; value.; http://php.net/realpath-cache-ttl;realpath_cache_ttl = 120; Enables or disables the circular reference collector.; http://php.net/zend.enable-gczend.enable_gc = On; If enabled, scripts may be written in encodings that are incompatible with; the scanner. CP936, Big5, CP949 and Shift_JIS are the examples of such; encodings. To use this feature, mbstring extension must be enabled.; Default: Off;zend.multibyte = Off; Allows to set the default encoding for the scripts. This value will be used; unless &quot;declare(encoding=...)&quot; directive appears at the top of the script.; Only affects if zend.multibyte is set.; Default: &quot;&quot;;zend.script_encoding =; Allows to include or exclude arguments from stack traces generated for exceptions.; In production, it is recommended to turn this setting on to prohibit the output ; of sensitive information in stack traces; Default: Offzend.exception_ignore_args = On;;;;;;;;;;;;;;;;;; Miscellaneous ;;;;;;;;;;;;;;;;;;; Decides whether PHP may expose the fact that it is installed on the server; (e.g. by adding its signature to the Web server header). It is no security; threat in any way, but it makes it possible to determine whether you use PHP; on your server or not.; http://php.net/expose-phpexpose_php = Off;;;;;;;;;;;;;;;;;;;; Resource Limits ;;;;;;;;;;;;;;;;;;;;; Maximum execution time of each script, in seconds; http://php.net/max-execution-time; Note: This directive is hardcoded to 0 for the CLI SAPImax_execution_time = 30; Maximum amount of time each script may spend parsing request data. It&#x27;s a good; idea to limit this time on productions servers in order to eliminate unexpectedly; long running scripts.; Note: This directive is hardcoded to -1 for the CLI SAPI; Default Value: -1 (Unlimited); Development Value: 60 (60 seconds); Production Value: 60 (60 seconds); http://php.net/max-input-timemax_input_time = 60; Maximum input variable nesting level; http://php.net/max-input-nesting-level;max_input_nesting_level = 64; How many GET/POST/COOKIE input variables may be accepted;max_input_vars = 1000; Maximum amount of memory a script may consume; http://php.net/memory-limitmemory_limit = 128M;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; Error handling and logging ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; This directive informs PHP of which errors, warnings and notices you would like; it to take action for. The recommended way of setting values for this; directive is through the use of the error level constants and bitwise; operators. The error level constants are below here for convenience as well as; some common settings and their meanings.; By default, PHP is set to take action on all errors, notices and warnings EXCEPT; those related to E_NOTICE and E_STRICT, which together cover best practices and; recommended coding standards in PHP. For performance reasons, this is the; recommend error reporting setting. Your production server shouldn&#x27;t be wasting; resources complaining about best practices and coding standards. That&#x27;s what; development servers and development settings are for.; Note: The php.ini-development file has this setting as E_ALL. This; means it pretty much reports everything which is exactly what you want during; development and early testing.;; Error Level Constants:; E_ALL - All errors and warnings (includes E_STRICT as of PHP 5.4.0); E_ERROR - fatal run-time errors; E_RECOVERABLE_ERROR - almost fatal run-time errors; E_WARNING - run-time warnings (non-fatal errors); E_PARSE - compile-time parse errors; E_NOTICE - run-time notices (these are warnings which often result; from a bug in your code, but it&#x27;s possible that it was; intentional (e.g., using an uninitialized variable and; relying on the fact it is automatically initialized to an; empty string); E_STRICT - run-time notices, enable to have PHP suggest changes; to your code which will ensure the best interoperability; and forward compatibility of your code; E_CORE_ERROR - fatal errors that occur during PHP&#x27;s initial startup; E_CORE_WARNING - warnings (non-fatal errors) that occur during PHP&#x27;s; initial startup; E_COMPILE_ERROR - fatal compile-time errors; E_COMPILE_WARNING - compile-time warnings (non-fatal errors); E_USER_ERROR - user-generated error message; E_USER_WARNING - user-generated warning message; E_USER_NOTICE - user-generated notice message; E_DEPRECATED - warn about code that will not work in future versions; of PHP; E_USER_DEPRECATED - user-generated deprecation warnings;; Common Values:; E_ALL (Show all errors, warnings and notices including coding standards.); E_ALL &amp; ~E_NOTICE (Show all errors, except for notices); E_ALL &amp; ~E_NOTICE &amp; ~E_STRICT (Show all errors, except for notices and coding standards warnings.); E_COMPILE_ERROR|E_RECOVERABLE_ERROR|E_ERROR|E_CORE_ERROR (Show only errors); Default Value: E_ALL &amp; ~E_NOTICE &amp; ~E_STRICT &amp; ~E_DEPRECATED; Development Value: E_ALL; Production Value: E_ALL &amp; ~E_DEPRECATED &amp; ~E_STRICT; http://php.net/error-reportingerror_reporting = E_ALL &amp; ~E_DEPRECATED &amp; ~E_STRICT; This directive controls whether or not and where PHP will output errors,; notices and warnings too. Error output is very useful during development, but; it could be very dangerous in production environments. Depending on the code; which is triggering the error, sensitive information could potentially leak; out of your application such as database usernames and passwords or worse.; For production environments, we recommend logging errors rather than; sending them to STDOUT.; Possible Values:; Off = Do not display any errors; stderr = Display errors to STDERR (affects only CGI/CLI binaries!); On or stdout = Display errors to STDOUT; Default Value: On; Development Value: On; Production Value: Off; http://php.net/display-errorsdisplay_errors = Off; The display of errors which occur during PHP&#x27;s startup sequence are handled; separately from display_errors. PHP&#x27;s default behavior is to suppress those; errors from clients. Turning the display of startup errors on can be useful in; debugging configuration problems. We strongly recommend you; set this to &#x27;off&#x27; for production servers.; Default Value: Off; Development Value: On; Production Value: Off; http://php.net/display-startup-errorsdisplay_startup_errors = Off; Besides displaying errors, PHP can also log errors to locations such as a; server-specific log, STDERR, or a location specified by the error_log; directive found below. While errors should not be displayed on productions; servers they should still be monitored and logging is a great way to do that.; Default Value: Off; Development Value: On; Production Value: On; http://php.net/log-errorslog_errors = On; Set maximum length of log_errors. In error_log information about the source is; added. The default is 1024 and 0 allows to not apply any maximum length at all.; http://php.net/log-errors-max-lenlog_errors_max_len = 1024; Do not log repeated messages. Repeated errors must occur in same file on same; line unless ignore_repeated_source is set true.; http://php.net/ignore-repeated-errorsignore_repeated_errors = Off; Ignore source of message when ignoring repeated messages. When this setting; is On you will not log errors with repeated messages from different files or; source lines.; http://php.net/ignore-repeated-sourceignore_repeated_source = Off; If this parameter is set to Off, then memory leaks will not be shown (on; stdout or in the log). This is only effective in a debug compile, and if; error reporting includes E_WARNING in the allowed list; http://php.net/report-memleaksreport_memleaks = On; This setting is on by default.;report_zend_debug = 0; Store the last error/warning message in $php_errormsg (boolean). Setting this value; to On can assist in debugging and is appropriate for development servers. It should; however be disabled on production servers.; This directive is DEPRECATED.; Default Value: Off; Development Value: Off; Production Value: Off; http://php.net/track-errors;track_errors = Off; Turn off normal error reporting and emit XML-RPC error XML; http://php.net/xmlrpc-errors;xmlrpc_errors = 0; An XML-RPC faultCode;xmlrpc_error_number = 0; When PHP displays or logs an error, it has the capability of formatting the; error message as HTML for easier reading. This directive controls whether; the error message is formatted as HTML or not.; Note: This directive is hardcoded to Off for the CLI SAPI; http://php.net/html-errors;html_errors = On; If html_errors is set to On *and* docref_root is not empty, then PHP; produces clickable error messages that direct to a page describing the error; or function causing the error in detail.; You can download a copy of the PHP manual from http://php.net/docs; and change docref_root to the base URL of your local copy including the; leading &#x27;/&#x27;. You must also specify the file extension being used including; the dot. PHP&#x27;s default behavior is to leave these settings empty, in which; case no links to documentation are generated.; Note: Never use this feature for production boxes.; http://php.net/docref-root; Examples;docref_root = &quot;/phpmanual/&quot;; http://php.net/docref-ext;docref_ext = .html; String to output before an error message. PHP&#x27;s default behavior is to leave; this setting blank.; http://php.net/error-prepend-string; Example:;error_prepend_string = &quot;&lt;span style=&#x27;color: #ff0000&#x27;&gt;&quot;; String to output after an error message. PHP&#x27;s default behavior is to leave; this setting blank.; http://php.net/error-append-string; Example:;error_append_string = &quot;&lt;/span&gt;&quot;; Log errors to specified file. PHP&#x27;s default behavior is to leave this value; empty.; http://php.net/error-log; Example:;error_log = php_errors.log; Log errors to syslog (Event Log on Windows).;error_log = syslog; The syslog ident is a string which is prepended to every message logged; to syslog. Only used when error_log is set to syslog.;syslog.ident = php; The syslog facility is used to specify what type of program is logging; the message. Only used when error_log is set to syslog.;syslog.facility = user; Set this to disable filtering control characters (the default).; Some loggers only accept NVT-ASCII, others accept anything that&#x27;s not; control characters. If your logger accepts everything, then no filtering; is needed at all.; Allowed values are:; ascii (all printable ASCII characters and NL); no-ctrl (all characters except control characters); all (all characters); raw (like &quot;all&quot;, but messages are not split at newlines); http://php.net/syslog.filter;syslog.filter = ascii;windows.show_crt_warning; Default value: 0; Development value: 0; Production value: 0;;;;;;;;;;;;;;;;;; Data Handling ;;;;;;;;;;;;;;;;;;; The separator used in PHP generated URLs to separate arguments.; PHP&#x27;s default setting is &quot;&amp;&quot;.; http://php.net/arg-separator.output; Example:;arg_separator.output = &quot;&amp;amp;&quot;; List of separator(s) used by PHP to parse input URLs into variables.; PHP&#x27;s default setting is &quot;&amp;&quot;.; NOTE: Every character in this directive is considered as separator!; http://php.net/arg-separator.input; Example:;arg_separator.input = &quot;;&amp;&quot;; This directive determines which super global arrays are registered when PHP; starts up. G,P,C,E &amp; S are abbreviations for the following respective super; globals: GET, POST, COOKIE, ENV and SERVER. There is a performance penalty; paid for the registration of these arrays and because ENV is not as commonly; used as the others, ENV is not recommended on productions servers. You; can still get access to the environment variables through getenv() should you; need to.; Default Value: &quot;EGPCS&quot;; Development Value: &quot;GPCS&quot;; Production Value: &quot;GPCS&quot;;; http://php.net/variables-ordervariables_order = &quot;GPCS&quot;; This directive determines which super global data (G,P &amp; C) should be; registered into the super global array REQUEST. If so, it also determines; the order in which that data is registered. The values for this directive; are specified in the same manner as the variables_order directive,; EXCEPT one. Leaving this value empty will cause PHP to use the value set; in the variables_order directive. It does not mean it will leave the super; globals array REQUEST empty.; Default Value: None; Development Value: &quot;GP&quot;; Production Value: &quot;GP&quot;; http://php.net/request-orderrequest_order = &quot;GP&quot;; This directive determines whether PHP registers $argv &amp; $argc each time it; runs. $argv contains an array of all the arguments passed to PHP when a script; is invoked. $argc contains an integer representing the number of arguments; that were passed when the script was invoked. These arrays are extremely; useful when running scripts from the command line. When this directive is; enabled, registering these variables consumes CPU cycles and memory each time; a script is executed. For performance reasons, this feature should be disabled; on production servers.; Note: This directive is hardcoded to On for the CLI SAPI; Default Value: On; Development Value: Off; Production Value: Off; http://php.net/register-argc-argvregister_argc_argv = Off; When enabled, the ENV, REQUEST and SERVER variables are created when they&#x27;re; first used (Just In Time) instead of when the script starts. If these; variables are not used within a script, having this directive on will result; in a performance gain. The PHP directive register_argc_argv must be disabled; for this directive to have any effect.; http://php.net/auto-globals-jitauto_globals_jit = On; Whether PHP will read the POST data.; This option is enabled by default.; Most likely, you won&#x27;t want to disable this option globally. It causes $_POST; and $_FILES to always be empty; the only way you will be able to read the; POST data will be through the php://input stream wrapper. This can be useful; to proxy requests or to process the POST data in a memory efficient fashion.; http://php.net/enable-post-data-reading;enable_post_data_reading = Off; Maximum size of POST data that PHP will accept.; Its value may be 0 to disable the limit. It is ignored if POST data reading; is disabled through enable_post_data_reading.; http://php.net/post-max-sizepost_max_size = 30M; Automatically add files before PHP document.; http://php.net/auto-prepend-fileauto_prepend_file =; Automatically add files after PHP document.; http://php.net/auto-append-fileauto_append_file =; By default, PHP will output a media type using the Content-Type header. To; disable this, simply set it to be empty.;; PHP&#x27;s built-in default media type is set to text/html.; http://php.net/default-mimetypedefault_mimetype = &quot;text/html&quot;; PHP&#x27;s default character set is set to UTF-8.; http://php.net/default-charsetdefault_charset = &quot;UTF-8&quot;; PHP internal character encoding is set to empty.; If empty, default_charset is used.; http://php.net/internal-encoding;internal_encoding =; PHP input character encoding is set to empty.; If empty, default_charset is used.; http://php.net/input-encoding;input_encoding =; PHP output character encoding is set to empty.; If empty, default_charset is used.; See also output_buffer.; http://php.net/output-encoding;output_encoding =;;;;;;;;;;;;;;;;;;;;;;;;;; Paths and Directories ;;;;;;;;;;;;;;;;;;;;;;;;;;; UNIX: &quot;/path1:/path2&quot;;include_path = &quot;.:/usr/share/php&quot;;; Windows: &quot;\\path1;\\path2&quot;;include_path = &quot;.;c:\\php\\includes&quot;;; PHP&#x27;s default setting for include_path is &quot;.;/path/to/php/pear&quot;; http://php.net/include-path; The root of the PHP pages, used only if nonempty.; if PHP was not compiled with FORCE_REDIRECT, you SHOULD set doc_root; if you are running php as a CGI under any web server (other than IIS); see documentation for security issues. The alternate is to use the; cgi.force_redirect configuration below; http://php.net/doc-rootdoc_root =; The directory under which PHP opens the script using /~username used only; if nonempty.; http://php.net/user-diruser_dir =; Directory in which the loadable extensions (modules) reside.; http://php.net/extension-dir;extension_dir = &quot;./&quot;; On windows:;extension_dir = &quot;ext&quot;; Directory where the temporary files should be placed.; Defaults to the system default (see sys_get_temp_dir);sys_temp_dir = &quot;/tmp&quot;; Whether or not to enable the dl() function. The dl() function does NOT work; properly in multithreaded servers, such as IIS or Zeus, and is automatically; disabled on them.; http://php.net/enable-dlenable_dl = Off; cgi.force_redirect is necessary to provide security running PHP as a CGI under; most web servers. Left undefined, PHP turns this on by default. You can; turn it off here AT YOUR OWN RISK; **You CAN safely turn this off for IIS, in fact, you MUST.**; http://php.net/cgi.force-redirect;cgi.force_redirect = 1; if cgi.nph is enabled it will force cgi to always sent Status: 200 with; every request. PHP&#x27;s default behavior is to disable this feature.;cgi.nph = 1; if cgi.force_redirect is turned on, and you are not running under Apache or Netscape; (iPlanet) web servers, you MAY need to set an environment variable name that PHP; will look for to know it is OK to continue execution. Setting this variable MAY; cause security issues, KNOW WHAT YOU ARE DOING FIRST.; http://php.net/cgi.redirect-status-env;cgi.redirect_status_env =; cgi.fix_pathinfo provides *real* PATH_INFO/PATH_TRANSLATED support for CGI. PHP&#x27;s; previous behaviour was to set PATH_TRANSLATED to SCRIPT_FILENAME, and to not grok; what PATH_INFO is. For more information on PATH_INFO, see the cgi specs. Setting; this to 1 will cause PHP CGI to fix its paths to conform to the spec. A setting; of zero causes PHP to behave as before. Default is 1. You should fix your scripts; to use SCRIPT_FILENAME rather than PATH_TRANSLATED.; http://php.net/cgi.fix-pathinfo;cgi.fix_pathinfo=1; if cgi.discard_path is enabled, the PHP CGI binary can safely be placed outside; of the web tree and people will not be able to circumvent .htaccess security.;cgi.discard_path=1; FastCGI under IIS supports the ability to impersonate; security tokens of the calling client. This allows IIS to define the; security context that the request runs under. mod_fastcgi under Apache; does not currently support this feature (03/17/2002); Set to 1 if running under IIS. Default is zero.; http://php.net/fastcgi.impersonate;fastcgi.impersonate = 1; Disable logging through FastCGI connection. PHP&#x27;s default behavior is to enable; this feature.;fastcgi.logging = 0; cgi.rfc2616_headers configuration option tells PHP what type of headers to; use when sending HTTP response code. If set to 0, PHP sends Status: header that; is supported by Apache. When this option is set to 1, PHP will send; RFC2616 compliant header.; Default is zero.; http://php.net/cgi.rfc2616-headers;cgi.rfc2616_headers = 0; cgi.check_shebang_line controls whether CGI PHP checks for line starting with #!; (shebang) at the top of the running script. This line might be needed if the; script support running both as stand-alone script and via PHP CGI&lt;. PHP in CGI; mode skips this line and ignores its content if this directive is turned on.; http://php.net/cgi.check-shebang-line;cgi.check_shebang_line=1;;;;;;;;;;;;;;;;; File Uploads ;;;;;;;;;;;;;;;;;; Whether to allow HTTP file uploads.; http://php.net/file-uploadsfile_uploads = On; Temporary directory for HTTP uploaded files (will use system default if not; specified).; http://php.net/upload-tmp-dir;upload_tmp_dir =; Maximum allowed size for uploaded files.; http://php.net/upload-max-filesizeupload_max_filesize = 30M; Maximum number of files that can be uploaded via a single requestmax_file_uploads = 20;;;;;;;;;;;;;;;;;;; Fopen wrappers ;;;;;;;;;;;;;;;;;;;; Whether to allow the treatment of URLs (like http:// or ftp://) as files.; http://php.net/allow-url-fopenallow_url_fopen = On; Whether to allow include/require to open URLs (like http:// or ftp://) as files.; http://php.net/allow-url-includeallow_url_include = Off; Define the anonymous ftp password (your email address). PHP&#x27;s default setting; for this is empty.; http://php.net/from;from=&quot;john@doe.com&quot;; Define the User-Agent string. PHP&#x27;s default setting for this is empty.; http://php.net/user-agent;user_agent=&quot;PHP&quot;; Default timeout for socket based streams (seconds); http://php.net/default-socket-timeoutdefault_socket_timeout = 60; If your scripts have to deal with files from Macintosh systems,; or you are running on a Mac and need to deal with files from; unix or win32 systems, setting this flag will cause PHP to; automatically detect the EOL character in those files so that; fgets() and file() will work regardless of the source of the file.; http://php.net/auto-detect-line-endings;auto_detect_line_endings = Off;;;;;;;;;;;;;;;;;;;;;;; Dynamic Extensions ;;;;;;;;;;;;;;;;;;;;;;;; If you wish to have an extension loaded automatically, use the following; syntax:;; extension=modulename;; For example:;; extension=mysqli;; When the extension library to load is not located in the default extension; directory, You may specify an absolute path to the library file:;; extension=/path/to/extension/mysqli.so;; Note : The syntax used in previous PHP versions (&#x27;extension=&lt;ext&gt;.so&#x27; and; &#x27;extension=&#x27;php_&lt;ext&gt;.dll&#x27;) is supported for legacy reasons and may be; deprecated in a future PHP major version. So, when it is possible, please; move to the new (&#x27;extension=&lt;ext&gt;) syntax.;; Notes for Windows environments :;; - Many DLL files are located in the extensions/ (PHP 4) or ext/ (PHP 5+); extension folders as well as the separate PECL DLL download (PHP 5+).; Be sure to appropriately set the extension_dir directive.;;extension=bz2;extension=curl;extension=ffi;extension=ftp;extension=fileinfo;extension=gd2;extension=gettext;extension=gmp;extension=intl;extension=imap;extension=ldap;extension=mbstring;extension=exif ; Must be after mbstring as it depends on it;extension=mysqli;extension=oci8_12c ; Use with Oracle Database 12c Instant Client;extension=odbc;extension=openssl;extension=pdo_firebird;extension=pdo_mysql;extension=pdo_oci;extension=pdo_odbc;extension=pdo_pgsql;extension=pdo_sqlite;extension=pgsql;extension=shmop; The MIBS data available in the PHP distribution must be installed.; See http://www.php.net/manual/en/snmp.installation.php;extension=snmp;extension=soap;extension=sockets;extension=sodium;extension=sqlite3;extension=tidy;extension=xmlrpc;extension=xsl;;;;;;;;;;;;;;;;;;;; Module Settings ;;;;;;;;;;;;;;;;;;;;[CLI Server]; Whether the CLI web server uses ANSI color coding in its terminal output.cli_server.color = On[Date]; Defines the default timezone used by the date functions; http://php.net/date.timezonedate.timezone = Asia/Seoul; http://php.net/date.default-latitude;date.default_latitude = 31.7667; http://php.net/date.default-longitude;date.default_longitude = 35.2333; http://php.net/date.sunrise-zenith;date.sunrise_zenith = 90.583333; http://php.net/date.sunset-zenith;date.sunset_zenith = 90.583333[filter]; http://php.net/filter.default;filter.default = unsafe_raw; http://php.net/filter.default-flags;filter.default_flags =[iconv]; Use of this INI entry is deprecated, use global input_encoding instead.; If empty, default_charset or input_encoding or iconv.input_encoding is used.; The precedence is: default_charset &lt; input_encoding &lt; iconv.input_encoding;iconv.input_encoding =; Use of this INI entry is deprecated, use global internal_encoding instead.; If empty, default_charset or internal_encoding or iconv.internal_encoding is used.; The precedence is: default_charset &lt; internal_encoding &lt; iconv.internal_encoding;iconv.internal_encoding =; Use of this INI entry is deprecated, use global output_encoding instead.; If empty, default_charset or output_encoding or iconv.output_encoding is used.; The precedence is: default_charset &lt; output_encoding &lt; iconv.output_encoding; To use an output encoding conversion, iconv&#x27;s output handler must be set; otherwise output encoding conversion cannot be performed.;iconv.output_encoding =[imap]; rsh/ssh logins are disabled by default. Use this INI entry if you want to; enable them. Note that the IMAP library does not filter mailbox names before; passing them to rsh/ssh command, thus passing untrusted data to this function; with rsh/ssh enabled is insecure.;imap.enable_insecure_rsh=0[intl];intl.default_locale =; This directive allows you to produce PHP errors when some error; happens within intl functions. The value is the level of the error produced.; Default is 0, which does not produce any errors.;intl.error_level = E_WARNING;intl.use_exceptions = 0[sqlite3]; Directory pointing to SQLite3 extensions; http://php.net/sqlite3.extension-dir;sqlite3.extension_dir =; SQLite defensive mode flag (only available from SQLite 3.26+); When the defensive flag is enabled, language features that allow ordinary; SQL to deliberately corrupt the database file are disabled. This forbids; writing directly to the schema, shadow tables (eg. FTS data tables), or; the sqlite_dbpage virtual table.; https://www.sqlite.org/c3ref/c_dbconfig_defensive.html; (for older SQLite versions, this flag has no use);sqlite3.defensive = 1[Pcre]; PCRE library backtracking limit.; http://php.net/pcre.backtrack-limit;pcre.backtrack_limit=100000; PCRE library recursion limit.; Please note that if you set this value to a high number you may consume all; the available process stack and eventually crash PHP (due to reaching the; stack size limit imposed by the Operating System).; http://php.net/pcre.recursion-limit;pcre.recursion_limit=100000; Enables or disables JIT compilation of patterns. This requires the PCRE; library to be compiled with JIT support.;pcre.jit=1[Pdo]; Whether to pool ODBC connections. Can be one of &quot;strict&quot;, &quot;relaxed&quot; or &quot;off&quot;; http://php.net/pdo-odbc.connection-pooling;pdo_odbc.connection_pooling=strict;pdo_odbc.db2_instance_name[Pdo_mysql]; Default socket name for local MySQL connects. If empty, uses the built-in; MySQL defaults.pdo_mysql.default_socket=[Phar]; http://php.net/phar.readonly;phar.readonly = On; http://php.net/phar.require-hash;phar.require_hash = On;phar.cache_list =[mail function]; For Win32 only.; http://php.net/smtpSMTP = localhost; http://php.net/smtp-portsmtp_port = 25; For Win32 only.; http://php.net/sendmail-from;sendmail_from = me@example.com; For Unix only. You may supply arguments as well (default: &quot;sendmail -t -i&quot;).; http://php.net/sendmail-path;sendmail_path =; Force the addition of the specified parameters to be passed as extra parameters; to the sendmail binary. These parameters will always replace the value of; the 5th parameter to mail().;mail.force_extra_parameters =; Add X-PHP-Originating-Script: that will include uid of the script followed by the filenamemail.add_x_header = Off; The path to a log file that will log all mail() calls. Log entries include; the full path of the script, line number, To address and headers.;mail.log =; Log mail to syslog (Event Log on Windows).;mail.log = syslog[ODBC]; http://php.net/odbc.default-db;odbc.default_db = Not yet implemented; http://php.net/odbc.default-user;odbc.default_user = Not yet implemented; http://php.net/odbc.default-pw;odbc.default_pw = Not yet implemented; Controls the ODBC cursor model.; Default: SQL_CURSOR_STATIC (default).;odbc.default_cursortype; Allow or prevent persistent links.; http://php.net/odbc.allow-persistentodbc.allow_persistent = On; Check that a connection is still valid before reuse.; http://php.net/odbc.check-persistentodbc.check_persistent = On; Maximum number of persistent links. -1 means no limit.; http://php.net/odbc.max-persistentodbc.max_persistent = -1; Maximum number of links (persistent + non-persistent). -1 means no limit.; http://php.net/odbc.max-linksodbc.max_links = -1; Handling of LONG fields. Returns number of bytes to variables. 0 means; passthru.; http://php.net/odbc.defaultlrlodbc.defaultlrl = 4096; Handling of binary data. 0 means passthru, 1 return as is, 2 convert to char.; See the documentation on odbc_binmode and odbc_longreadlen for an explanation; of odbc.defaultlrl and odbc.defaultbinmode; http://php.net/odbc.defaultbinmodeodbc.defaultbinmode = 1[MySQLi]; Maximum number of persistent links. -1 means no limit.; http://php.net/mysqli.max-persistentmysqli.max_persistent = -1; Allow accessing, from PHP&#x27;s perspective, local files with LOAD DATA statements; http://php.net/mysqli.allow_local_infile;mysqli.allow_local_infile = On; Allow or prevent persistent links.; http://php.net/mysqli.allow-persistentmysqli.allow_persistent = On; Maximum number of links. -1 means no limit.; http://php.net/mysqli.max-linksmysqli.max_links = -1; Default port number for mysqli_connect(). If unset, mysqli_connect() will use; the $MYSQL_TCP_PORT or the mysql-tcp entry in /etc/services or the; compile-time value defined MYSQL_PORT (in that order). Win32 will only look; at MYSQL_PORT.; http://php.net/mysqli.default-portmysqli.default_port = 3306; Default socket name for local MySQL connects. If empty, uses the built-in; MySQL defaults.; http://php.net/mysqli.default-socketmysqli.default_socket =; Default host for mysqli_connect() (doesn&#x27;t apply in safe mode).; http://php.net/mysqli.default-hostmysqli.default_host =; Default user for mysqli_connect() (doesn&#x27;t apply in safe mode).; http://php.net/mysqli.default-usermysqli.default_user =; Default password for mysqli_connect() (doesn&#x27;t apply in safe mode).; Note that this is generally a *bad* idea to store passwords in this file.; *Any* user with PHP access can run &#x27;echo get_cfg_var(&quot;mysqli.default_pw&quot;); and reveal this password! And of course, any users with read access to this; file will be able to reveal the password as well.; http://php.net/mysqli.default-pwmysqli.default_pw =; Allow or prevent reconnectmysqli.reconnect = Off[mysqlnd]; Enable / Disable collection of general statistics by mysqlnd which can be; used to tune and monitor MySQL operations.mysqlnd.collect_statistics = On; Enable / Disable collection of memory usage statistics by mysqlnd which can be; used to tune and monitor MySQL operations.mysqlnd.collect_memory_statistics = Off; Records communication from all extensions using mysqlnd to the specified log; file.; http://php.net/mysqlnd.debug;mysqlnd.debug =; Defines which queries will be logged.;mysqlnd.log_mask = 0; Default size of the mysqlnd memory pool, which is used by result sets.;mysqlnd.mempool_default_size = 16000; Size of a pre-allocated buffer used when sending commands to MySQL in bytes.;mysqlnd.net_cmd_buffer_size = 2048; Size of a pre-allocated buffer used for reading data sent by the server in; bytes.;mysqlnd.net_read_buffer_size = 32768; Timeout for network requests in seconds.;mysqlnd.net_read_timeout = 31536000; SHA-256 Authentication Plugin related. File with the MySQL server public RSA; key.;mysqlnd.sha256_server_public_key =[OCI8]; Connection: Enables privileged connections using external; credentials (OCI_SYSOPER, OCI_SYSDBA); http://php.net/oci8.privileged-connect;oci8.privileged_connect = Off; Connection: The maximum number of persistent OCI8 connections per; process. Using -1 means no limit.; http://php.net/oci8.max-persistent;oci8.max_persistent = -1; Connection: The maximum number of seconds a process is allowed to; maintain an idle persistent connection. Using -1 means idle; persistent connections will be maintained forever.; http://php.net/oci8.persistent-timeout;oci8.persistent_timeout = -1; Connection: The number of seconds that must pass before issuing a; ping during oci_pconnect() to check the connection validity. When; set to 0, each oci_pconnect() will cause a ping. Using -1 disables; pings completely.; http://php.net/oci8.ping-interval;oci8.ping_interval = 60; Connection: Set this to a user chosen connection class to be used; for all pooled server requests with Oracle 11g Database Resident; Connection Pooling (DRCP). To use DRCP, this value should be set to; the same string for all web servers running the same application,; the database pool must be configured, and the connection string must; specify to use a pooled server.;oci8.connection_class =; High Availability: Using On lets PHP receive Fast Application; Notification (FAN) events generated when a database node fails. The; database must also be configured to post FAN events.;oci8.events = Off; Tuning: This option enables statement caching, and specifies how; many statements to cache. Using 0 disables statement caching.; http://php.net/oci8.statement-cache-size;oci8.statement_cache_size = 20; Tuning: Enables statement prefetching and sets the default number of; rows that will be fetched automatically after statement execution.; http://php.net/oci8.default-prefetch;oci8.default_prefetch = 100; Compatibility. Using On means oci_close() will not close; oci_connect() and oci_new_connect() connections.; http://php.net/oci8.old-oci-close-semantics;oci8.old_oci_close_semantics = Off[PostgreSQL]; Allow or prevent persistent links.; http://php.net/pgsql.allow-persistentpgsql.allow_persistent = On; Detect broken persistent links always with pg_pconnect().; Auto reset feature requires a little overheads.; http://php.net/pgsql.auto-reset-persistentpgsql.auto_reset_persistent = Off; Maximum number of persistent links. -1 means no limit.; http://php.net/pgsql.max-persistentpgsql.max_persistent = -1; Maximum number of links (persistent+non persistent). -1 means no limit.; http://php.net/pgsql.max-linkspgsql.max_links = -1; Ignore PostgreSQL backends Notice message or not.; Notice message logging require a little overheads.; http://php.net/pgsql.ignore-noticepgsql.ignore_notice = 0; Log PostgreSQL backends Notice message or not.; Unless pgsql.ignore_notice=0, module cannot log notice message.; http://php.net/pgsql.log-noticepgsql.log_notice = 0[bcmath]; Number of decimal digits for all bcmath functions.; http://php.net/bcmath.scalebcmath.scale = 0[browscap]; http://php.net/browscap;browscap = extra/browscap.ini[Session]; Handler used to store/retrieve data.; http://php.net/session.save-handlersession.save_handler = files; Argument passed to save_handler. In the case of files, this is the path; where data files are stored. Note: Windows users have to change this; variable in order to use PHP&#x27;s session functions.;; The path can be defined as:;; session.save_path = &quot;N;/path&quot;;; where N is an integer. Instead of storing all the session files in; /path, what this will do is use subdirectories N-levels deep, and; store the session data in those directories. This is useful if; your OS has problems with many files in one directory, and is; a more efficient layout for servers that handle many sessions.;; NOTE 1: PHP will not create this directory structure automatically.; You can use the script in the ext/session dir for that purpose.; NOTE 2: See the section on garbage collection below if you choose to; use subdirectories for session storage;; The file storage module creates files using mode 600 by default.; You can change that by using;; session.save_path = &quot;N;MODE;/path&quot;;; where MODE is the octal representation of the mode. Note that this; does not overwrite the process&#x27;s umask.; http://php.net/session.save-path;session.save_path = &quot;/var/lib/php/sessions&quot;; Whether to use strict session mode.; Strict session mode does not accept an uninitialized session ID, and; regenerates the session ID if the browser sends an uninitialized session ID.; Strict mode protects applications from session fixation via a session adoption; vulnerability. It is disabled by default for maximum compatibility, but; enabling it is encouraged.; https://wiki.php.net/rfc/strict_sessionssession.use_strict_mode = 0; Whether to use cookies.; http://php.net/session.use-cookiessession.use_cookies = 1; http://php.net/session.cookie-secure;session.cookie_secure =; This option forces PHP to fetch and use a cookie for storing and maintaining; the session id. We encourage this operation as it&#x27;s very helpful in combating; session hijacking when not specifying and managing your own session id. It is; not the be-all and end-all of session hijacking defense, but it&#x27;s a good start.; http://php.net/session.use-only-cookiessession.use_only_cookies = 1; Name of the session (used as cookie name).; http://php.net/session.namesession.name = PHPSESSID; Initialize session on request startup.; http://php.net/session.auto-startsession.auto_start = 0; Lifetime in seconds of cookie or, if 0, until browser is restarted.; http://php.net/session.cookie-lifetimesession.cookie_lifetime = 0; The path for which the cookie is valid.; http://php.net/session.cookie-pathsession.cookie_path = /; The domain for which the cookie is valid.; http://php.net/session.cookie-domainsession.cookie_domain =; Whether or not to add the httpOnly flag to the cookie, which makes it; inaccessible to browser scripting languages such as JavaScript.; http://php.net/session.cookie-httponlysession.cookie_httponly =; Add SameSite attribute to cookie to help mitigate Cross-Site Request Forgery (CSRF/XSRF); Current valid values are &quot;Strict&quot;, &quot;Lax&quot; or &quot;None&quot;. When using &quot;None&quot;,; make sure to include the quotes, as `none` is interpreted like `false` in ini files.; https://tools.ietf.org/html/draft-west-first-party-cookies-07session.cookie_samesite =; Handler used to serialize data. php is the standard serializer of PHP.; http://php.net/session.serialize-handlersession.serialize_handler = php; Defines the probability that the &#x27;garbage collection&#x27; process is started on every; session initialization. The probability is calculated by using gc_probability/gc_divisor,; e.g. 1/100 means there is a 1% chance that the GC process starts on each request.; Default Value: 1; Development Value: 1; Production Value: 1; http://php.net/session.gc-probabilitysession.gc_probability = 0; Defines the probability that the &#x27;garbage collection&#x27; process is started on every; session initialization. The probability is calculated by using gc_probability/gc_divisor,; e.g. 1/100 means there is a 1% chance that the GC process starts on each request.; For high volume production servers, using a value of 1000 is a more efficient approach.; Default Value: 100; Development Value: 1000; Production Value: 1000; http://php.net/session.gc-divisorsession.gc_divisor = 1000; After this number of seconds, stored data will be seen as &#x27;garbage&#x27; and; cleaned up by the garbage collection process.; http://php.net/session.gc-maxlifetimesession.gc_maxlifetime = 1440; NOTE: If you are using the subdirectory option for storing session files; (see session.save_path above), then garbage collection does *not*; happen automatically. You will need to do your own garbage; collection through a shell script, cron entry, or some other method.; For example, the following script is the equivalent of setting; session.gc_maxlifetime to 1440 (1440 seconds = 24 minutes):; find /path/to/sessions -cmin +24 -type f | xargs rm; Check HTTP Referer to invalidate externally stored URLs containing ids.; HTTP_REFERER has to contain this substring for the session to be; considered as valid.; http://php.net/session.referer-checksession.referer_check =; Set to &#123;nocache,private,public,&#125; to determine HTTP caching aspects; or leave this empty to avoid sending anti-caching headers.; http://php.net/session.cache-limitersession.cache_limiter = nocache; Document expires after n minutes.; http://php.net/session.cache-expiresession.cache_expire = 180; trans sid support is disabled by default.; Use of trans sid may risk your users&#x27; security.; Use this option with caution.; - User may send URL contains active session ID; to other person via. email/irc/etc.; - URL that contains active session ID may be stored; in publicly accessible computer.; - User may access your site with the same session ID; always using URL stored in browser&#x27;s history or bookmarks.; http://php.net/session.use-trans-sidsession.use_trans_sid = 0; Set session ID character length. This value could be between 22 to 256.; Shorter length than default is supported only for compatibility reason.; Users should use 32 or more chars.; http://php.net/session.sid-length; Default Value: 32; Development Value: 26; Production Value: 26session.sid_length = 26; The URL rewriter will look for URLs in a defined set of HTML tags.; &lt;form&gt; is special; if you include them here, the rewriter will; add a hidden &lt;input&gt; field with the info which is otherwise appended; to URLs. &lt;form&gt; tag&#x27;s action attribute URL will not be modified; unless it is specified.; Note that all valid entries require a &quot;=&quot;, even if no value follows.; Default Value: &quot;a=href,area=href,frame=src,form=&quot;; Development Value: &quot;a=href,area=href,frame=src,form=&quot;; Production Value: &quot;a=href,area=href,frame=src,form=&quot;; http://php.net/url-rewriter.tagssession.trans_sid_tags = &quot;a=href,area=href,frame=src,form=&quot;; URL rewriter does not rewrite absolute URLs by default.; To enable rewrites for absolute paths, target hosts must be specified; at RUNTIME. i.e. use ini_set(); &lt;form&gt; tags is special. PHP will check action attribute&#x27;s URL regardless; of session.trans_sid_tags setting.; If no host is defined, HTTP_HOST will be used for allowed host.; Example value: php.net,www.php.net,wiki.php.net; Use &quot;,&quot; for multiple hosts. No spaces are allowed.; Default Value: &quot;&quot;; Development Value: &quot;&quot;; Production Value: &quot;&quot;;session.trans_sid_hosts=&quot;&quot;; Define how many bits are stored in each character when converting; the binary hash data to something readable.; Possible values:; 4 (4 bits: 0-9, a-f); 5 (5 bits: 0-9, a-v); 6 (6 bits: 0-9, a-z, A-Z, &quot;-&quot;, &quot;,&quot;); Default Value: 4; Development Value: 5; Production Value: 5; http://php.net/session.hash-bits-per-charactersession.sid_bits_per_character = 5; Enable upload progress tracking in $_SESSION; Default Value: On; Development Value: On; Production Value: On; http://php.net/session.upload-progress.enabled;session.upload_progress.enabled = On; Cleanup the progress information as soon as all POST data has been read; (i.e. upload completed).; Default Value: On; Development Value: On; Production Value: On; http://php.net/session.upload-progress.cleanup;session.upload_progress.cleanup = On; A prefix used for the upload progress key in $_SESSION; Default Value: &quot;upload_progress_&quot;; Development Value: &quot;upload_progress_&quot;; Production Value: &quot;upload_progress_&quot;; http://php.net/session.upload-progress.prefix;session.upload_progress.prefix = &quot;upload_progress_&quot;; The index name (concatenated with the prefix) in $_SESSION; containing the upload progress information; Default Value: &quot;PHP_SESSION_UPLOAD_PROGRESS&quot;; Development Value: &quot;PHP_SESSION_UPLOAD_PROGRESS&quot;; Production Value: &quot;PHP_SESSION_UPLOAD_PROGRESS&quot;; http://php.net/session.upload-progress.name;session.upload_progress.name = &quot;PHP_SESSION_UPLOAD_PROGRESS&quot;; How frequently the upload progress should be updated.; Given either in percentages (per-file), or in bytes; Default Value: &quot;1%&quot;; Development Value: &quot;1%&quot;; Production Value: &quot;1%&quot;; http://php.net/session.upload-progress.freq;session.upload_progress.freq = &quot;1%&quot;; The minimum delay between updates, in seconds; Default Value: 1; Development Value: 1; Production Value: 1; http://php.net/session.upload-progress.min-freq;session.upload_progress.min_freq = &quot;1&quot;; Only write session data when session data is changed. Enabled by default.; http://php.net/session.lazy-write;session.lazy_write = On[Assertion]; Switch whether to compile assertions at all (to have no overhead at run-time); -1: Do not compile at all; 0: Jump over assertion at run-time; 1: Execute assertions; Changing from or to a negative value is only possible in php.ini! (For turning assertions on and off at run-time, see assert.active, when zend.assertions = 1); Default Value: 1; Development Value: 1; Production Value: -1; http://php.net/zend.assertionszend.assertions = -1; Assert(expr); active by default.; http://php.net/assert.active;assert.active = On; Throw an AssertionError on failed assertions; http://php.net/assert.exception;assert.exception = On; Issue a PHP warning for each failed assertion. (Overridden by assert.exception if active); http://php.net/assert.warning;assert.warning = On; Don&#x27;t bail out by default.; http://php.net/assert.bail;assert.bail = Off; User-function to be called if an assertion fails.; http://php.net/assert.callback;assert.callback = 0; Eval the expression with current error_reporting(). Set to true if you want; error_reporting(0) around the eval().; http://php.net/assert.quiet-eval;assert.quiet_eval = 0[COM]; path to a file containing GUIDs, IIDs or filenames of files with TypeLibs; http://php.net/com.typelib-file;com.typelib_file =; allow Distributed-COM calls; http://php.net/com.allow-dcom;com.allow_dcom = true; autoregister constants of a component&#x27;s typlib on com_load(); http://php.net/com.autoregister-typelib;com.autoregister_typelib = true; register constants casesensitive; http://php.net/com.autoregister-casesensitive;com.autoregister_casesensitive = false; show warnings on duplicate constant registrations; http://php.net/com.autoregister-verbose;com.autoregister_verbose = true; The default character set code-page to use when passing strings to and from COM objects.; Default: system ANSI code page;com.code_page=[mbstring]; language for internal character representation.; This affects mb_send_mail() and mbstring.detect_order.; http://php.net/mbstring.language;mbstring.language = Japanese; Use of this INI entry is deprecated, use global internal_encoding instead.; internal/script encoding.; Some encoding cannot work as internal encoding. (e.g. SJIS, BIG5, ISO-2022-*); If empty, default_charset or internal_encoding or iconv.internal_encoding is used.; The precedence is: default_charset &lt; internal_encoding &lt; iconv.internal_encoding;mbstring.internal_encoding =; Use of this INI entry is deprecated, use global input_encoding instead.; http input encoding.; mbstring.encoding_translation = On is needed to use this setting.; If empty, default_charset or input_encoding or mbstring.input is used.; The precedence is: default_charset &lt; input_encoding &lt; mbstring.http_input; http://php.net/mbstring.http-input;mbstring.http_input =; Use of this INI entry is deprecated, use global output_encoding instead.; http output encoding.; mb_output_handler must be registered as output buffer to function.; If empty, default_charset or output_encoding or mbstring.http_output is used.; The precedence is: default_charset &lt; output_encoding &lt; mbstring.http_output; To use an output encoding conversion, mbstring&#x27;s output handler must be set; otherwise output encoding conversion cannot be performed.; http://php.net/mbstring.http-output;mbstring.http_output =; enable automatic encoding translation according to; mbstring.internal_encoding setting. Input chars are; converted to internal encoding by setting this to On.; Note: Do _not_ use automatic encoding translation for; portable libs/applications.; http://php.net/mbstring.encoding-translation;mbstring.encoding_translation = Off; automatic encoding detection order.; &quot;auto&quot; detect order is changed according to mbstring.language; http://php.net/mbstring.detect-order;mbstring.detect_order = auto; substitute_character used when character cannot be converted; one from another; http://php.net/mbstring.substitute-character;mbstring.substitute_character = none; overload(replace) single byte functions by mbstring functions.; mail(), ereg(), etc are overloaded by mb_send_mail(), mb_ereg(),; etc. Possible values are 0,1,2,4 or combination of them.; For example, 7 for overload everything.; 0: No overload; 1: Overload mail() function; 2: Overload str*() functions; 4: Overload ereg*() functions; http://php.net/mbstring.func-overload;mbstring.func_overload = 0; enable strict encoding detection.; Default: Off;mbstring.strict_detection = On; This directive specifies the regex pattern of content types for which mb_output_handler(); is activated.; Default: mbstring.http_output_conv_mimetype=^(text/|application/xhtml\\+xml);mbstring.http_output_conv_mimetype=; This directive specifies maximum stack depth for mbstring regular expressions. It is similar; to the pcre.recursion_limit for PCRE.; Default: 100000;mbstring.regex_stack_limit=100000; This directive specifies maximum retry count for mbstring regular expressions. It is similar; to the pcre.backtrack_limit for PCRE.; Default: 1000000;mbstring.regex_retry_limit=1000000[gd]; Tell the jpeg decode to ignore warnings and try to create; a gd image. The warning will then be displayed as notices; disabled by default; http://php.net/gd.jpeg-ignore-warning;gd.jpeg_ignore_warning = 1[exif]; Exif UNICODE user comments are handled as UCS-2BE/UCS-2LE and JIS as JIS.; With mbstring support this will automatically be converted into the encoding; given by corresponding encode setting. When empty mbstring.internal_encoding; is used. For the decode settings you can distinguish between motorola and; intel byte order. A decode setting cannot be empty.; http://php.net/exif.encode-unicode;exif.encode_unicode = ISO-8859-15; http://php.net/exif.decode-unicode-motorola;exif.decode_unicode_motorola = UCS-2BE; http://php.net/exif.decode-unicode-intel;exif.decode_unicode_intel = UCS-2LE; http://php.net/exif.encode-jis;exif.encode_jis =; http://php.net/exif.decode-jis-motorola;exif.decode_jis_motorola = JIS; http://php.net/exif.decode-jis-intel;exif.decode_jis_intel = JIS[Tidy]; The path to a default tidy configuration file to use when using tidy; http://php.net/tidy.default-config;tidy.default_config = /usr/local/lib/php/default.tcfg; Should tidy clean and repair output automatically?; WARNING: Do not use this option if you are generating non-html content; such as dynamic images; http://php.net/tidy.clean-outputtidy.clean_output = Off[soap]; Enables or disables WSDL caching feature.; http://php.net/soap.wsdl-cache-enabledsoap.wsdl_cache_enabled=1; Sets the directory name where SOAP extension will put cache files.; http://php.net/soap.wsdl-cache-dirsoap.wsdl_cache_dir=&quot;/tmp&quot;; (time to live) Sets the number of second while cached file will be used; instead of original one.; http://php.net/soap.wsdl-cache-ttlsoap.wsdl_cache_ttl=86400; Sets the size of the cache limit. (Max. number of WSDL files to cache)soap.wsdl_cache_limit = 5[sysvshm]; A default size of the shared memory segment;sysvshm.init_mem = 10000[ldap]; Sets the maximum number of open links or -1 for unlimited.ldap.max_links = -1[dba];dba.default_handler=[opcache]; Determines if Zend OPCache is enabled;opcache.enable=1; Determines if Zend OPCache is enabled for the CLI version of PHP;opcache.enable_cli=0; The OPcache shared memory storage size.;opcache.memory_consumption=128; The amount of memory for interned strings in Mbytes.;opcache.interned_strings_buffer=8; The maximum number of keys (scripts) in the OPcache hash table.; Only numbers between 200 and 1000000 are allowed.;opcache.max_accelerated_files=10000; The maximum percentage of &quot;wasted&quot; memory until a restart is scheduled.;opcache.max_wasted_percentage=5; When this directive is enabled, the OPcache appends the current working; directory to the script key, thus eliminating possible collisions between; files with the same name (basename). Disabling the directive improves; performance, but may break existing applications.;opcache.use_cwd=1; When disabled, you must reset the OPcache manually or restart the; webserver for changes to the filesystem to take effect.;opcache.validate_timestamps=1; How often (in seconds) to check file timestamps for changes to the shared; memory storage allocation. (&quot;1&quot; means validate once per second, but only; once per request. &quot;0&quot; means always validate);opcache.revalidate_freq=2; Enables or disables file search in include_path optimization;opcache.revalidate_path=0; If disabled, all PHPDoc comments are dropped from the code to reduce the; size of the optimized code.;opcache.save_comments=1; Allow file existence override (file_exists, etc.) performance feature.;opcache.enable_file_override=0; A bitmask, where each bit enables or disables the appropriate OPcache; passes;opcache.optimization_level=0x7FFFBFFF;opcache.dups_fix=0; The location of the OPcache blacklist file (wildcards allowed).; Each OPcache blacklist file is a text file that holds the names of files; that should not be accelerated. The file format is to add each filename; to a new line. The filename may be a full path or just a file prefix; (i.e., /var/www/x blacklists all the files and directories in /var/www; that start with &#x27;x&#x27;). Line starting with a ; are ignored (comments).;opcache.blacklist_filename=; Allows exclusion of large files from being cached. By default all files; are cached.;opcache.max_file_size=0; Check the cache checksum each N requests.; The default value of &quot;0&quot; means that the checks are disabled.;opcache.consistency_checks=0; How long to wait (in seconds) for a scheduled restart to begin if the cache; is not being accessed.;opcache.force_restart_timeout=180; OPcache error_log file name. Empty string assumes &quot;stderr&quot;.;opcache.error_log=; All OPcache errors go to the Web server log.; By default, only fatal errors (level 0) or errors (level 1) are logged.; You can also enable warnings (level 2), info messages (level 3) or; debug messages (level 4).;opcache.log_verbosity_level=1; Preferred Shared Memory back-end. Leave empty and let the system decide.;opcache.preferred_memory_model=; Protect the shared memory from unexpected writing during script execution.; Useful for internal debugging only.;opcache.protect_memory=0; Allows calling OPcache API functions only from PHP scripts which path is; started from specified string. The default &quot;&quot; means no restriction;opcache.restrict_api=; Mapping base of shared memory segments (for Windows only). All the PHP; processes have to map shared memory into the same address space. This; directive allows to manually fix the &quot;Unable to reattach to base address&quot;; errors.;opcache.mmap_base=; Facilitates multiple OPcache instances per user (for Windows only). All PHP; processes with the same cache ID and user share an OPcache instance.;opcache.cache_id=; Enables and sets the second level cache directory.; It should improve performance when SHM memory is full, at server restart or; SHM reset. The default &quot;&quot; disables file based caching.;opcache.file_cache=; Enables or disables opcode caching in shared memory.;opcache.file_cache_only=0; Enables or disables checksum validation when script loaded from file cache.;opcache.file_cache_consistency_checks=1; Implies opcache.file_cache_only=1 for a certain process that failed to; reattach to the shared memory (for Windows only). Explicitly enabled file; cache is required.;opcache.file_cache_fallback=1; Enables or disables copying of PHP code (text segment) into HUGE PAGES.; This should improve performance, but requires appropriate OS configuration.;opcache.huge_code_pages=1; Validate cached file permissions.;opcache.validate_permission=0; Prevent name collisions in chroot&#x27;ed environment.;opcache.validate_root=0; If specified, it produces opcode dumps for debugging different stages of; optimizations.;opcache.opt_debug_level=0; Specifies a PHP script that is going to be compiled and executed at server; start-up.; http://php.net/opcache.preload;opcache.preload=; Preloading code as root is not allowed for security reasons. This directive; facilitates to let the preloading to be run as another user.; http://php.net/opcache.preload_user;opcache.preload_user=; Prevents caching files that are less than this number of seconds old. It; protects from caching of incompletely updated files. In case all file updates; on your site are atomic, you may increase performance by setting it to &quot;0&quot;.;opcache.file_update_protection=2; Absolute path used to store shared lockfiles (for *nix only).;opcache.lockfile_path=/tmp[curl]; A default value for the CURLOPT_CAINFO option. This is required to be an; absolute path.;curl.cainfo =[openssl]; The location of a Certificate Authority (CA) file on the local filesystem; to use when verifying the identity of SSL/TLS peers. Most users should; not specify a value for this directive as PHP will attempt to use the; OS-managed cert stores in its absence. If specified, this value may still; be overridden on a per-stream basis via the &quot;cafile&quot; SSL stream context; option.;openssl.cafile=; If openssl.cafile is not specified or if the CA file is not found, the; directory pointed to by openssl.capath is searched for a suitable; certificate. This value must be a correctly hashed certificate directory.; Most users should not specify a value for this directive as PHP will; attempt to use the OS-managed cert stores in its absence. If specified,; this value may still be overridden on a per-stream basis via the &quot;capath&quot;; SSL stream context option.;openssl.capath=[ffi]; FFI API restriction. Possible values:; &quot;preload&quot; - enabled in CLI scripts and preloaded files (default); &quot;false&quot; - always disabled; &quot;true&quot; - always enabled;ffi.enable=preload; List of headers files to preload, wildcard patterns allowed.;ffi.preload= 4. php-fpm 설정apahce php 조합일때는 mod_php란 모듈을 이용해서 연결을 시켰는데 Nginx와 연동을 위해서는 PHP-FPM 이라는 Fast-Cgi 기능을 설정해야 됩니다. :::tip PHP-FPMFastCGI Process Manager::: 설정 파일 위치는 아래와 같습니다. (별다른 수정없이 기본 설정되로 사용하겠습니다.) 1goodsaem@goodsaem:~$ sudo vi /etc/php/7.4/fpm/php-fpm.conf 5. php www 설정php www 관련 설정을 진행하겠습니다. 먼저 설정파일을 백업 합니다. 1goodsaem@goodsaem:~$ sudo cp -rp /etc/php/7.4/fpm/pool.d/www.conf /etc/php/7.4/fpm/pool.d/www.conf.back 설정 파일을 수정합니다. 1goodsaem@goodsaem:~$ sudo vi /etc/php/7.4/fpm/pool.d/www.conf 아래와 같은 설정 내용등을 찾아서 변경해 주세요. 123456789101112131415161718user = nginxgroup = nginxlisten.owner = nginxlisten.group = nginxlisten.mode = 0660listen = 127.0.0.1:9000pm = dynamicpm.max_children = 50pm.start_servers = 5pm.min_spare_servers = 5pm.max_spare_servers = 40pm.max_requests = 500access.log = /var/log/php-fpm-$pool.access.logaccess.format = &quot;%R - %u %t \\&quot;%m %r%Q%q\\&quot; %s %f %&#123;mili&#125;d %&#123;kilo&#125;M %C%%&quot;slowlog = /var/log/php-fpm-$pool.log.slowrequest_slowlog_timeout = 5php_admin_value[error_log] = /var/log/fpm-php.$pool.error.logphp_admin_flag[log_errors] = on 각 설정이 의미 하는 내용은 아래와 같습니다. listen : Nginx 와 php 연동을 위해 리스턴 하는 아이피 포트를 127.0.0.1:9000 으로 지정했습니다. 웹에서 php에 대한 요청이 들어오면 해당포트로 보내서 php가 처리를 하도록 리스턴 아이피 포트를 지정합니다.:::tip listen &#x3D; &#x2F;run&#x2F;php&#x2F;php7.4-fpm.sock (소켓연결)소켓으로 연결 할수 있습니다. 하지만 무슨 이유인지 연결이 되지 않아 아이피 포트로 지정했습니다.::: pm.max_children : PHP Pool(www) 내에서 가동할 수 있는 최대 자식 프로세스 수를 의미 합니다 pm.start_servers : php-fpm 을 실행할 때 초기에 생성하는 자식 프로세스의 개수입니다 pm.min_spare_servers :idle 상태의 자식 프로세스 개수가 이 개수보다 작으면 자식 프로세스를 생성합니다 pm.max_spare_servers: idle 상태의 자식 프로세스의 최대 개수를 의미 합니다. pm.max_requests : 최대 request를 처리 수 입니다. 500 으로 설정되어 있다면 500번 request 후 프로세스를 다시 생성 하며프로세스가 점진적인 메모리 증가에 대한부분을 방지 할 수 있습니다. www.conf 전체파일123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203204205206207208209210211212213214215216217218219220221222223224225226227228229230231232233234235236237238239240241242243244245246247248249250251252253254255256257258259260261262263264265266267268269270271272273274275276277278279280281282283284285286287288289290291292293294295296297298299300301302303304305306307308309310311312313314315316317318319320321322323324325326327328329330331332333334335336337338339340341342343344345346347348349350351352353354355356357358359360361362363364365366367368369370371372373374375376377378379380381382383384385386387388389390391392393394395396397398399400401402403404405406407408409410411412413414415416417418419420421422423424425426427428429430431432433434435436437438439; Start a new pool named &#x27;www&#x27;.; the variable $pool can be used in any directive and will be replaced by the; pool name (&#x27;www&#x27; here)[www]; Per pool prefix; It only applies on the following directives:; - &#x27;access.log&#x27;; - &#x27;slowlog&#x27;; - &#x27;listen&#x27; (unixsocket); - &#x27;chroot&#x27;; - &#x27;chdir&#x27;; - &#x27;php_values&#x27;; - &#x27;php_admin_values&#x27;; When not set, the global prefix (or /usr) applies instead.; Note: This directive can also be relative to the global prefix.; Default Value: none;prefix = /path/to/pools/$pool; Unix user/group of processes; Note: The user is mandatory. If the group is not set, the default user&#x27;s group; will be used.user = nginxgroup = nginx; The address on which to accept FastCGI requests.; Valid syntaxes are:; &#x27;ip.add.re.ss:port&#x27; - to listen on a TCP socket to a specific IPv4 address on; a specific port;; &#x27;[ip:6:addr:ess]:port&#x27; - to listen on a TCP socket to a specific IPv6 address on; a specific port;; &#x27;port&#x27; - to listen on a TCP socket to all addresses; (IPv6 and IPv4-mapped) on a specific port;; &#x27;/path/to/unix/socket&#x27; - to listen on a unix socket.; Note: This value is mandatory.listen = 127.0.0.1:9000; Set listen(2) backlog.; Default Value: 511 (-1 on FreeBSD and OpenBSD);listen.backlog = 511; Set permissions for unix socket, if one is used. In Linux, read/write; permissions must be set in order to allow connections from a web server. Many; BSD-derived systems allow connections regardless of permissions. The owner; and group can be specified either by name or by their numeric IDs.; Default Values: user and group are set as the running user; mode is set to 0660listen.owner = nginxlisten.group = nginxlisten.mode = 0660; When POSIX Access Control Lists are supported you can set them using; these options, value is a comma separated list of user/group names.; When set, listen.owner and listen.group are ignored;listen.acl_users =;listen.acl_groups =; List of addresses (IPv4/IPv6) of FastCGI clients which are allowed to connect.; Equivalent to the FCGI_WEB_SERVER_ADDRS environment variable in the original; PHP FCGI (5.2.2+). Makes sense only with a tcp listening socket. Each address; must be separated by a comma. If this value is left blank, connections will be; accepted from any ip address.; Default Value: any;listen.allowed_clients = 127.0.0.1; Specify the nice(2) priority to apply to the pool processes (only if set); The value can vary from -19 (highest priority) to 20 (lower priority); Note: - It will only work if the FPM master process is launched as root; - The pool processes will inherit the master process priority; unless it specified otherwise; Default Value: no set; process.priority = -19; Set the process dumpable flag (PR_SET_DUMPABLE prctl) even if the process user; or group is differrent than the master process user. It allows to create process; core dump and ptrace the process for the pool user.; Default Value: no; process.dumpable = yes; Choose how the process manager will control the number of child processes.; Possible Values:; static - a fixed number (pm.max_children) of child processes;; dynamic - the number of child processes are set dynamically based on the; following directives. With this process management, there will be; always at least 1 children.; pm.max_children - the maximum number of children that can; be alive at the same time.; pm.start_servers - the number of children created on startup.; pm.min_spare_servers - the minimum number of children in &#x27;idle&#x27;; state (waiting to process). If the number; of &#x27;idle&#x27; processes is less than this; number then some children will be created.; pm.max_spare_servers - the maximum number of children in &#x27;idle&#x27;; state (waiting to process). If the number; of &#x27;idle&#x27; processes is greater than this; number then some children will be killed.; ondemand - no children are created at startup. Children will be forked when; new requests will connect. The following parameter are used:; pm.max_children - the maximum number of children that; can be alive at the same time.; pm.process_idle_timeout - The number of seconds after which; an idle process will be killed.; Note: This value is mandatory.pm = dynamic; The number of child processes to be created when pm is set to &#x27;static&#x27; and the; maximum number of child processes when pm is set to &#x27;dynamic&#x27; or &#x27;ondemand&#x27;.; This value sets the limit on the number of simultaneous requests that will be; served. Equivalent to the ApacheMaxClients directive with mpm_prefork.; Equivalent to the PHP_FCGI_CHILDREN environment variable in the original PHP; CGI. The below defaults are based on a server without much resources. Don&#x27;t; forget to tweak pm.* to fit your needs.; Note: Used when pm is set to &#x27;static&#x27;, &#x27;dynamic&#x27; or &#x27;ondemand&#x27;; Note: This value is mandatory.pm.max_children = 50; The number of child processes created on startup.; Note: Used only when pm is set to &#x27;dynamic&#x27;; Default Value: (min_spare_servers + max_spare_servers) / 2pm.start_servers = 5; The desired minimum number of idle server processes.; Note: Used only when pm is set to &#x27;dynamic&#x27;; Note: Mandatory when pm is set to &#x27;dynamic&#x27;pm.min_spare_servers = 5; The desired maximum number of idle server processes.; Note: Used only when pm is set to &#x27;dynamic&#x27;; Note: Mandatory when pm is set to &#x27;dynamic&#x27;pm.max_spare_servers = 40; The number of seconds after which an idle process will be killed.; Note: Used only when pm is set to &#x27;ondemand&#x27;; Default Value: 10s;pm.process_idle_timeout = 10s;; The number of requests each child process should execute before respawning.; This can be useful to work around memory leaks in 3rd party libraries. For; endless request processing specify &#x27;0&#x27;. Equivalent to PHP_FCGI_MAX_REQUESTS.; Default Value: 0pm.max_requests = 500; The URI to view the FPM status page. If this value is not set, no URI will be; recognized as a status page. It shows the following informations:; pool - the name of the pool;; process manager - static, dynamic or ondemand;; start time - the date and time FPM has started;; start since - number of seconds since FPM has started;; accepted conn - the number of request accepted by the pool;; listen queue - the number of request in the queue of pending; connections (see backlog in listen(2));; max listen queue - the maximum number of requests in the queue; of pending connections since FPM has started;; listen queue len - the size of the socket queue of pending connections;; idle processes - the number of idle processes;; active processes - the number of active processes;; total processes - the number of idle + active processes;; max active processes - the maximum number of active processes since FPM; has started;; max children reached - number of times, the process limit has been reached,; when pm tries to start more children (works only for; pm &#x27;dynamic&#x27; and &#x27;ondemand&#x27;);; Value are updated in real time.; Example output:; pool: www; process manager: static; start time: 01/Jul/2011:17:53:49 +0200; start since: 62636; accepted conn: 190460; listen queue: 0; max listen queue: 1; listen queue len: 42; idle processes: 4; active processes: 11; total processes: 15; max active processes: 12; max children reached: 0;; By default the status page output is formatted as text/plain. Passing either; &#x27;html&#x27;, &#x27;xml&#x27; or &#x27;json&#x27; in the query string will return the corresponding; output syntax. Example:; http://www.foo.bar/status; http://www.foo.bar/status?json; http://www.foo.bar/status?html; http://www.foo.bar/status?xml;; By default the status page only outputs short status. Passing &#x27;full&#x27; in the; query string will also return status for each pool process.; Example:; http://www.foo.bar/status?full; http://www.foo.bar/status?json&amp;full; http://www.foo.bar/status?html&amp;full; http://www.foo.bar/status?xml&amp;full; The Full status returns for each process:; pid - the PID of the process;; state - the state of the process (Idle, Running, ...);; start time - the date and time the process has started;; start since - the number of seconds since the process has started;; requests - the number of requests the process has served;; request duration - the duration in µs of the requests;; request method - the request method (GET, POST, ...);; request URI - the request URI with the query string;; content length - the content length of the request (only with POST);; user - the user (PHP_AUTH_USER) (or &#x27;-&#x27; if not set);; script - the main script called (or &#x27;-&#x27; if not set);; last request cpu - the %cpu the last request consumed; it&#x27;s always 0 if the process is not in Idle state; because CPU calculation is done when the request; processing has terminated;; last request memory - the max amount of memory the last request consumed; it&#x27;s always 0 if the process is not in Idle state; because memory calculation is done when the request; processing has terminated;; If the process is in Idle state, then informations are related to the; last request the process has served. Otherwise informations are related to; the current request being served.; Example output:; ************************; pid: 31330; state: Running; start time: 01/Jul/2011:17:53:49 +0200; start since: 63087; requests: 12808; request duration: 1250261; request method: GET; request URI: /test_mem.php?N=10000; content length: 0; user: -; script: /home/fat/web/docs/php/test_mem.php; last request cpu: 0.00; last request memory: 0;; Note: There is a real-time FPM status monitoring sample web page available; It&#x27;s available in: /usr/share/php/7.4/fpm/status.html;; Note: The value must start with a leading slash (/). The value can be; anything, but it may not be a good idea to use the .php extension or it; may conflict with a real PHP file.; Default Value: not set;pm.status_path = /status; The ping URI to call the monitoring page of FPM. If this value is not set, no; URI will be recognized as a ping page. This could be used to test from outside; that FPM is alive and responding, or to; - create a graph of FPM availability (rrd or such);; - remove a server from a group if it is not responding (load balancing);; - trigger alerts for the operating team (24/7).; Note: The value must start with a leading slash (/). The value can be; anything, but it may not be a good idea to use the .php extension or it; may conflict with a real PHP file.; Default Value: not set;ping.path = /ping; This directive may be used to customize the response of a ping request. The; response is formatted as text/plain with a 200 response code.; Default Value: pong;ping.response = pong; The access log file; Default: not setaccess.log = /var/log/php-fpm-$pool.access.log; The access log format.; The following syntax is allowed; %%: the &#x27;%&#x27; character; %C: %CPU used by the request; it can accept the following format:; - %&#123;user&#125;C for user CPU only; - %&#123;system&#125;C for system CPU only; - %&#123;total&#125;C for user + system CPU (default); %d: time taken to serve the request; it can accept the following format:; - %&#123;seconds&#125;d (default); - %&#123;miliseconds&#125;d; - %&#123;mili&#125;d; - %&#123;microseconds&#125;d; - %&#123;micro&#125;d; %e: an environment variable (same as $_ENV or $_SERVER); it must be associated with embraces to specify the name of the env; variable. Some exemples:; - server specifics like: %&#123;REQUEST_METHOD&#125;e or %&#123;SERVER_PROTOCOL&#125;e; - HTTP headers like: %&#123;HTTP_HOST&#125;e or %&#123;HTTP_USER_AGENT&#125;e; %f: script filename; %l: content-length of the request (for POST request only); %m: request method; %M: peak of memory allocated by PHP; it can accept the following format:; - %&#123;bytes&#125;M (default); - %&#123;kilobytes&#125;M; - %&#123;kilo&#125;M; - %&#123;megabytes&#125;M; - %&#123;mega&#125;M; %n: pool name; %o: output header; it must be associated with embraces to specify the name of the header:; - %&#123;Content-Type&#125;o; - %&#123;X-Powered-By&#125;o; - %&#123;Transfert-Encoding&#125;o; - ....; %p: PID of the child that serviced the request; %P: PID of the parent of the child that serviced the request; %q: the query string; %Q: the &#x27;?&#x27; character if query string exists; %r: the request URI (without the query string, see %q and %Q); %R: remote IP address; %s: status (response code); %t: server time the request was received; it can accept a strftime(3) format:; %d/%b/%Y:%H:%M:%S %z (default); The strftime(3) format must be encapsuled in a %&#123;&lt;strftime_format&gt;&#125;t tag; e.g. for a ISO8601 formatted timestring, use: %&#123;%Y-%m-%dT%H:%M:%S%z&#125;t; %T: time the log has been written (the request has finished); it can accept a strftime(3) format:; %d/%b/%Y:%H:%M:%S %z (default); The strftime(3) format must be encapsuled in a %&#123;&lt;strftime_format&gt;&#125;t tag; e.g. for a ISO8601 formatted timestring, use: %&#123;%Y-%m-%dT%H:%M:%S%z&#125;t; %u: remote user;; Default: &quot;%R - %u %t \\&quot;%m %r\\&quot; %s&quot;access.format = &quot;%R - %u %t \\&quot;%m %r%Q%q\\&quot; %s %f %&#123;mili&#125;d %&#123;kilo&#125;M %C%%&quot;; The log file for slow requests; Default Value: not set; Note: slowlog is mandatory if request_slowlog_timeout is setslowlog = /var/log/$pool.log.slow; The timeout for serving a single request after which a PHP backtrace will be; dumped to the &#x27;slowlog&#x27; file. A value of &#x27;0s&#x27; means &#x27;off&#x27;.; Available units: s(econds)(default), m(inutes), h(ours), or d(ays); Default Value: 0request_slowlog_timeout = 5; Depth of slow log stack trace.; Default Value: 20;request_slowlog_trace_depth = 20; The timeout for serving a single request after which the worker process will; be killed. This option should be used when the &#x27;max_execution_time&#x27; ini option; does not stop script execution for some reason. A value of &#x27;0&#x27; means &#x27;off&#x27;.; Available units: s(econds)(default), m(inutes), h(ours), or d(ays); Default Value: 0;request_terminate_timeout = 0; The timeout set by &#x27;request_terminate_timeout&#x27; ini option is not engaged after; application calls &#x27;fastcgi_finish_request&#x27; or when application has finished and; shutdown functions are being called (registered via register_shutdown_function).; This option will enable timeout limit to be applied unconditionally; even in such cases.; Default Value: no;request_terminate_timeout_track_finished = no; Set open file descriptor rlimit.; Default Value: system defined value;rlimit_files = 1024; Set max core size rlimit.; Possible Values: &#x27;unlimited&#x27; or an integer greater or equal to 0; Default Value: system defined value;rlimit_core = 0; Chroot to this directory at the start. This value must be defined as an; absolute path. When this value is not set, chroot is not used.; Note: you can prefix with &#x27;$prefix&#x27; to chroot to the pool prefix or one; of its subdirectories. If the pool prefix is not set, the global prefix; will be used instead.; Note: chrooting is a great security feature and should be used whenever; possible. However, all PHP paths will be relative to the chroot; (error_log, sessions.save_path, ...).; Default Value: not set;chroot =; Chdir to this directory at the start.; Note: relative path can be used.; Default Value: current directory or / when chroot;chdir = /var/www; Redirect worker stdout and stderr into main error log. If not set, stdout and; stderr will be redirected to /dev/null according to FastCGI specs.; Note: on highloaded environement, this can cause some delay in the page; process time (several ms).; Default Value: no;catch_workers_output = yes; Decorate worker output with prefix and suffix containing information about; the child that writes to the log and if stdout or stderr is used as well as; log level and time. This options is used only if catch_workers_output is yes.; Settings to &quot;no&quot; will output data as written to the stdout or stderr.; Default value: yes;decorate_workers_output = no; Clear environment in FPM workers; Prevents arbitrary environment variables from reaching FPM worker processes; by clearing the environment in workers before env vars specified in this; pool configuration are added.; Setting to &quot;no&quot; will make all environment variables available to PHP code; via getenv(), $_ENV and $_SERVER.; Default Value: yes;clear_env = no; Limits the extensions of the main script FPM will allow to parse. This can; prevent configuration mistakes on the web server side. You should only limit; FPM to .php extensions to prevent malicious users to use other extensions to; execute php code.; Note: set an empty value to allow all extensions.; Default Value: .php;security.limit_extensions = .php .php3 .php4 .php5 .php7; Pass environment variables like LD_LIBRARY_PATH. All $VARIABLEs are taken from; the current environment.; Default Value: clean env;env[HOSTNAME] = $HOSTNAME;env[PATH] = /usr/local/bin:/usr/bin:/bin;env[TMP] = /tmp;env[TMPDIR] = /tmp;env[TEMP] = /tmp; Additional php.ini defines, specific to this pool of workers. These settings; overwrite the values previously defined in the php.ini. The directives are the; same as the PHP SAPI:; php_value/php_flag - you can set classic ini defines which can; be overwritten from PHP call &#x27;ini_set&#x27;.; php_admin_value/php_admin_flag - these directives won&#x27;t be overwritten by; PHP call &#x27;ini_set&#x27;; For php_*flag, valid values are on, off, 1, 0, true, false, yes or no.; Defining &#x27;extension&#x27; will load the corresponding shared extension from; extension_dir. Defining &#x27;disable_functions&#x27; or &#x27;disable_classes&#x27; will not; overwrite previously defined php.ini values, but will append the new value; instead.; Note: path INI options can be relative and will be expanded with the prefix; (pool, global or /usr); Default Value: nothing is defined by default except the values in php.ini and; specified at startup with the -d argument;php_admin_value[sendmail_path] = /usr/sbin/sendmail -t -i -f www@my.domain.com;php_flag[display_errors] = offphp_admin_value[error_log] = /var/log/fpm-php.$pool.error.logphp_admin_flag[log_errors] = on;php_admin_value[memory_limit] = 32M 6. php-fpm service 재시작아래와 같이 명령어를 입력했을때 오류가 발생하지 않으면 설정 완료 입니다. 1goodsaem@goodsaem:~$ sudo systemctl restart php7.4-fpm","categories":[{"name":"설치","slug":"설치","permalink":"http://goodsaem.github.io/categories/%EC%84%A4%EC%B9%98/"},{"name":"PHP","slug":"설치/PHP","permalink":"http://goodsaem.github.io/categories/%EC%84%A4%EC%B9%98/PHP/"}],"tags":[{"name":"PHP","slug":"PHP","permalink":"http://goodsaem.github.io/tags/PHP/"},{"name":"MAC","slug":"MAC","permalink":"http://goodsaem.github.io/tags/MAC/"}]},{"title":"4/8 mac+php+mariadb+nginx+ssl 설정","slug":"setup/mac-php-4","date":"2023-03-25T02:45:00.000Z","updated":"2025-06-29T07:42:01.094Z","comments":true,"path":"setup/mac-php-4/","link":"","permalink":"http://goodsaem.github.io/setup/mac-php-4/","excerpt":"","text":"4. MariaDB 설치mariadb 설치를 진행하겠습니다. 1. 설치우선 repository 부터 아래와 같이 설정합니다. 123goodsaem@goodsaem:~$ sudo apt-get install software-properties-commongoodsaem@goodsaem:~$ sudo apt-key adv --fetch-keys &#x27;https://mariadb.org/mariadb_release_signing_key.asc&#x27;goodsaem@goodsaem:~$ sudo add-apt-repository &#x27;deb [arch=amd64,arm64,ppc64el] https://mirror.yongbok.net/mariadb/repo/10.5/ubuntu bionic main&#x27; 패키지를 업데이트한후 mariadb 설치를 진행합니다. 12goodsaem@goodsaem:~$ sudo apt updategoodsaem@goodsaem:~$ sudo apt install mariadb-server -y 마리아 디비 버전을 확인합니다. 설치 시점의 최신 버전 10.5.9-MariaDB 으로 설치 되었습니다. 12goodsaem@goodsaem:~$ mariadb -Vmariadb Ver 15.1 Distrib 10.5.9-MariaDB, for debian-linux-gnu (x86_64) using readline 5.2 2. 보안설정마리아 디비 보안 관련 설정을 진행 합니다. 1goodsaem@goodsaem:~$ sudo mysql_secure_installation 상세 설정 내용은 아래와 같습니다. 8 라인 root 유저가 사용할 패스워드를 입력합니다. 16 라인 unix socket 인증방식 사용여부는 n 으로 지정해 주세요(root 쉘인증이 기본 사용됩니다.) 21-23 라인 root passwor를 변경합니다. 35 라인 익명 사용자를 삭제 합니다. 41 라인 root의 원격접속을 막습니다. root 는 항상 로컬에서만 접속 가능합니다. 48 라인 test 데이터 베이스를 삭제 합니다. 57 라인 권한에 대한 리로드를 진행합니다. y를 입력해주세요 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465NOTE: RUNNING ALL PARTS OF THIS SCRIPT IS RECOMMENDED FOR ALL MariaDB SERVERS IN PRODUCTION USE! PLEASE READ EACH STEP CAREFULLY!In order to log into MariaDB to secure it, we&#x27;ll need the currentpassword for the root user. If you&#x27;ve just installed MariaDB, andhaven&#x27;t set the root password yet, you should just press enter here.Enter current password for root (enter for none):OK, successfully used password, moving on...Setting the root password or using the unix_socket ensures that nobodycan log into the MariaDB root user without the proper authorisation.You already have your root account protected, so you can safely answer &#x27;n&#x27;.Switch to unix_socket authentication [Y/n] n ... skipping.You already have your root account protected, so you can safely answer &#x27;n&#x27;.Change the root password? [Y/n] yNew password:Re-enter new password:Password updated successfully!Reloading privilege tables.. ... Success!By default, a MariaDB installation has an anonymous user, allowing anyoneto log into MariaDB without having to have a user account created forthem. This is intended only for testing, and to make the installationgo a bit smoother. You should remove them before moving into aproduction environment.Remove anonymous users? [Y/n] y ... Success!Normally, root should only be allowed to connect from &#x27;localhost&#x27;. Thisensures that someone cannot guess at the root password from the network.Disallow root login remotely? [Y/n] y ... Success!By default, MariaDB comes with a database named &#x27;test&#x27; that anyone canaccess. This is also intended only for testing, and should be removedbefore moving into a production environment.Remove test database and access to it? [Y/n] y - Dropping test database... ... Success! - Removing privileges on test database... ... Success!Reloading the privilege tables will ensure that all changes made so farwill take effect immediately.Reload privilege tables now? [Y/n] y ... Success!Cleaning up...All done! If you&#x27;ve completed all of the above steps, your MariaDBinstallation should now be secure.Thanks for using MariaDB! 3. 디비연결아래 명령어를 입력하여 mariadb 에 접속합니다. 성공적으로 접속되었습니다. 1goodsaem@goodsaem:~$ sudo mariadb 123456789Welcome to the MariaDB monitor. Commands end with ; or \\g.Your MariaDB connection id is 53Server version: 10.5.9-MariaDB-1:10.5.9+maria~bionic mariadb.org binary distributionCopyright (c) 2000, 2018, Oracle, MariaDB Corporation Ab and others.Type &#x27;help;&#x27; or &#x27;\\h&#x27; for help. Type &#x27;\\c&#x27; to clear the current input statement.MariaDB [(none)]&gt; 4. 디비설정마리아 db 설정을 진행하겠습니다. 아래 명령어를 입력하여 설정파일을 수정합니다. 1goodsaem@goodsaem:~$ sudo vi /etc/mysql/mariadb.conf.d/50-server.cnf 가장 마지막 줄에 아래 설정을 추가합니다. (119-130 라인) 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130## These groups are read by MariaDB server.# Use it for options that only the server (but not clients) should see# this is read by the standalone daemon and embedded servers[server]# this is only for the mysqld standalone daemon[mysqld]## * Basic Settings#user = mysqlpid-file = /run/mysqld/mysqld.pidbasedir = /usrdatadir = /var/lib/mysqltmpdir = /tmplc-messages-dir = /usr/share/mysqllc-messages = en_USskip-external-locking# Broken reverse DNS slows down connections considerably and name resolve is# safe to skip if there are no &quot;host by domain name&quot; access grants#skip-name-resolve# Instead of skip-networking the default is now to listen only on# localhost which is more compatible and is not less secure.bind-address = 127.0.0.1## * Fine Tuning##key_buffer_size = 128M#max_allowed_packet = 1G#thread_stack = 192K#thread_cache_size = 8# This replaces the startup script and checks MyISAM tables if needed# the first time they are touched#myisam_recover_options = BACKUP#max_connections = 100#table_cache = 64## * Logging and Replication## Both location gets rotated by the cronjob.# Be aware that this log type is a performance killer.# Recommend only changing this at runtime for short testing periods if needed!#general_log_file = /var/log/mysql/mysql.log#general_log = 1# When running under systemd, error logging goes via stdout/stderr to journald# and when running legacy init error logging goes to syslog due to# /etc/mysql/conf.d/mariadb.conf.d/50-mysqld_safe.cnf# Enable this if you want to have error logging into a separate file#log_error = /var/log/mysql/error.log# Enable the slow query log to see queries with especially long duration#slow_query_log_file = /var/log/mysql/mariadb-slow.log#long_query_time = 10#log_slow_verbosity = query_plan,explain#log-queries-not-using-indexes#min_examined_row_limit = 1000# The following can be used as easy to replay backup logs or for replication.# note: if you are setting up a replication slave, see README.Debian about# other settings you may need to change.#server-id = 1#log_bin = /var/log/mysql/mysql-bin.logexpire_logs_days = 10#max_binlog_size = 100M## * SSL/TLS## For documentation, please read# https://mariadb.com/kb/en/securing-connections-for-client-and-server/#ssl-ca = /etc/mysql/cacert.pem#ssl-cert = /etc/mysql/server-cert.pem#ssl-key = /etc/mysql/server-key.pem#require-secure-transport = on## * Character sets## MySQL/MariaDB default is Latin1, but in Debian we rather default to the full# utf8 4-byte character set. See also client.cnfcharacter-set-server = utf8mb4collation-server = utf8mb4_general_ci## * InnoDB## InnoDB is enabled by default with a 10MB datafile in /var/lib/mysql/.# Read the manual for more InnoDB related options. There are many!# Most important is to give InnoDB 80 % of the system RAM for buffer use:# https://mariadb.com/kb/en/innodb-system-variables/#innodb_buffer_pool_size#innodb_buffer_pool_size = 8G# this is only for embedded server[embedded]# This group is only read by MariaDB servers, not by MySQL.# If you use the same .cnf file for MySQL and MariaDB,# you can put MariaDB-only options here[mariadb]# This group is only read by MariaDB-10.5 servers.# If you use the same .cnf file for MariaDB of different versions,# use this group for options that older servers don&#x27;t understand[mariadb-10.5]server-id=1log_bin = binlogexpire_logs_days=10innodb_buffer_pool_size = 384Minnodb_file_per_table=TRUEcharacter-set-client-handshake=OFFskip-character-set-client-handshakemax_allowed_packet=500Minit_connect=SET collation_connection = utf8mb4_general_ciinit_connect=SET NAMES utf8mb4character-set-server = utf8mb4collation-server = utf8mb4_general_ci 설정된 값이 적용되도록 마리아 디비를 재시작 합니다. 1goodsaem@goodsaem:~$ sudo systemctl restart mariadb 5. 데이터베이스 생성아래 명령어로 데이터 베이스를 생성합니다. 12MariaDB [(none)]&gt; create database goodsaem;Query OK, 1 row affected (0.001 sec) 생성된 데이터 베이스를 확인합니다. 1234567891011MariaDB [(none)]&gt; show databases;+--------------------+| Database |+--------------------+| goodsaem || information_schema || mysql || performance_schema || test |+--------------------+5 rows in set (0.000 sec) 6. 유저생성 및 권한 부여생성한 데이터베이스를 사용할 유저를 생성합니다. 12MariaDB [(none)]&gt; CREATE USER goodsaem@localhost identified by &#x27;xxxxxxxxx&#x27;;Query OK, 0 rows affected (0.009 sec) 생성한 유저에게 신규 데이터베이스의 모든 권한을 부여 합니다. 12MariaDB [(none)]&gt; grant all privileges on goodsaem.* to &#x27;goodsaem&#x27;@&#x27;localhost&#x27;;Query OK, 0 rows affected (0.012 sec) 변경된 내용을 적용합니다. 12MariaDB [none]&gt; flush privileges;Query OK, 0 rows affected (0.000 sec)","categories":[{"name":"설치","slug":"설치","permalink":"http://goodsaem.github.io/categories/%EC%84%A4%EC%B9%98/"},{"name":"PHP","slug":"설치/PHP","permalink":"http://goodsaem.github.io/categories/%EC%84%A4%EC%B9%98/PHP/"}],"tags":[{"name":"PHP","slug":"PHP","permalink":"http://goodsaem.github.io/tags/PHP/"},{"name":"MAC","slug":"MAC","permalink":"http://goodsaem.github.io/tags/MAC/"}]},{"title":"3/8 mac+php+mariadb+nginx+ssl 설정","slug":"setup/mac-php-3","date":"2023-03-25T02:35:00.000Z","updated":"2025-06-29T07:42:01.094Z","comments":true,"path":"setup/mac-php-3/","link":"","permalink":"http://goodsaem.github.io/setup/mac-php-3/","excerpt":"","text":"3. Nginx 설치Linux + Nginx + MariaDB + PHP 조합의 LEMP 설치를 진행하겠습니다. 첫번째로 Nginx 에 대해서 설치 하겠습니다. 1. Nginx 현위치https://news.netcraft.com/archives/category/web-server-survey/netcrat의 21년 웹서버 점유율을 보면 아래와 같습니다. 비동기로 동작하는 nginx 는 apache 보다 가볍고 속도도 더 빠르다고 합니다.아래 데이터를 보더라도 nginx 가 apache 를 앞지르고 있는것으로 보입니다. 그래서 저도 nginx 로 설정하겠습니다. Developer December 2020 Percent January 2021 Percent Change nginx 411,191,213 33.48% 399,330,927 33.33% -0.15 Apache 332,420,092 27.07% 316,046,149 26.38% -0.69 Microsoft 97,532,495 7.94% 89,781,136 7.49% -0.45 Google 46,924,883 3.82% 46,190,660 3.86% 0 2. Nginx 버전Nginx는 MainLine 버전과 stable 버전 2가지가 존재 합니다. 메인라이는 새로운 기능 및 업데이트 및 버그 패치가 동시에 진행되고 stable 은메인라인에서 버그패치만 진행하는 버전입니다. 메이저 버전을 올리고 싶지 않고 사용하고 싶다면 stable 버전이 좋겠지만 전 최신 기능과 update및 버그 픽스가 동시에 이루어지는 mainline으로 설치를 진행하겠습니다. 3. 설치Nginx 설치를 위해 의존성 있는 패키지 설치를 진행합니다. 1goodsaem@goodsaem:~$ sudo apt install curl gnupg2 ca-certificates lsb-release -y 메인라인 패키지 리스트를 추가 합니다. 12goodsaem@goodsaem:~$ sudo echo &quot;deb http://nginx.org/packages/mainline/ubuntu `lsb_release -cs` nginx&quot; | sudo tee /etc/apt/sources.list.d/nginx.listdeb http://nginx.org/packages/mainline/ubuntu bionic nginx 패키지를 업데이트 합니다. 1sudo apt update 업데이트시 아래와 같이 NO_PUBKEY ABF5BD827BD9BF62 에러가 발생한다면 키를 업데이트 합니다. 1~5 라인12345678910111213goodsaem@goodsaem:~$ sudo apt updateHit:1 http://kr.archive.ubuntu.com/ubuntu bionic InReleaseGet:2 http://nginx.org/packages/mainline/ubuntu bionic InRelease [2862 B]Err:2 http://nginx.org/packages/mainline/ubuntu bionic InRelease The following signatures couldn&#x27;t be verified because the public key is not available: NO_PUBKEY ABF5BD827BD9BF62Hit:3 http://kr.archive.ubuntu.com/ubuntu bionic-updates InReleaseHit:4 http://kr.archive.ubuntu.com/ubuntu bionic-backports InReleaseHit:5 http://kr.archive.ubuntu.com/ubuntu bionic-security InReleaseReading package lists... DoneW: GPG error: http://nginx.org/packages/mainline/ubuntu bionic InRelease: The following signatures couldn&#x27;t be verified because the public key is not available: NO_PUBKEY ABF5BD827BD9BF62E: The repository &#x27;http://nginx.org/packages/mainline/ubuntu bionic InRelease&#x27; is not signed.N: Updating from such a repository can&#x27;t be done securely, and is therefore disabled by default.N: See apt-secure(8) manpage for repository creation and user configuration details. 1번 라인과 같이 키를 업데이트 합니다. 123456goodsaem@goodsaem:~$ sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys ABF5BD827BD9BF62Executing: /tmp/apt-key-gpghome.2V0gKSSHqy/gpg.1.sh --keyserver keyserver.ubuntu.com --recv-keys ABF5BD827BD9BF62gpg: key ABF5BD827BD9BF62: 14 signatures not checked due to missing keysgpg: key ABF5BD827BD9BF62: public key &quot;nginx signing key &lt;signing-key@nginx.com&gt;&quot; importedgpg: Total number processed: 1gpg: imported: 1 nginx 를 설치합니다. 1goodsaem@goodsaem:~$ sudo apt install nginx 설치된 버전을 확인 합니다. 1.19.8 최신 버전으로 설치 되었습니다. 123456goodsaem@goodsaem:~$ nginx -Vnginx version: nginx/1.19.8built by gcc 7.5.0 (Ubuntu 7.5.0-3ubuntu1~18.04) built with OpenSSL 1.1.1 11 Sep 2018TLS SNI support enabledconfigure arguments: --prefix=/etc/nginx --sbin-path=/usr/sbin/nginx --modules-path=/usr/lib/nginx/modules --conf-path=/etc/nginx/nginx.conf --error-log-path=/var/log/nginx/error.log --http-log-path=/var/log/nginx/access.log --pid-path=/var/run/nginx.pid --lock-path=/var/run/nginx.lock --http-client-body-temp-path=/var/cache/nginx/client_temp --http-proxy-temp-path=/var/cache/nginx/proxy_temp --http-fastcgi-temp-path=/var/cache/nginx/fastcgi_temp --http-uwsgi-temp-path=/var/cache/nginx/uwsgi_temp --http-scgi-temp-path=/var/cache/nginx/scgi_temp --user=nginx --group=nginx --with-compat --with-file-aio --with-threads --with-http_addition_module --with-http_auth_request_module --with-http_dav_module --with-http_flv_module --with-http_gunzip_module --with-http_gzip_static_module --with-http_mp4_module --with-http_random_index_module --with-http_realip_module --with-http_secure_link_module --with-http_slice_module --with-http_ssl_module --with-http_stub_status_module --with-http_sub_module --with-http_v2_module --with-mail --with-mail_ssl_module --with-stream --with-stream_realip_module --with-stream_ssl_module --with-stream_ssl_preread_module --with-cc-opt=&#x27;-g -O2 -fdebug-prefix-map=/data/builder/debuild/nginx-1.19.8/debian/debuild-base/nginx-1.19.8=. -fstack-protector-strong -Wformat -Werror=format-security -Wp,-D_FORTIFY_SOURCE=2 -fPIC&#x27; --with-ld-opt=&#x27;-Wl,-Bsymbolic-functions -Wl,-z,relro -Wl,-z,now -Wl,--as-needed -pie&#x27; 4. Nginx 시작아래 명령어를 입력하여 nginx 를 시작합니다. 1goodsaem@goodsaem:~$ sudo systemctl start nginx virtualbox 설정 네트워크 고급 포트 포워딩에서 80 과 443 포트를 아래와 같이 추가합니다. 웹브라우저에서 http://localhost 접속해서 아래와 같은 화면이 나오면 설정 완료 입니다.","categories":[{"name":"설치","slug":"설치","permalink":"http://goodsaem.github.io/categories/%EC%84%A4%EC%B9%98/"},{"name":"PHP","slug":"설치/PHP","permalink":"http://goodsaem.github.io/categories/%EC%84%A4%EC%B9%98/PHP/"}],"tags":[{"name":"PHP","slug":"PHP","permalink":"http://goodsaem.github.io/tags/PHP/"},{"name":"MAC","slug":"MAC","permalink":"http://goodsaem.github.io/tags/MAC/"}]},{"title":"2/8 mac+php+mariadb+nginx+ssl 설정","slug":"setup/mac-php-2","date":"2023-03-25T02:25:00.000Z","updated":"2025-06-29T07:42:01.088Z","comments":true,"path":"setup/mac-php-2/","link":"","permalink":"http://goodsaem.github.io/setup/mac-php-2/","excerpt":"","text":"2. sever 설정ubuntu 서버의 설정을 진행 하겠습니다. 1. 버전확인먼저 버전을 확인합니다. 다운로드 받은 파일로 설치되어 있습니다. 123456goodsaem@goodsaem:~$ lsb_release -aNo LSB modules are available.Distributor ID: UbuntuDescription: Ubuntu 18.04.5 LTSRelease: 18.04Codename: bionic 2. nopasswd 설정설치나 설정을 할때 root 권한을 획득하기 위해 sudo 명령어를 입력하는데 그때 마다 패스워드를 입력하면 힘드니sudo 명령어 입력시 패스워드를 입력하지 않도록 설정합니다. %sudo ALL&#x3D;(ALL:ALL) ALL 이라고 된부분을 아래와 같이 %sudo ALL&#x3D;(ALL:ALL) NOPASSWD:ALL 로 수정 합니다. 26라인12345678910111213141516171819202122232425262728293031## This file MUST be edited with the &#x27;visudo&#x27; command as root.## Please consider adding local content in /etc/sudoers.d/ instead of# directly modifying this file.## See the man page for details on how to write a sudoers file.#Defaults env_resetDefaults mail_badpassDefaults secure_path=&quot;/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/snap/bin&quot;# Host alias specification# User alias specification# Cmnd alias specification# User privilege specificationroot ALL=(ALL:ALL) ALL# Members of the admin group may gain root privileges%admin ALL=(ALL) ALL# Allow members of group sudo to execute any command%sudo ALL=(ALL:ALL) NOPASSWD:ALL# See sudoers(5) for more information on &quot;#include&quot; directives:#includedir /etc/sudoers.d 3. 패키지 update &amp; upgrde12goodsaem@goodsaem:~$ sudo apt updategoodsaem@goodsaem:~$ sudo apt upgrade 4. timezone 설정기본 설치하고 나면 timezone이 utc로 설정 되어 있습니다.타입존을 kst 로 변경합니다. 현재 타임존 확인 12goodsaem@goodsaem:~$ dateSun Mar 21 05:28:50 UTC 2021 kst 로 변경 123goodsaem@goodsaem:~$ sudo timedatectl set-timezone &#x27;Asia/Seoul&#x27;goodsaem@goodsaem:~$ dateSun Mar 21 14:30:38 KST 2021 5. hosts 설정 변경공인 아이피 정보를 아래와 같이 설정 합니다. 1goodsaem@goodsaem:~$ sudo vi /etc/hosts 3라인12345678910127.0.0.1 localhost127.0.1.1 goodsaem1.222.222.222 goodsaem.ml# The following lines are desirable for IPv6 capable hosts::1 ip6-localhost ip6-loopbackfe00::0 ip6-localnetff00::0 ip6-mcastprefixff02::1 ip6-allnodesff02::2 ip6-allrouters","categories":[{"name":"설치","slug":"설치","permalink":"http://goodsaem.github.io/categories/%EC%84%A4%EC%B9%98/"},{"name":"PHP","slug":"설치/PHP","permalink":"http://goodsaem.github.io/categories/%EC%84%A4%EC%B9%98/PHP/"}],"tags":[{"name":"PHP","slug":"PHP","permalink":"http://goodsaem.github.io/tags/PHP/"},{"name":"MAC","slug":"MAC","permalink":"http://goodsaem.github.io/tags/MAC/"}]},{"title":"1/8 mac+php+mariadb+nginx+ssl 설정","slug":"setup/mac-php-1","date":"2023-03-25T02:15:00.000Z","updated":"2025-06-29T07:42:01.084Z","comments":true,"path":"setup/mac-php-1/","link":"","permalink":"http://goodsaem.github.io/setup/mac-php-1/","excerpt":"","text":"1. 맥개발 환경mac virtualbox 환경에 ubuntu 18.04.5 서버를 구축하겠습니다. 1. 다운로드아래 url 에서 다운로들 진행합니다. https://ubuntu.com/download/server 2. virtualbox 에서 설치하기새로 만들기를 클릭합니다. 이름은 ubuntu 라고 입력합니다. 메모리 크기는 적당하게 4G로 설정합니다. 하드 디스크 만들기 새 하드디스크를 지정합니다. 하드 디스크 종류는 vdi 를 선택합니다. 물리적 하드 드라이브에 저장은 동적 할당을 지정합니다. 파일 및 크기 확인하고 디스크 용량은 30G 로 지정합니다. 설정이 끝나면 시작 버튼을 눌러 시작합니다. 시작할때 다운로드 받은 iso 이미지를 선택합니다. 키보드는 korean 으로 설정합니다. 중간에 기본선택해서 다음단계로 넘어가다가 open ssh server 부분만 설치 체크 합니다. 설치가 완료되고 나면 설정 버튼을 클릭한후 네트워크 탭을 클릭하고 포트 포워딩 버튼을 클릭합니다. 이름에 ssh 라고 입력하고 호스트 게스트 포트 모두 22 로 지정합니다.이 설정은 22번 포트로 ssh 통해서 연결하겠다는 의미 입니다. 3. ssh 접속1번라인 명령어로 ssh 접속을 시도하면 2번과 같이 패스워드를 물어보는데 설치시 입력했던비밀 번호를 입력합니다. 접속이 정상 완료되었습니다. 12345678910111213141516171819202122ssh goodsaem@127.0.0.1goodsaem@127.0.0.1&#x27;s password:Welcome to Ubuntu 18.04.5 LTS (GNU/Linux 4.15.0-139-generic x86_64) * Documentation: https://help.ubuntu.com * Management: https://landscape.canonical.com * Support: https://ubuntu.com/advantage System information as of Sun Mar 21 15:13:22 KST 2021 System load: 0.0 Processes: 96 Usage of /: 28.6% of 19.56GB Users logged in: 1 Memory usage: 4% IP address for enp0s3: 10.0.2.15 Swap usage: 0%0 packages can be updated.0 of these updates are security updates.*** System restart required ***Last login: Sun Mar 21 12:16:17 2021 from 10.0.2.2","categories":[{"name":"설치","slug":"설치","permalink":"http://goodsaem.github.io/categories/%EC%84%A4%EC%B9%98/"},{"name":"PHP","slug":"설치/PHP","permalink":"http://goodsaem.github.io/categories/%EC%84%A4%EC%B9%98/PHP/"}],"tags":[{"name":"PHP","slug":"PHP","permalink":"http://goodsaem.github.io/tags/PHP/"},{"name":"MAC","slug":"MAC","permalink":"http://goodsaem.github.io/tags/MAC/"}]},{"title":"MAC + PHP + RESTAPI 환경설정","slug":"setup/php-restapi","date":"2023-03-24T23:41:32.000Z","updated":"2025-06-29T07:42:01.124Z","comments":true,"path":"setup/php-restapi/","link":"","permalink":"http://goodsaem.github.io/setup/php-restapi/","excerpt":"","text":"PHP RestApi 환경 셋업백엔드 서비스가 필요한데 spring boot 로 구현하면 시간이 걸릴것 같아 php 로 정말 간단한 restful api 구현할려고 합니다.mac 에 개발환경을 구축하고 사이트에 올려서 정상적으로 서비스 되는부분 까지 정리해 보겠습니다. 1. 설치순서아래와 같은 순서 되로 설치 진행하겠습니다. php 설치 (7.4 version):::tip php 7.4글을 쓰는 시점에 8.x php 가 있어 이를 설치 했지만 slim framework 설치시 문제가 발생한 관계로 8.x 를 삭제하고7.4 버전 으로 다운 그레이드 해서 다시 설치 했습니다. slim framework 을 이용 하실려는 분들은 참고 하시기 바랍니다.::: composer 설치 slim 설치 apache 설치 apache 설정 2. php 설치@7.4 버전을 명시 하여 7.4 버전 으로 설치해 주세요. 1brew install php@7.4 3. composer 설치composer 는 의존성 관리 도구 입니다. 자바의 maven 이나 gradle npm 같은 거라고 보시면 되겠 네요이것도 설치 간단 합니다. 아래 명령어 입력 하면 끝.. 1brew install composer 4. slim framework 설치아래 명령어 는 phprest 디렉토리 에 slim framework 를 설치하겠다는 의미 입니다. 명령어 입력하고기다리면 디렉토를 알아서 만들고 필요한 파일도 모두 다운로드 받습니다. 참쉽네요. 1composer create-project slim/slim-skeleton phprest 5. apache 설치이번에도 역시 한줄만 입력하시면 됩니다. 1brew install httpd 6. apache 설정apache 환경 설정을 진행 하겠습니다. brew로 설치 하셨다면 &#x2F;usr&#x2F;local&#x2F;etc&#x2F;httpd&#x2F;httpd.conf 파일이 존재합니다.이파일을 수정하겠습니다. 1vi /usr/local/etc/httpd/httpd.conf 서비스 수신 포트를 변경해 주세요. 바꾸시지 않으셔도 상관없습니다. 전 기존에 사용하던 포트랑 충돌을 피하기 위해 포트를 7070 포트로 변경했습니다. 1Listen 7070 mod_rewrite.so 모듈과 libphp7.so 모듈을 활성화 해줍니다. 만약 php 버전이 저와 다르다면 아래 디렉토리 경로를 맞춰 주셔야 합니다. 12LoadModule rewrite_module lib/httpd/modules/mod_rewrite.soLoadModule php7_module /usr/local/opt/php@7.4/lib/httpd/modules/libphp7.so 아파치 서비스 를 시작&#x2F;중지할 유저와 그룹을 지정해 주세요 12User goodsaemGroup admin 위에 까지 일반적인 설정이였다면 이부분이 중요 합니다. 위에서 slim 프레임워크를 phprest 란 디렉토리에 설치를 했습니다. 이디렉토리 아래에public 이란 디렉토리가 생성되었을 거에요 public 디렉토를 DocumentRoot로 잡아주세요 그리고 directory부분도 경로를 맞춰 주세요. 12345678910111213141516171819202122232425262728DocumentRoot &quot;/Users/goodsaem/goodsaem/phprest/public&quot;&lt;Directory &quot;/Users/goodsaem/goodsaem/phprest/public&quot;&gt; # # Possible values for the Options directive are &quot;None&quot;, &quot;All&quot;, # or any combination of: # Indexes Includes FollowSymLinks SymLinksifOwnerMatch ExecCGI MultiViews # # Note that &quot;MultiViews&quot; must be named *explicitly* --- &quot;Options All&quot; # doesn&#x27;t give it to you. # # The Options directive is both complicated and important. Please see # http://httpd.apache.org/docs/2.4/mod/core.html#options # for more information. # Options Indexes FollowSymLinks # # AllowOverride controls what directives may be placed in .htaccess files. # It can be &quot;All&quot;, &quot;None&quot;, or any combination of the keywords: # AllowOverride FileInfo AuthConfig Limit # AllowOverride All # # Controls who can get stuff from this server. # Require all granted&lt;/Directory&gt; index.php 가 디렉토리의 인덱스가 되도록 아래와 같이 설정하고 확장자가 php이면 php 로 인식할 수 있도록 아래와 같이 설정 합니다. 12345678&lt;IfModule dir_module&gt; DirectoryIndex index.php index.html&lt;/IfModule&gt;&lt;FilesMatch \\.php$&gt; SetHandler application/x-httpd-php&lt;/FilesMatch&gt; 설정이 끝났다면 apache 서비스를 시작합니다. 1brew services start httpd 웹브라우저를 통해 확인 합니다. http://localhost:7070/Hello world! 가 보인다면 설치 완료 입니다. 7 디렉토리 구조여기 까지 문제 없이 진행 하셨 다면 프로젝트 디렉토리 구조는 아래와 같습니다. 박스 친 부분을 수정 하겠습니다. settings.php 파일을 수정합니다. 아래 색상 강조한 부분을 각자 환경에 맞게 수정해주세요db 연결 끝. 12345678910111213141516171819202122232425262728293031323334353637383940414243&lt;?phpdeclare(strict_types=1);use App\\Application\\Settings\\Settings;use App\\Application\\Settings\\SettingsInterface;use DI\\ContainerBuilder;use Monolog\\Logger;return function (ContainerBuilder $containerBuilder) &#123; // Global Settings Object $containerBuilder-&gt;addDefinitions([ SettingsInterface::class =&gt; function () &#123; return new Settings([ &#x27;displayErrorDetails&#x27; =&gt; true, // Should be set to false in production &#x27;logger&#x27; =&gt; [ &#x27;name&#x27; =&gt; &#x27;slim-app&#x27;, &#x27;path&#x27; =&gt; isset($_ENV[&#x27;docker&#x27;]) ? &#x27;php://stdout&#x27; : __DIR__ . &#x27;/../logs/app.log&#x27;, &#x27;level&#x27; =&gt; Logger::DEBUG, ], &quot;db&quot; =&gt; [ &#x27;driver&#x27; =&gt; &#x27;mysql&#x27;, &#x27;host&#x27; =&gt; &#x27;localhost&#x27;, &#x27;username&#x27; =&gt; &#x27;xxxxx&#x27;, &#x27;database&#x27; =&gt; &#x27;xxxxx&#x27;, &#x27;password&#x27; =&gt; &#x27;xxxxx&#x27;, &#x27;charset&#x27; =&gt; &#x27;utf8mb4&#x27;, &#x27;collation&#x27; =&gt; &#x27;utf8mb4_unicode_ci&#x27;, &#x27;flags&#x27; =&gt; [ // Turn off persistent connections PDO::ATTR_PERSISTENT =&gt; false, // Enable exceptions PDO::ATTR_ERRMODE =&gt; PDO::ERRMODE_EXCEPTION, // Emulate prepared statements PDO::ATTR_EMULATE_PREPARES =&gt; true, // Set default fetch mode to array PDO::ATTR_DEFAULT_FETCH_MODE =&gt; PDO::FETCH_ASSOC ], ], ]); &#125; ]);&#125;; dependencies.php 파일을 입력한 db 정보로 연결 합니다. 123456789101112131415161718192021222324252627282930313233343536373839404142434445&lt;?phpdeclare(strict_types=1);use App\\Application\\Settings\\SettingsInterface;use DI\\ContainerBuilder;use Monolog\\Handler\\StreamHandler;use Monolog\\Logger;use Monolog\\Processor\\UidProcessor;use Psr\\Container\\ContainerInterface;use Psr\\Log\\LoggerInterface;return function (ContainerBuilder $containerBuilder) &#123; $containerBuilder-&gt;addDefinitions([ LoggerInterface::class =&gt; function (ContainerInterface $c) &#123; $settings = $c-&gt;get(SettingsInterface::class); $loggerSettings = $settings-&gt;get(&#x27;logger&#x27;); $logger = new Logger($loggerSettings[&#x27;name&#x27;]); $processor = new UidProcessor(); $logger-&gt;pushProcessor($processor); $handler = new StreamHandler($loggerSettings[&#x27;path&#x27;], $loggerSettings[&#x27;level&#x27;]); $logger-&gt;pushHandler($handler); return $logger; &#125;, PDO::class =&gt; function (ContainerInterface $c) &#123; $settings = $c-&gt;get(SettingsInterface::class); $dbSettings = $settings-&gt;get(&#x27;db&#x27;); $host = $dbSettings[&#x27;host&#x27;]; $dbname = $dbSettings[&#x27;database&#x27;]; $username = $dbSettings[&#x27;username&#x27;]; $password = $dbSettings[&#x27;password&#x27;]; $charset = $dbSettings[&#x27;charset&#x27;]; $flags = $dbSettings[&#x27;flags&#x27;]; $dsn = &quot;mysql:host=$host;dbname=$dbname;charset=$charset&quot;; return new PDO($dsn, $username, $password); &#125;, ]);&#125;; 우선 tasks 란 테이블을 생성 해 주세요.. 12345678910CREATE TABLE IF NOT EXISTS tasks ( task_id INT AUTO_INCREMENT PRIMARY KEY, title VARCHAR(255) NOT NULL, start_date DATE, due_date DATE, status TINYINT NOT NULL, priority TINYINT NOT NULL, description TEXT, created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP) post 방식으로 tasks를 호출하면 db에 값을 입력하는 rest api 입니다.get 방식의 takks는 값을 불러와서 json 형태로 리턴하는 api 입니다. 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768&lt;?phpdeclare(strict_types=1);use App\\Application\\Actions\\User\\ListUsersAction;use App\\Application\\Actions\\User\\ViewUserAction;use Psr\\Http\\Message\\ResponseInterface as Response;use Psr\\Http\\Message\\ServerRequestInterface as Request;use Slim\\App;use Slim\\Interfaces\\RouteCollectorProxyInterface as Group;return function (App $app) &#123; $app-&gt;options(&#x27;/&#123;routes:.*&#125;&#x27;, function (Request $request, Response $response) &#123; // CORS Pre-Flight OPTIONS Request Handler return $response; &#125;); $app-&gt;get(&#x27;/&#x27;, function (Request $request, Response $response) &#123; $response-&gt;getBody()-&gt;write(&#x27;Hello world!&#x27;); return $response; &#125;); $app-&gt;group(&#x27;/users&#x27;, function (Group $group) &#123; $group-&gt;get(&#x27;&#x27;, ListUsersAction::class); $group-&gt;get(&#x27;/&#123;id&#125;&#x27;, ViewUserAction::class); &#125;); $app-&gt;get(&#x27;/api/customers&#x27; , function(Request $request , Response $response)&#123; $response-&gt;getBody()-&gt;write(&#x27;CUSTOMERS!&#x27;); return $response; &#125;); $app-&gt;get(&#x27;/tasks&#x27;, function (Request $request, Response $response) &#123; $db = $this-&gt;get(PDO::class); $sth = $db-&gt;prepare(&quot;SELECT * FROM tasks ORDER BY task_id&quot;); $sth-&gt;execute(); $data = $sth-&gt;fetchAll(PDO::FETCH_ASSOC); $payload = json_encode($data); $response-&gt;getBody()-&gt;write($payload); return $response-&gt;withHeader(&#x27;Content-Type&#x27;, &#x27;application/json&#x27;); &#125;); $app-&gt;post(&#x27;/tasks&#x27;, function (Request $request, Response $response) &#123; $db = $this-&gt;get(PDO::class); $contents = json_decode(file_get_contents(&#x27;php://input&#x27;), true); foreach ($contents as $item) &#123; $sth = $db-&gt;prepare(&quot; INSERT INTO `tasks` ( `title`, `start_date`, `due_date`, `status`, `priority`, `description`, `created_at` ) VALUES ( :title, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, :status, :priority, :description, CURRENT_TIMESTAMP )&quot;); $sth-&gt;bindParam(&#x27;:title&#x27;, $item[&#x27;title&#x27;]); $sth-&gt;bindParam(&#x27;:status&#x27;, $item[&#x27;status&#x27;]); $sth-&gt;bindParam(&#x27;:priority&#x27;, $item[&#x27;priority&#x27;]); $sth-&gt;bindParam(&#x27;:description&#x27;, $item[&#x27;description&#x27;]); $sth-&gt;execute(); &#125; $response-&gt;getBody()-&gt;write( json_encode($contents)); return $response-&gt;withHeader(&#x27;Content-Type&#x27;, &#x27;application/json&#x27;); &#125;);&#125;; 8. 테스트Vue 로 간단하게 title 과 status , priority 를 입력 받아 저장하고 조회하는 화면을 만들어 보았습니다. 마무리java 로 이정도 서비스 구축 할려면 꽤나 시간이 많이 걸렸을것 같은데요 역시 갓 php 입니다. 이건 조금 사용 하다가 버릴 예정이므로 인증 (oauth2) 같은부분은 구현을 하지 않을 텐데요.. 혹시 기회가 된다면 다시 정리하겠습니다. 글 읽어주셔서 감사합니다.","categories":[{"name":"설치","slug":"설치","permalink":"http://goodsaem.github.io/categories/%EC%84%A4%EC%B9%98/"},{"name":"PHP","slug":"설치/PHP","permalink":"http://goodsaem.github.io/categories/%EC%84%A4%EC%B9%98/PHP/"}],"tags":[{"name":"PHP","slug":"PHP","permalink":"http://goodsaem.github.io/tags/PHP/"}]},{"title":"Mac 에 Maria DB 설치","slug":"setup/mac-mariadb","date":"2023-03-24T23:13:32.000Z","updated":"2025-06-29T07:42:01.083Z","comments":true,"path":"setup/mac-mariadb/","link":"","permalink":"http://goodsaem.github.io/setup/mac-mariadb/","excerpt":"","text":"Mac에 MariaDB 설치mac에 mariadb 를 설치하는 방법입니다. 1. brew install1brew install mariadb ::: spoiler 상세 설치 로그 보기 more… 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384Updating Homebrew...==&gt; Auto-updated Homebrew!Updated 3 taps (heroku/brew, homebrew/core and homebrew/cask).==&gt; New Formulaeas-tree cyrus-sasl geph4 iconsur latino openmodelica pyqt-3d pyqt@5 qt-libiodbc qt-percona-server snowpack wllvmbas55 delve glibc klee libpipeline oras pyqt-builder pyside@2 qt-mariadb qt-postgresql sqlancer xraycrispy-doom enzyme gopass-jsonapi kotlin-language-server openmama projectm pyqt-networkauth python-tabulate qt-mysql qt-unixodbc tomcat@9==&gt; Updated FormulaeUpdated 949 formulae.==&gt; Renamed Formulaeqt5 -&gt; qt@5==&gt; Deleted Formulaegeant4==&gt; New Casksatomic-wallet clicker-for-youtube daedalus-testnet evkey kyokan-bob micro-sniff n1ghtshade rhino skychart veepnbanksiagui code-composer-studio devbook goldenpassport mailtrackerblocker mouse-fix neat-reader simplelink-msp432-sdk the-archive zecwallet-liteclicker-for-netflix cog devutils jandi-statusbar megax mxsrvs nuage simplelink-msp432e4-sdk uniflash zulufx==&gt; Updated CasksUpdated 473 casks.==&gt; Deleted Casksableton-live daedalus-catalyst insomnia-designer kode54-cog mega pins protonmail-unofficial rhinoceros==&gt; Downloading https://homebrew.bintray.com/bottles/mecab-0.996.big_sur.bottle.3.tar.gz==&gt; Downloading from https://d29vzk4ow07wi7.cloudfront.net/53efb8669f932aac26f4669db62eb858e6e31860923460a6c4e74d84685e8146?response-content-disposition=attachment%3Bfilename%3D%22mecab-0.996.big_sur.bottle.3.tar.gz%22&amp;Policy=eyJTdGF0ZW1lbnQiOiBbeyJSZXNvdXJjZSI6Imh0dHAqOi8vZDI5dnprNG93MDd3aTc######################################################################## 100.0%==&gt; Downloading https://homebrew.bintray.com/bottles/mecab-ipadic-2.7.0-20070801.big_sur.bottle.tar.gz==&gt; Downloading from https://d29vzk4ow07wi7.cloudfront.net/4fc2878d95314057c5d0f726cc1dacf2ce110c7e84b77806e958970f9b34ccc5?response-content-disposition=attachment%3Bfilename%3D%22mecab-ipadic-2.7.0-20070801.big_sur.bottle.tar.gz%22&amp;Policy=eyJTdGF0ZW1lbnQiOiBbeyJSZXNvdXJjZSI6Imh0dHAqOi8vZDI5d######################################################################## 100.0%==&gt; Downloading https://homebrew.bintray.com/bottles/msgpack-3.3.0.big_sur.bottle.tar.gz==&gt; Downloading from https://d29vzk4ow07wi7.cloudfront.net/434fdf5aea4bdee584755531889cbbe40a093a4a85dbb993dcca60516a6aaeab?response-content-disposition=attachment%3Bfilename%3D%22msgpack-3.3.0.big_sur.bottle.tar.gz%22&amp;Policy=eyJTdGF0ZW1lbnQiOiBbeyJSZXNvdXJjZSI6Imh0dHAqOi8vZDI5dnprNG93MDd3aTc######################################################################## 100.0%==&gt; Downloading https://homebrew.bintray.com/bottles/groonga-11.0.0.big_sur.bottle.tar.gz==&gt; Downloading from https://d29vzk4ow07wi7.cloudfront.net/dc6597d2ebfe1227fa22b2fe648cd34078856b580ce4bcf2cf1ecc754c32fe9a?response-content-disposition=attachment%3Bfilename%3D%22groonga-11.0.0.big_sur.bottle.tar.gz%22&amp;Policy=eyJTdGF0ZW1lbnQiOiBbeyJSZXNvdXJjZSI6Imh0dHAqOi8vZDI5dnprNG93MDd3aT######################################################################## 100.0%==&gt; Downloading https://homebrew.bintray.com/bottles/mariadb-10.5.9.big_sur.bottle.tar.gz==&gt; Downloading from https://d29vzk4ow07wi7.cloudfront.net/a976c60a001d2dacd4a9106a667cdcc0292a78da794d39e81cf86944c4f8010b?response-content-disposition=attachment%3Bfilename%3D%22mariadb-10.5.9.big_sur.bottle.tar.gz%22&amp;Policy=eyJTdGF0ZW1lbnQiOiBbeyJSZXNvdXJjZSI6Imh0dHAqOi8vZDI5dnprNG93MDd3aT######################################################################## 100.0%==&gt; Installing dependencies for mariadb: mecab, mecab-ipadic, msgpack and groonga==&gt; Installing mariadb dependency: mecab==&gt; Pouring mecab-0.996.big_sur.bottle.3.tar.gz🍺 /usr/local/Cellar/mecab/0.996: 20 files, 4.4MB==&gt; Installing mariadb dependency: mecab-ipadic==&gt; Pouring mecab-ipadic-2.7.0-20070801.big_sur.bottle.tar.gz==&gt; CaveatsTo enable mecab-ipadic dictionary, add to /usr/local/etc/mecabrc: dicdir = /usr/local/lib/mecab/dic/ipadic==&gt; Summary🍺 /usr/local/Cellar/mecab-ipadic/2.7.0-20070801: 16 files, 50.6MB==&gt; Installing mariadb dependency: msgpack==&gt; Pouring msgpack-3.3.0.big_sur.bottle.tar.gz🍺 /usr/local/Cellar/msgpack/3.3.0: 757 files, 5.3MB==&gt; Installing mariadb dependency: groonga==&gt; Pouring groonga-11.0.0.big_sur.bottle.tar.gz🍺 /usr/local/Cellar/groonga/11.0.0: 924 files, 45.2MB==&gt; Installing mariadb==&gt; Pouring mariadb-10.5.9.big_sur.bottle.tar.gz==&gt; /usr/local/Cellar/mariadb/10.5.9/bin/mysql_install_db --verbose --user=goodsaem --basedir=/usr/local/Cellar/mariadb/10.5.9 --datadir=/usr/local/var/mysql --tmpdir=/tmp==&gt; CaveatsA &quot;/etc/my.cnf&quot; from another install may interfere with a Homebrew-builtserver starting up correctly.MySQL is configured to only allow connections from localhost by defaultTo have launchd start mariadb now and restart at login: brew services start mariadbOr, if you don&#x27;t want/need a background service you can just run: mysql.server start==&gt; Summary🍺 /usr/local/Cellar/mariadb/10.5.9: 782 files, 182.2MB==&gt; Caveats==&gt; mecab-ipadicTo enable mecab-ipadic dictionary, add to /usr/local/etc/mecabrc: dicdir = /usr/local/lib/mecab/dic/ipadic==&gt; mariadbA &quot;/etc/my.cnf&quot; from another install may interfere with a Homebrew-builtserver starting up correctly.MySQL is configured to only allow connections from localhost by defaultTo have launchd start mariadb now and restart at login: brew services start mariadbOr, if you don&#x27;t want/need a background service you can just run: mysql.server start ::: 설치된 mariadb 버전을 확인합니다. 12mariadb -V mariadb Ver 15.1 Distrib 10.5.9-MariaDB, for osx10.16 (x86_64) using readline 5.1 2. mariadb 시작아래 명령어로 mariadb를 시작합니다. 12brew services start mariadb==&gt; Successfully started `mariadb` (label: homebrew.mxcl.mariadb) 3. mariadb root 암호변경아래 명령어로 mariadb에 접속합니다. 1mariadb ::: spoiler 접속로그 more… 1234567Welcome to the MariaDB monitor. Commands end with ; or \\g.Your MariaDB connection id is 19Server version: 10.5.9-MariaDB HomebrewCopyright (c) 2000, 2018, Oracle, MariaDB Corporation Ab and others.Type &#x27;help;&#x27; or &#x27;\\h&#x27; for help. Type &#x27;\\c&#x27; to clear the current input statement. ::: root 패스워드를 변경합니다. 12MariaDB [none]&gt; alter use &#x27;root&#x27;@&#x27;localhost&#x27; identified by &#x27;변경할암호&#x27;;Query OK, 0 rows affected (0.012 sec) 변경된 내용을 적용합니다. 12MariaDB [none]&gt; flush privileges;Query OK, 0 rows affected (0.000 sec) 4. 신규 데이터 베이스 생성아래 명령어로 데이터 베이스를 생성합니다. 12MariaDB [(none)]&gt; create database goodsaem;Query OK, 1 row affected (0.001 sec) 생성된 데이터 베이스를 확인합니다. 1234567891011MariaDB [(none)]&gt; show databases;+--------------------+| Database |+--------------------+| goodsaem || information_schema || mysql || performance_schema || test |+--------------------+5 rows in set (0.000 sec) 5. 사용자 추가 및 권한부여생성한 데이터베이스를 사용할 유저를 생성합니다. 12MariaDB [(none)]&gt; CREATE USER goodsaem@localhost identified by &#x27;xxxxxxxxx&#x27;;Query OK, 0 rows affected (0.009 sec) 생성한 유저에게 신규 데이터베이스의 모든 권한을 부여 합니다. 12MariaDB [(none)]&gt; grant all privileges on goodsaem.* to &#x27;goodsaem&#x27;@&#x27;localhost&#x27;;Query OK, 0 rows affected (0.012 sec) 변경된 내용을 적용합니다. 12MariaDB [none]&gt; flush privileges;Query OK, 0 rows affected (0.000 sec)","categories":[{"name":"설치","slug":"설치","permalink":"http://goodsaem.github.io/categories/%EC%84%A4%EC%B9%98/"},{"name":"MARIADB","slug":"설치/MARIADB","permalink":"http://goodsaem.github.io/categories/%EC%84%A4%EC%B9%98/MARIADB/"}],"tags":[{"name":"MARIADB","slug":"MARIADB","permalink":"http://goodsaem.github.io/tags/MARIADB/"}]},{"title":"Windows + Vue.js 개발환경 구성","slug":"setup/vue-dev","date":"2023-03-24T23:13:32.000Z","updated":"2025-06-29T07:42:01.128Z","comments":true,"path":"setup/vue-dev/","link":"","permalink":"http://goodsaem.github.io/setup/vue-dev/","excerpt":"","text":"vue.js 개발환경Vue.Js Frontend 개발을 위한 환경 설정 방법에 대해서 알아 보겠습니다. 1. Visual Studio Code 설치 설치 파일을 다운로드 합니다. https://code.visualstudio.com/docs/?dv=win 다운로드 받은 파일을 더블 클릭하여 설치를 진행합니다. 동의합니다를 선택하여 [다음][다음] 을 클릭하여 설치를 완료합니다. 2. Visual Studio Extension 설치vscode 에서 사용하는 vue.js 관련 유용한 플러그인을 설치합니다. Vetur Extension : Vetur 플러그인은 Linting , Syntax-highlighting , Formatting등을 지원해 줍니다. vue peek Extention : vue콤포넌트를 통해 해당 콤포넌트 파일을 열어서 바로 수정할수 있는 기능을 지원해줍니다. vue 2 snippets exteion : vue 코드 자동 완성 기능을 지원해줍니다. 2. Chrome Plug-in 설크롬 플러그인이 설치되어 있으면 Vuex 를 사용시 컴포넌트의 상태변경을 추적할수 있으면 해당 상태 변경을 임의되로 변경하여 테스트 해볼수 있습니다.아래 url 로 접속 하여 플러그인을 설치 합니다. https://chrome.google.com/webstore/detail/vuejs-devtools/nhdogjmejiglipccpnnnanhbledajbpd 3. node.js 설치https://nodejs.org/ko/ 사이트에 접속하신후 LTS 안정버전을 다운로드 받아서 설치를 진행합니다. 다음 다음을 클릭하여 default 로 설치합니다. 아래 명령어로 버전이 확인되면 정상 설치 완료된 상태 입니다. 12node --versionv15.3.0 ※ windows 한글깨짐 관련 문제는 아래 url 을 참고하세요. https://blog.jiniworld.me/84 vue-cli 를 설치합니다. 1npm i -g vue-cli 초기 프로젝트를 생성 합니다. 123vue init webpack vstartcd vstartnpm run dev 프로젝트가 정상적으로 생성되면 아래와 같은 그림을 볼수 있습니다. 마무리개발 환경만 setup 이 진행되고 나면 이제 개발하는 일만 남았네요 다음시간부터는 좀더 좋은 컨텐츠로 찾아뵙겠습니다. 글 읽어 주셔서 감사합니다.","categories":[{"name":"설치","slug":"설치","permalink":"http://goodsaem.github.io/categories/%EC%84%A4%EC%B9%98/"},{"name":"VUE","slug":"설치/VUE","permalink":"http://goodsaem.github.io/categories/%EC%84%A4%EC%B9%98/VUE/"}],"tags":[{"name":"VUE","slug":"VUE","permalink":"http://goodsaem.github.io/tags/VUE/"}]},{"title":"H2DB 설치","slug":"setup/h2db","date":"2023-03-24T14:55:32.000Z","updated":"2025-06-29T07:42:01.071Z","comments":true,"path":"setup/h2db/","link":"","permalink":"http://goodsaem.github.io/setup/h2db/","excerpt":"","text":"H2 DB 설치H2 DB 는 Java 로 만들어진 관계형 데이터 베이스(rdb) 입니다. 일반적으로 Java application 에 임베디드 되어많이 사용됩니다. 클라이언트 및 서버 모두 실행되며 배포가 쉽고 설치시 필요한 용량이 적게 드는 경량 db 입니다.H2 DB 설치하는 방법 및 H2 DB에 연결하여 테이블을 생성하고 insert delete update select 등의 문장을실행해 보겠습니다. 1. 설치최신 버전 설치를 진행해주세요 아래 다운로드 경로에서 각각의 os에 맞는 파일을 다운로드 합니다. 전 사용하는 pc가 mac 이라 Platform-independent 버전을 다운로드 받았습니다. https://www.h2database.com/html/download.html 적당한 위치에 압축을 풀어 주시면 설치 완료되었습니다. 2. 데이터 베이스 생성 압축을 푼 디렉토리의 bin 디렉토리로 이동합니다. cd &#x2F;Users&#x2F;goodsaem&#x2F;goodsaem&#x2F;h2&#x2F;bin 1번 라인 명령어를 실행하여 h2 shell 로 접속합니다. 7번 라인 처럼 jdbc url을 지정합니다. (&#x2F;Users&#x2F;goodsaem&#x2F;goodsaem&#x2F;api&#x2F; 디렉토리아래에 goodsaem 이라는 db 를 생성하겠다는 의미 입니다.) h2 db 는 메모리에 데이터를 저장하는 방식과 파일로 저장하는 방식 2가지가 있습니다. 메모리 저장 방식을 사용하면 서비스 재시작 시 모든 데이터가 삭제 되므로 파일에 저장하는 방식으로 파이이 저장되는 디렉토리를 지정했습니다. 메모리 jdbc:h2:mem:2 파일 jdbc:h2:.&#x2F;path&#x2F;to&#x2F;database 11번 라인에 데이터베이스 사용자명을 입력합니다. 12-14번 라인처럼 패스워드를 입력합니다. 그렇게 하면 신규 db 생성이 완료됩니다. 24번 라인 quit 명령어를 입력하여 데이터 베이스 생성을 완료합니다. 12345678910111213141516171819202122232425java -cp h2-*.jar org.h2.tools.ShellWelcome to H2 Shell 1.4.199 (2019-03-13)Exit with Ctrl+C[Enter] jdbc:h2:tcp://localhost/~/testURL jdbc:h2:/Users/goodsaem/goodsaem/api/goodsaem[Enter] org.h2.DriverDriver [Enter] saUser goodsaemPassword Type the same password again to confirm database creation.Password ConnectedCommands are case insensitive; SQL statements end with &#x27;;&#x27;help or ? Display this helplist Toggle result list / stack trace modemaxwidth Set maximum column width (default is 100)autocommit Enable or disable autocommithistory Show the last 20 statementsquit or exit Close the connection and exitsql&gt; quitConnection closed 해당 디렉토리에 db 파일이 제대로 생성되었는지 확인 하겠습니다. 아래 디렉토리에서 확인을 해보면 12번라인 처럼 goodsaem.mv.db가 정상적으로 생성되었음을알수 있습니다. 1234567891011121314151617cd /Users/goodsaem/goodsaem/apils -altotal 96drwxr-xr-x@ 14 goodsaem staff 448 2 20 11:09 .drwxr-xr-x 22 goodsaem staff 704 2 17 22:59 ..-rw-r--r--@ 1 goodsaem staff 444 2 10 12:57 .gitignoredrwxr-xr-x 7 goodsaem staff 224 2 10 22:33 .gradledrwxr-xr-x 10 goodsaem staff 320 2 20 10:58 .idea-rw-r--r--@ 1 goodsaem staff 937 2 10 12:57 HELP.mddrwxr-xr-x 6 goodsaem staff 192 2 11 01:50 build-rw-r--r--@ 1 goodsaem staff 819 2 10 22:38 build.gradle-rw-r--r-- 1 goodsaem staff 20480 2 20 11:31 goodsaem.mv.dbdrwxr-xr-x@ 3 goodsaem staff 96 2 10 12:57 gradle-rwxr-xr-x@ 1 goodsaem staff 5766 2 10 12:57 gradlew-rw-r--r--@ 1 goodsaem staff 2763 2 10 12:57 gradlew.bat-rw-r--r--@ 1 goodsaem staff 25 2 10 12:57 settings.gradledrwxr-xr-x@ 4 goodsaem staff 128 2 10 12:57 src 3.실행아래와 같은 명령어를 입력합니다. 12cd /Users/goodsaem/goodsaem/h2/binjava -cp h2*.jar org.h2.tools.Server 그리고 나 웹브라우저에 http://localhost:8082/ 접속하면 아래와 같이 h2 db 로그인 하는 화면이 나옵니다. db 생성시 입력했던 사용자명과 비밀번호를 입력하고 연결 버튼을 클릭합니다. 정상적으로 로그인 되면아래와 같은 화면을 볼수 있습니다. 태이블을 생성하고 insert select update delete 를 진행해 보겠습니다. 샘플 SQL 스크립트 를 클릭합니다. 스크립트가 복사 됩니다. 실행 버튼을 클릭합니다. 정상적으로 실행하면 아래와 같은 결과 화면을 확인할수 있습니다. 4. DBeaver 이용방법전용 ide 툴 DBeaver 연결해 보겠습니다. :::tip DBeaver제가 자주 사용하는 무료 Database Tool 입니다 거의 모든 DB에 연결해서 사용할수 있습니다. H2, MySQL, PostgreSQL, SQLite, Oracle, DB2,SQL Server, Sybase, MS Access, Teradata, Firebird, Apache Hive, Phoenix, Presto, etc. ::: https://dbeaver.io/download/ OS 맞는 파일을 다운로드 받습니다. 다운로드 받은 파일을 더블클릭하여 설치를 진행합니다. 아이콘을 드래그 하여 Applications 폴더로 이동합니다. 실행중인 h2 db 프로세스가 있다면 종료 합니다. (h2 실행중일때는 dbeaver로 연결할수 없습니다. lock 이 걸려 있다는 메시지와 함께 실행이 되지 않습니다.) 응용 프로그램에서 DBeaver 아이콘을 클릭하여 실행합니다. 실행후 플러그 아이콘을 클릭하여 새로운 연결을 진행합니다. 여러 db중 h2 db embeded 아이콘을 선택합니다. Browse 버튼을 클릭하여 db 파일 goodsaem.mv.db 파일을 선택합니다. username password에 db 생성시 입력한 값을 넣고 확인 버튼을 클리하여db에 연결합니다. 좌측에 연결된 db에서 마우스 오른쪽 버튼을 클릭하여 sql 편집기 sql 편집기를 클릭합니다. sql 편집기에 select * from test 라고 쿼리를 입력한후 좌측에 아이콘을 클릭하여 실행하면 아래와 같은 결과를확인할수 있습니다. 마무리h2 db 설치 방법 및 신규 데이터베이스를 생성하고 웹브라우저를 통해 쿼리를 실행하는 방법과 전용 브라우저를 통해서 실행하는 방법에 대해서 알아 보았습니다.좌측 메뉴중 spring &gt; rest api 서버 &gt; 3. h2 db 파트에서 생성한 db 에 연결하여 사용하는 방법에 대해서 보다 자세히 알아 보겠습니다.긴글 읽어 주셔서 진심으로 감사합니다.","categories":[{"name":"설치","slug":"설치","permalink":"http://goodsaem.github.io/categories/%EC%84%A4%EC%B9%98/"},{"name":"H2DB","slug":"설치/H2DB","permalink":"http://goodsaem.github.io/categories/%EC%84%A4%EC%B9%98/H2DB/"}],"tags":[{"name":"h2db","slug":"h2db","permalink":"http://goodsaem.github.io/tags/h2db/"}]},{"title":"GitLab 사용법","slug":"setup/gitlab","date":"2023-03-24T14:15:32.000Z","updated":"2025-06-29T07:42:01.071Z","comments":true,"path":"setup/gitlab/","link":"","permalink":"http://goodsaem.github.io/setup/gitlab/","excerpt":"","text":"개요GitLab은 Git 기반의 협업 소프트웨어 개발 플랫폼으로, 코드 호스팅, 이슈 트래킹, CI&#x2F;CD 파이프라인,협업 도구 등 다양한 기능을 제공한다. github은 소스코드들을 공개해야 무료로 사용할수 있다.gitlab 경우에는 소스 코드를 비공개로 사용할수 있어 선택하게 되었다.일반적인 GitLab을 사용하는 이유는 다음과 같다. 1. 통합된 플랫폼GitLab은 코드 호스팅, 이슈 트래킹, CI&#x2F;CD 파이프라인, 협업 도구 등 다양한 기능을 한 플랫폼에서 제공한다. 이를 통해 개발자는 다른 도구를 사용해야 할 필요 없이 모든 작업을 GitLab에서 처리할 수 있다. 2. 강력한 코드 관리 기능GitLab은 Git 기반의 코드 관리를 위한 다양한 기능을 제공 한다. 브랜치, 태그, 병합 등의 Git 기능 외에도 코드 검토, 코드 검색, 코드 스니펫, 이력 추적 등 다양한 코드 관리 기능을 제공한다. 3. 뛰어난 협업 도구GitLab은 팀 내 협업을 위한 다양한 기능을 제공합니다. 이슈 트래킹, 코드 리뷰, 코드 머지 요청, 웹 IDE 등을 제공하여 팀 내에서 협업하고 코드 품질을 향상시킬 수 있다. 4. CI&#x2F;CD 파이프라인GitLab은 CI&#x2F;CD 파이프라인을 자체적으로 지원하며, 자동화된 빌드, 테스트, 배포를 제공한다. 이를 통해 개발자는 코드 변경 사항을 자동으로 테스트하고 배포할 수 있어 개발 생산성을 높일 수 있다. 5. 보안 기능GitLab은 보안을 강화하기 위한 다양한 기능을 제공한다. 예를 들어, 보안 취약점 자동 탐지, 민감한 데이터 마스킹, 사용자 인증 및 권한 관리 등이 있다. 회원가입회원가입은 gmail 계정만 있으면 한번 클릭으로 가입이 완료된다. 초기설정로그인 하시고 나면 ssh-key와 패스워드를 설정하셔야 됩니다. 둘다 git commit할때 사용하므로미리 작업을 진행합니다. 패스워드 설정 하라는 팝업메시지가 있는데 그걸 클릭하셔서 패스워드 설정하시면 됩니다. ssh key 작업은 mac 기준으로 설명드리겠습니다. 터미널을 실행한후 아래와 같이 입력합니다. 1ssh-keygen -t rsa -b 2048 -C &quot;goodsaem&quot; 중간에 passphrase를 입력하라고 하는데 그냥 엔터를 입력합니다. 그렇게 진행이 되고 나면&#x2F;Users&#x2F;goodsaem&#x2F;.ssh&#x2F;id_rsa 키가 생성됩니다.123456789101112Generating public/private rsa key pair.Enter file in which to save the key (/Users/goodsaem/.ssh/id_rsa):Enter passphrase (empty for no passphrase):Enter same passphrase again:Your identification has been saved in /Users/goodsaem/.ssh/id_rsa.Your public key has been saved in /Users/goodsaem/.ssh/id_rsa.pub.The key fingerprint is:SHA256:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx goodsaemThe key&#x27;s randomart image is:+---[RSA 2048]----+| ... |+----[SHA256]-----+ 생성한 키 내용을 복사합니다. (cat 으로 문자열을 출력한후 드래그해서 복사합니다.) 1cat /Users/goodsaem/.ssh/id_rsa 그리고 나서 key 입력하는 창에 붙여넣기를 하고 저장합니다. https://gitlab.com/-/profile/keys 3. 프로젝트 생성 및 소스 업로드https://gitlab.com/projects/new 페이지에서 신규 프로젝트를 생성합니다. 프로젝트 명을 적당히 입력하고 private 개인용으로 하시고 readme 파일을 생성하지 않은 상태로 create project 버튼을 클릭하여 프로젝틀 생성합니다. 파일을 올릴려고 하는 디렉토리로 이동 한후 아래와 같이 입력합니다. 12git initInitialized empty Git repository in /Users/goodsaem/goodsaem/good/.git/ 생성한 프로젝트에서 Clone Clone with HTTPS 내용을 복사합니다. 그리고 나서 git remote add origin 복사한 부분 붙여 넣기를 합니다. 이 명령어로 remote로 저장하겠다는 뜻이고이때 아이디와 패스워드를 물어보는데 아이디는 이메일 주소를 입력해주시면 되고 패스워드는 설정한 패스워드를 입력합니다. 1git remote add origin git@gitlab.com:bsh96699403/goodsaem.github.io.git 현재 디렉토리의 모든 파일을 git에 추가 합니다. 1git . 추가된 내용을 commit 합니다. 1git commit -m &quot;Initial commit&quot; gitlab.com에 반영합니다. 1git push -u origin master 업로드가 다되어 프로젝트로 이동하면 아래와 같이 모든 파일이 업로드 되었음을 확인할수 있습니다.","categories":[{"name":"설치","slug":"설치","permalink":"http://goodsaem.github.io/categories/%EC%84%A4%EC%B9%98/"},{"name":"GitLab","slug":"설치/GitLab","permalink":"http://goodsaem.github.io/categories/%EC%84%A4%EC%B9%98/GitLab/"}],"tags":[{"name":"gitlab","slug":"gitlab","permalink":"http://goodsaem.github.io/tags/gitlab/"}]},{"title":"mac에 oepnjdk 19.0.1 버전 설치방법","slug":"coding/java/openjdk","date":"2023-03-24T09:40:32.000Z","updated":"2025-06-29T07:42:00.805Z","comments":true,"path":"coding/java/openjdk/","link":"","permalink":"http://goodsaem.github.io/coding/java/openjdk/","excerpt":"","text":"mac에 oepnjdk 19.0.1 버전 설치방법mac에서 openjdk 최신 버전 설치하는 방법에 대해서 정리한 내용이다. openjdk 다운로드아래 사이트에서 설치하고자 하는 jdk 파일을 다운로드 한다. https://jdk.java.net/archive/ 압축해제 후 파일이동다운로드 받은 파일의 압축을 풀어준다.압축푼 파일을 &#x2F;Library&#x2F;Java&#x2F;JavaVirtualMachines 폴더로 이동한다. 1sudo mv jdk-19* /Library/Java/JavaVirtualMachines 확인터미널에서 아래 명령어를 입력하여 설치된 버전을 확인한다. 1java --version 19.0.1 최신버전의 openjdk가 설치되었다. 123openjdk 19.0.1 2022-10-18OpenJDK Runtime Environment (build 19.0.1+10-21)OpenJDK 64-Bit Server VM (build 19.0.1+10-21, mixed mode, sharing)","categories":[{"name":"Coding","slug":"Coding","permalink":"http://goodsaem.github.io/categories/Coding/"},{"name":"java","slug":"Coding/java","permalink":"http://goodsaem.github.io/categories/Coding/java/"}],"tags":[{"name":"openjdk","slug":"openjdk","permalink":"http://goodsaem.github.io/tags/openjdk/"}]},{"title":"로또번호 생성기","slug":"app/app1","date":"2023-03-20T03:28:31.000Z","updated":"2025-06-29T07:42:00.748Z","comments":true,"path":"app/app1/","link":"","permalink":"http://goodsaem.github.io/app/app1/","excerpt":"","text":"테스트","categories":[{"name":"앱","slug":"앱","permalink":"http://goodsaem.github.io/categories/%EC%95%B1/"}],"tags":[{"name":"app","slug":"app","permalink":"http://goodsaem.github.io/tags/app/"}]},{"title":"실무자가 알려주는 vue.js","slug":"coding/vuejs/vue101","date":"2023-03-16T15:00:03.000Z","updated":"2025-06-29T07:42:00.962Z","comments":true,"path":"coding/vuejs/vue101/","link":"","permalink":"http://goodsaem.github.io/coding/vuejs/vue101/","excerpt":"","text":"개요Vue.js는 React.js와 함께 가장 인기있는 자바스크립트 프레임워크 중의 하나이다.w3techs.com의 2023년 3월 16일 기준 시장점유율을 보면 react 대비 아직 많은사이트에서 사용되고 있지는 않지만 트래픽이 높은 사이트에서 활용되고 있음을 알수있다. 1년 넘게 프로젝트를 진행해보면서 느낀건 정말 쉽다는 점이다. 구글 트랜드를 보면 react 가 관심도가 높지만 Vue.js는 React.js 보다 배우기 쉽다는 장점 때문에 지속성장할거라 예상한다. vue.js를 배워두면 react 스벨트 같은것도 쉽게 배울수 있을리라 예상한다. 어떤 내용을 정리할것 인가?vue 문법은 https://ko.vuejs.org/ 기본 문법에 대해서 알수 있으니 반드시 학습 하도록 하자.실무 예제를 접해보면서 필요한 부분에 대해서 설명하는 형태로 진행하고자 한다.아래 내용에 대해서 중점적으로 정리하고 가능하다면 예제 사이트도 만들어서 이해를 높이겠다. vuetify 퀘이사 그리드 에디터 우선 구현hexo 와 vue 개발환경을 합쳐서 보여줄려고 한다. 어떻게 해야 될지 막막하긴한데 정리실무 위주로 설명하는 곳은 많이 없는것 같다.이 마음이 변치 않고 계속 유지 되길 기원하며 글을 마무리 한다.","categories":[{"name":"Coding","slug":"Coding","permalink":"http://goodsaem.github.io/categories/Coding/"},{"name":"vue","slug":"Coding/vue","permalink":"http://goodsaem.github.io/categories/Coding/vue/"}],"tags":[{"name":"vue","slug":"vue","permalink":"http://goodsaem.github.io/tags/vue/"}]},{"title":"애드센스(adsense) 고시를 통과하다.","slug":"blog/blog-adsense","date":"2023-03-13T13:55:07.000Z","updated":"2025-06-29T07:42:00.748Z","comments":true,"path":"blog/blog-adsense/","link":"","permalink":"http://goodsaem.github.io/blog/blog-adsense/","excerpt":"","text":"개요몇번의 과정을 거쳐서 드디어 adsense 고시를 통과 했다.이번에 고시통과하면서 느낀점은 애드센스 고시를 통과하기 위한 비법은 “될때까지 하라” 이다.한동안 블로그 활동을 안하다가 글 하나 올려놓고 다시 신청하니 되었다. 계획애드센스 통과기념으로 검색엔진이 검색이 잘되도록 사이트를 개편 할려고 한다.광고도 잘 보이게하고 또한 요즘 가장 핫한 vue 부분에 집중적으로 글을 게시하겠다.그리고 hexo 와 vue 를 동시에 사용해서 정적인 사이트 + vue.js 가 동작하는 사이트를만들어 볼려고 한다. 아직은 구상중인데 생각한되로 되면 blog 카테고리 쪽에 업데이틀진행예정이다. 마무리요즘 자기계발 도서를 많이 읽고 있다. 행운이 나를 이끄는것같은 느낌이다.난 책만 읽고 마음만 바꿨을 뿐인데 운이 따라오는것 같아 기분좋다.계속 이 텐션 유지 하면서 글을 쓰겠다. 블로그 고정팬이 1,000명이 되는 그날까지계속 달리자..","categories":[{"name":"Blog","slug":"Blog","permalink":"http://goodsaem.github.io/categories/Blog/"}],"tags":[{"name":"일상","slug":"일상","permalink":"http://goodsaem.github.io/tags/%EC%9D%BC%EC%83%81/"}]}],"categories":[{"name":"Setup","slug":"Setup","permalink":"http://goodsaem.github.io/categories/Setup/"},{"name":"Blog","slug":"Blog","permalink":"http://goodsaem.github.io/categories/Blog/"},{"name":"Coding","slug":"Coding","permalink":"http://goodsaem.github.io/categories/Coding/"},{"name":"JHipster","slug":"Coding/JHipster","permalink":"http://goodsaem.github.io/categories/Coding/JHipster/"},{"name":"설치","slug":"설치","permalink":"http://goodsaem.github.io/categories/%EC%84%A4%EC%B9%98/"},{"name":"window2022","slug":"설치/window2022","permalink":"http://goodsaem.github.io/categories/%EC%84%A4%EC%B9%98/window2022/"},{"name":"개발툴","slug":"개발툴","permalink":"http://goodsaem.github.io/categories/%EA%B0%9C%EB%B0%9C%ED%88%B4/"},{"name":"IntelliJ","slug":"개발툴/IntelliJ","permalink":"http://goodsaem.github.io/categories/%EA%B0%9C%EB%B0%9C%ED%88%B4/IntelliJ/"},{"name":"vue","slug":"Coding/vue","permalink":"http://goodsaem.github.io/categories/Coding/vue/"},{"name":"node.js","slug":"설치/node-js","permalink":"http://goodsaem.github.io/categories/%EC%84%A4%EC%B9%98/node-js/"},{"name":"mariadb","slug":"Coding/mariadb","permalink":"http://goodsaem.github.io/categories/Coding/mariadb/"},{"name":"springboot","slug":"Coding/springboot","permalink":"http://goodsaem.github.io/categories/Coding/springboot/"},{"name":"SPRINGBOOT","slug":"설치/SPRINGBOOT","permalink":"http://goodsaem.github.io/categories/%EC%84%A4%EC%B9%98/SPRINGBOOT/"},{"name":"PHP","slug":"설치/PHP","permalink":"http://goodsaem.github.io/categories/%EC%84%A4%EC%B9%98/PHP/"},{"name":"MARIADB","slug":"설치/MARIADB","permalink":"http://goodsaem.github.io/categories/%EC%84%A4%EC%B9%98/MARIADB/"},{"name":"VUE","slug":"설치/VUE","permalink":"http://goodsaem.github.io/categories/%EC%84%A4%EC%B9%98/VUE/"},{"name":"H2DB","slug":"설치/H2DB","permalink":"http://goodsaem.github.io/categories/%EC%84%A4%EC%B9%98/H2DB/"},{"name":"GitLab","slug":"설치/GitLab","permalink":"http://goodsaem.github.io/categories/%EC%84%A4%EC%B9%98/GitLab/"},{"name":"java","slug":"Coding/java","permalink":"http://goodsaem.github.io/categories/Coding/java/"},{"name":"앱","slug":"앱","permalink":"http://goodsaem.github.io/categories/%EC%95%B1/"}],"tags":[{"name":"MobaXterm","slug":"MobaXterm","permalink":"http://goodsaem.github.io/tags/MobaXterm/"},{"name":"Oracle","slug":"Oracle","permalink":"http://goodsaem.github.io/tags/Oracle/"},{"name":"Cloud","slug":"Cloud","permalink":"http://goodsaem.github.io/tags/Cloud/"},{"name":"Free tier","slug":"Free-tier","permalink":"http://goodsaem.github.io/tags/Free-tier/"},{"name":"hexo","slug":"hexo","permalink":"http://goodsaem.github.io/tags/hexo/"},{"name":"fontawesome","slug":"fontawesome","permalink":"http://goodsaem.github.io/tags/fontawesome/"},{"name":"일상","slug":"일상","permalink":"http://goodsaem.github.io/tags/%EC%9D%BC%EC%83%81/"},{"name":"github","slug":"github","permalink":"http://goodsaem.github.io/tags/github/"},{"name":"nodejs","slug":"nodejs","permalink":"http://goodsaem.github.io/tags/nodejs/"},{"name":"git","slug":"git","permalink":"http://goodsaem.github.io/tags/git/"},{"name":"JHipster","slug":"JHipster","permalink":"http://goodsaem.github.io/tags/JHipster/"},{"name":"window2022","slug":"window2022","permalink":"http://goodsaem.github.io/tags/window2022/"},{"name":"windows2022","slug":"windows2022","permalink":"http://goodsaem.github.io/tags/windows2022/"},{"name":"IntelliJ","slug":"IntelliJ","permalink":"http://goodsaem.github.io/tags/IntelliJ/"},{"name":"vue","slug":"vue","permalink":"http://goodsaem.github.io/tags/vue/"},{"name":"node.js","slug":"node-js","permalink":"http://goodsaem.github.io/tags/node-js/"},{"name":"mariadb","slug":"mariadb","permalink":"http://goodsaem.github.io/tags/mariadb/"},{"name":"springboot","slug":"springboot","permalink":"http://goodsaem.github.io/tags/springboot/"},{"name":"AWS","slug":"AWS","permalink":"http://goodsaem.github.io/tags/AWS/"},{"name":"SPRINGBOOT","slug":"SPRINGBOOT","permalink":"http://goodsaem.github.io/tags/SPRINGBOOT/"},{"name":"PHP","slug":"PHP","permalink":"http://goodsaem.github.io/tags/PHP/"},{"name":"MAC","slug":"MAC","permalink":"http://goodsaem.github.io/tags/MAC/"},{"name":"MARIADB","slug":"MARIADB","permalink":"http://goodsaem.github.io/tags/MARIADB/"},{"name":"VUE","slug":"VUE","permalink":"http://goodsaem.github.io/tags/VUE/"},{"name":"h2db","slug":"h2db","permalink":"http://goodsaem.github.io/tags/h2db/"},{"name":"gitlab","slug":"gitlab","permalink":"http://goodsaem.github.io/tags/gitlab/"},{"name":"openjdk","slug":"openjdk","permalink":"http://goodsaem.github.io/tags/openjdk/"},{"name":"app","slug":"app","permalink":"http://goodsaem.github.io/tags/app/"}]}